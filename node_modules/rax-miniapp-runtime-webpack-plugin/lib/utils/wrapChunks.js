"use strict";

var ModuleFilenameHelpers = require('webpack/lib/ModuleFilenameHelpers');

var _require = require('webpack-sources'),
    RawSource = _require.RawSource,
    ConcatSource = _require.ConcatSource;

var _require2 = require('fs-extra'),
    readFileSync = _require2.readFileSync;

var _require3 = require('path'),
    resolve = _require3.resolve;

var adjustCSS = require('../utils/adjustCSS');

var adapter = require('../adapter');

var _require4 = require('../constants'),
    WECHAT_MINIPROGRAM = _require4.WECHAT_MINIPROGRAM;

var matchFile = function matchFile(fileName, ext) {
  return ModuleFilenameHelpers.matchObject({
    test: new RegExp("." + ext + "$")
  }, fileName);
}; // Add content to chunks head and tail


module.exports = function (compilation, chunks, rootDir, target) {
  var FunctionPolyfill = readFileSync(resolve(rootDir, 'templates', 'FunctionPolyfill.js.ejs'), 'utf-8');
  chunks.forEach(function (chunk) {
    chunk.files.forEach(function (fileName) {
      if (matchFile(fileName, 'js')) {
        // Page js
        var headerContent = FunctionPolyfill + "\n          module.exports = function(window, document) {const HTMLElement = window[\"HTMLElement\"];";
        var footerContent = '}';
        compilation.assets[fileName] = new ConcatSource(headerContent, compilation.assets[fileName], footerContent);
      } else if (matchFile(fileName, 'css')) {
        compilation.assets[fileName + "." + adapter[target].css] = new RawSource(adjustCSS(compilation.assets[fileName].source(), target === WECHAT_MINIPROGRAM));
      }
    });
  });
};