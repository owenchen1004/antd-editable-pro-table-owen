"use strict";

var _require = require('path'),
    resolve = _require.resolve,
    extname = _require.extname;

var _require2 = require('fs-extra'),
    readFileSync = _require2.readFileSync;

var ejs = require('ejs');

var adapter = require('../adapter');

var _require3 = require('../constants'),
    MINIAPP = _require3.MINIAPP,
    WECHAT_MINIPROGRAM = _require3.WECHAT_MINIPROGRAM;

var addFileToCompilation = require('../utils/addFileToCompilation');

var getAssetPath = require('../utils/getAssetPath');

var adjustCSS = require('../utils/adjustCSS');

function generateAppJS(compilation, commonAppJSFilePaths, _ref) {
  var target = _ref.target,
      command = _ref.command,
      rootDir = _ref.rootDir;
  var appJsTmpl = readFileSync(resolve(rootDir, 'templates', 'app.js.ejs'), 'utf-8');
  var appJsContent = ejs.render(appJsTmpl, {
    init: "function init(window, document) {" + commonAppJSFilePaths.map(function (filePath) {
      return "require('" + getAssetPath(filePath, 'app.js') + "')(window, document)";
    }).join(';') + "}",
    isMiniApp: target === MINIAPP
  });
  addFileToCompilation(compilation, {
    filename: 'app.js',
    content: appJsContent,
    target: target,
    command: command
  });
}

function generateAppCSS(compilation, _ref2) {
  var target = _ref2.target,
      command = _ref2.command,
      rootDir = _ref2.rootDir;
  // Add default css file to compilation
  var defaultCSSTmpl = adjustCSS(readFileSync(resolve(rootDir, 'templates', 'default.css.ejs'), 'utf-8'), target === WECHAT_MINIPROGRAM); // Generate __rax-view and __rax-text style for rax compiled components

  var raxDefaultCSSTmpl = readFileSync(resolve(rootDir, 'templates', 'rax-default.css.ejs'), 'utf-8');
  addFileToCompilation(compilation, {
    filename: "default." + adapter[target].css,
    content: defaultCSSTmpl + raxDefaultCSSTmpl,
    target: target,
    command: command
  });
  var content = '@import "./default";';
  Object.keys(compilation.assets).forEach(function (asset) {
    if (extname(asset) === '.css') {
      content += "@import \"./" + asset + "\";";
      delete compilation.assets[asset];
    }
  });
  addFileToCompilation(compilation, {
    filename: "app." + adapter[target].css,
    content: content,
    target: target,
    command: command
  });
}

module.exports = {
  generateAppJS: generateAppJS,
  generateAppCSS: generateAppCSS
};