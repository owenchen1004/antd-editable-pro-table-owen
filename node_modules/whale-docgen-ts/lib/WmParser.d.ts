import * as ts from 'typescript';
import { Parser } from './TsParser/parser';
import { TypePaser } from './TypeParser';
import { WmProps, WmParserOptions, WmComponentDoc } from './types';
export declare class WmParser extends Parser {
    parserOptions: WmParserOptions;
    typePaser: TypePaser;
    constructor(program: ts.Program, opts: WmParserOptions);
    isComponent(symbol: ts.Symbol): boolean;
    getWmComponentDoc(symbol: ts.Symbol, source: ts.SourceFile): WmComponentDoc | null;
    getSubWmComponentDoc(parentSymbol: ts.Symbol, symbol: ts.Symbol, source: ts.SourceFile): WmComponentDoc | null;
    getPropsInfo(propsObj: ts.Symbol, defaultProps?: Record<string, string>): WmProps;
}
