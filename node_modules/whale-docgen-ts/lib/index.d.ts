import * as ts from 'typescript';
import { WmComponentDoc, WmParserOptions } from './types';
export * from './utils/propItemType';
export * from './types';
export * from './WmParser';
export declare const defaultOptions: {
    jsx: ts.JsxEmit;
    module: ts.ModuleKind;
    target: ts.ScriptTarget;
};
/**
 * Parses a file with default TS options
 * @param filePath component file that should be parsed
 */
export declare function parse(filePathOrPaths: string | string[], parserOpts?: WmParserOptions): WmComponentDoc[];
/**
 * Constructs a parser for a default configuration.
 */
export declare function withDefaultConfig(parserOpts?: WmParserOptions): {
    parse: (filePathOrPaths: string | string[]) => WmComponentDoc[];
    parseWithProgramProvider: (filePathOrPaths: string | string[], programProvider?: (rootNames: readonly string[], compilerOptions: ts.CompilerOptions) => ts.Program) => WmComponentDoc[];
};
/**
 * Constructs a parser for a specified set of TS compiler options.
 */
export declare function withCompilerOptions(compilerOptions: ts.CompilerOptions, parserOpts?: WmParserOptions): {
    parse: (filePathOrPaths: string | string[]) => WmComponentDoc[];
    parseWithProgramProvider: (filePathOrPaths: string | string[], programProvider?: (rootNames: readonly string[], compilerOptions: ts.CompilerOptions) => ts.Program) => WmComponentDoc[];
};
