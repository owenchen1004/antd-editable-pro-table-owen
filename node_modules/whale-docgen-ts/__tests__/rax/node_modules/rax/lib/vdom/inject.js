"use strict";

exports.__esModule = true;
exports.default = inject;

var _host = _interopRequireDefault(require("./host"));

var _empty = _interopRequireDefault(require("./empty"));

var _native = _interopRequireDefault(require("./native"));

var _text = _interopRequireDefault(require("./text"));

var _composite = _interopRequireDefault(require("./composite"));

var _fragment = _interopRequireDefault(require("./fragment"));

var _reconciler = _interopRequireDefault(require("../devtools/reconciler"));

var _error = require("../error");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function inject(_ref) {
  var driver = _ref.driver,
      measurer = _ref.measurer;
  // Inject component class
  _host.default.__Empty = _empty.default;
  _host.default.__Native = _native.default;
  _host.default.__Text = _text.default;
  _host.default.__Fragment = _fragment.default;
  _host.default.__Composite = _composite.default; // Inject render driver

  if (!(_host.default.driver = driver || _host.default.driver)) {
    if (process.env.NODE_ENV !== 'production') {
      (0, _error.throwError)('Rax driver not found.');
    } else {
      (0, _error.throwMinifiedError)(5);
    }
  }

  if (process.env.NODE_ENV !== 'production') {
    // Inject devtool renderer hook
    _host.default.reconciler = _reconciler.default; // Inject performance measurer

    _host.default.measurer = measurer;
  }
}