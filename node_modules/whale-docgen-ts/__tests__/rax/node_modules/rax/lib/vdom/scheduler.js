"use strict";

exports.__esModule = true;
exports.schedule = schedule;
exports.flush = flush;
exports.scheduleEffect = scheduleEffect;
exports.flushEffect = flushEffect;
exports.scheduleLayout = scheduleLayout;
exports.flushLayout = flushLayout;
exports.scheduler = void 0;
var updateCallbacks = [];
var effectCallbacks = [];
var layoutCallbacks = [];
var scheduler = setTimeout;
exports.scheduler = scheduler;

if (process.env.NODE_ENV !== 'production') {
  // Wrapper timer for hijack timers in jest
  exports.scheduler = scheduler = function scheduler(callback) {
    setTimeout(callback);
  };
}

function invokeFunctionsWithClear(callbacks) {
  var callback;

  while (callback = callbacks.shift()) {
    callback();
  }
} // Schedule before next render


function schedule(callback) {
  if (updateCallbacks.length === 0) {
    scheduler(flush);
  }

  updateCallbacks.push(callback);
} // Flush before next render


function flush() {
  invokeFunctionsWithClear(updateCallbacks);
}

function scheduleEffect(callback) {
  if (effectCallbacks.length === 0) {
    scheduler(flushEffect);
  }

  effectCallbacks.push(callback);
}

function flushEffect() {
  invokeFunctionsWithClear(effectCallbacks);
}

function scheduleLayout(callback) {
  layoutCallbacks.push(callback);
}

function flushLayout() {
  invokeFunctionsWithClear(layoutCallbacks);
}