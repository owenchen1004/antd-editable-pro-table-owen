"use strict";

exports.__esModule = true;
exports.default = void 0;

var _instance = _interopRequireDefault(require("../vdom/instance"));

var _host = _interopRequireDefault(require("../vdom/host"));

var _reconciler = _interopRequireDefault(require("./reconciler"));

var _constant = require("../constant");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DevtoolsHook = {
  ComponentTree: {
    getClosestInstanceFromNode: function getClosestInstanceFromNode(node) {
      return _instance.default.get(node);
    },
    getNodeFromInstance: function getNodeFromInstance(inst) {
      // inst is an internal instance (but could be a composite)
      while (inst[_constant.RENDERED_COMPONENT]) {
        inst = inst[_constant.RENDERED_COMPONENT];
      }

      if (inst) {
        return inst._nativeNode;
      } else {
        return null;
      }
    }
  },
  Mount: {
    get _instancesByReactRootID() {
      var rootComponents = {}; // Ignore display top-level root component

      for (var rootID in _host.default.rootComponents) {
        rootComponents[rootID] = _host.default.rootComponents[rootID][_constant.RENDERED_COMPONENT];
      }

      return rootComponents;
    },

    _renderNewRootComponent: _reconciler.default.renderNewRootComponent
  },
  Reconciler: _reconciler.default,
  // monitor the info of all components
  monitor: null
};
var _default = DevtoolsHook;
exports.default = _default;