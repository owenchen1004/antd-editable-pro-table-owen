"use strict";

exports.__esModule = true;
var _exportNames = {
  Children: true,
  isValidElement: true,
  createFactory: true,
  cloneElement: true
};
exports.default = void 0;

var Rax = _interopRequireWildcard(require("../../index"));

Object.keys(Rax).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === Rax[key]) return;
  exports[key] = Rax[key];
});

var _raxChildren = _interopRequireDefault(require("rax-children"));

exports.Children = _raxChildren.default;

var _raxIsValidElement = _interopRequireDefault(require("rax-is-valid-element"));

exports.isValidElement = _raxIsValidElement.default;

var _raxCreateFactory = _interopRequireDefault(require("rax-create-factory"));

exports.createFactory = _raxCreateFactory.default;

var _raxCloneElement = _interopRequireDefault(require("rax-clone-element"));

exports.cloneElement = _raxCloneElement.default;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

Rax.Children = _raxChildren.default;
Rax.isValidElement = _raxIsValidElement.default;
Rax.createFactory = _raxCreateFactory.default;
Rax.cloneElement = _raxCloneElement.default;
Rax.Component.prototype.isReactComponent = {};
var _default = Rax;
exports.default = _default;