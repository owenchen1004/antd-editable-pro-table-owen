function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

import Component from './component';
import { INTERNAL, RENDERED_COMPONENT } from '../constant';
var rootID = 1;

var Root = /*#__PURE__*/function (_Component) {
  _inheritsLoose(Root, _Component);

  function Root() {
    var _this;

    _this = _Component.call(this) || this; // Using fragment instead of null for avoid create a comment node when init mount

    _this.__element = [];
    _this.__rootID = rootID++;
    return _this;
  }

  var _proto = Root.prototype;

  _proto.__getPublicInstance = function __getPublicInstance() {
    return this.__getRenderedComponent().__getPublicInstance();
  };

  _proto.__getRenderedComponent = function __getRenderedComponent() {
    return this[INTERNAL][RENDERED_COMPONENT];
  };

  _proto.__update = function __update(element) {
    this.__element = element;
    this.forceUpdate();
  };

  _proto.render = function render() {
    return this.__element;
  };

  return Root;
}(Component);

export default Root;