{"version":3,"file":"rax.mjs","sources":["../src/vdom/host.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/checkPropTypes.js","../src/vdom/element.js","../src/types.js","../src/vdom/flattenChildren.js","../src/vdom/scheduler.js","../src/error.js","../src/validateChildKeys.js","../src/createElement.js","../src/invokeFunctionsWithContext.js","../src/vdom/shallowEqual.js","../src/constant.js","../src/hooks.js","../src/toArray.js","../src/vdom/getNearestParent.js","../src/createContext.js","../src/createRef.js","../src/forwardRef.js","../src/memo.js","../src/fragment.js","../src/vdom/base.js","../src/vdom/empty.js","../src/vdom/ref.js","../src/vdom/instantiateComponent.js","../src/vdom/shouldUpdateComponent.js","../src/vdom/getElementKeyName.js","../src/vdom/getPrevSiblingNativeNode.js","../src/vdom/component.js","../src/vdom/root.js","../src/vdom/instance.js","../src/assign.js","../src/vdom/native.js","../src/vdom/text.js","../src/vdom/reactive.js","../src/vdom/updater.js","../src/vdom/performInSandbox.js","../src/vdom/composite.js","../src/vdom/fragment.js","../src/devtools/reconciler.js","../src/vdom/inject.js","../src/render.js","../src/version.js","../src/devtools/index.js","../src/index.js"],"sourcesContent":["/*\n * Stateful things in runtime\n */\nexport default {\n  __mountID: 1,\n  __isUpdating: false,\n  // Inject\n  driver: null,\n  // Roots\n  rootComponents: {},\n  rootInstances: {},\n  // Current owner component\n  owner: null,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","import checkPropTypes from 'prop-types/checkPropTypes';\n\nexport default function Element(type, key, ref, props, owner) {\n  let element = {\n    // Built-in properties that belong on the element\n    type,\n    key,\n    ref,\n    props,\n    // Record the component responsible for creating this element.\n    _owner: owner,\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    const propTypes = type.propTypes;\n\n    // Validate its props provided by the propTypes definition\n    if (propTypes) {\n      const displayName = type.displayName || type.name;\n      checkPropTypes(\n        propTypes,\n        props,\n        'prop',\n        displayName,\n      );\n    }\n\n    // We make validation flag non-enumerable, so the test framework could ignore it\n    Object.defineProperty(element, '__validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n\n    // Props is immutable\n    if (Object.freeze) {\n      Object.freeze(props);\n    }\n  }\n\n  return element;\n};\n","export function isNull(obj) {\n  return obj === null;\n}\n\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\n\nexport function isObject(obj) {\n  return typeof obj === 'object';\n}\n\nexport function isPlainObject(obj) {\n  return EMPTY_OBJECT.toString.call(obj) === '[object Object]';\n}\n\nexport function isArray(array) {\n  return Array.isArray(array);\n}\n\nexport function isString(string) {\n  return typeof string === 'string';\n}\n\nexport function isNumber(string) {\n  return typeof string === 'number';\n}\n\nexport const NOOP = () => {};\nexport const EMPTY_OBJECT = {};\n","import { isArray } from '../types';\n\nfunction traverseChildren(children, result) {\n  if (isArray(children)) {\n    for (let i = 0, l = children.length; i < l; i++) {\n      traverseChildren(children[i], result);\n    }\n  } else {\n    result.push(children);\n  }\n}\n\nexport default function flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  const result = [];\n  traverseChildren(children, result);\n\n  // If length equal 1, return the only one.\n  return result.length - 1 ? result : result[0];\n}\n","let updateCallbacks = [];\nlet effectCallbacks = [];\nlet layoutCallbacks = [];\nexport let scheduler = setTimeout;\n\nif (process.env.NODE_ENV !== 'production') {\n  // Wrapper timer for hijack timers in jest\n  scheduler = (callback) => {\n    setTimeout(callback);\n  };\n}\n\nfunction invokeFunctionsWithClear(callbacks) {\n  let callback;\n  while (callback = callbacks.shift()) {\n    callback();\n  }\n}\n\n// Schedule before next render\nexport function schedule(callback) {\n  if (updateCallbacks.length === 0) {\n    scheduler(flush);\n  }\n  updateCallbacks.push(callback);\n}\n\n// Flush before next render\nexport function flush() {\n  invokeFunctionsWithClear(updateCallbacks);\n}\n\nexport function scheduleEffect(callback) {\n  if (effectCallbacks.length === 0) {\n    scheduler(flushEffect);\n  }\n  effectCallbacks.push(callback);\n}\n\nexport function flushEffect() {\n  invokeFunctionsWithClear(effectCallbacks);\n}\n\nexport function scheduleLayout(callback) {\n  layoutCallbacks.push(callback);\n}\n\nexport function flushLayout() {\n  invokeFunctionsWithClear(layoutCallbacks);\n}\n","import Host from './vdom/host';\nimport { scheduler } from './vdom/scheduler';\nimport { NOOP, isPlainObject } from './types';\n\nfunction createMinifiedError(type, code, obj) {\n  var typeInfo = obj === undefined ? '' : ' got: ' + getTypeInfo(obj);\n  return new Error(`${type}: #${code}, ${getRenderErrorInfo()}.` + typeInfo);\n}\n\nexport function getTypeInfo(obj) {\n  return isPlainObject(obj) ? Object.keys(obj) : obj;\n}\n\nexport function getRenderErrorInfo() {\n  const ownerComponent = Host.owner;\n  return ownerComponent ? `check <${ownerComponent.__getName()}>` : 'no owner';\n}\n\n/**\n * Minified code:\n *  1: Hooks called outside a component, or multiple version of Rax are used.\n *  6: Invalid component type, expected a class or function component.\n *  4: Too many re-renders, the number of renders is limited to prevent an infinite loop.\n *  5: Rax driver not found.\n * @param code {Number}\n * @param obj {Object}\n */\nexport function throwMinifiedError(code, obj) {\n  throw createMinifiedError('Error', code, obj);\n}\n\n/**\n * Minified Code:\n * 0: Invalid element type, expected a string or a class/function component but got \"null\" or \"undefined\".\n * 2. Invalid child type, expected types: Element instance, string, boolean, array, null, undefined.\n * 3. Ref can not attach because multiple copies of Rax are used.\n * @param {number} code\n * @param {string} info\n */\nexport function throwMinifiedWarn(code, obj) {\n  let err = createMinifiedError('Warn', code, obj);\n  scheduler(() => {\n    throw err;\n  }, 0);\n}\n\nexport function throwError(message, obj) {\n  let typeInfo = obj === undefined ? '' :\n    '(found: ' + (isPlainObject(obj) ? `object with keys {${Object.keys(obj)}}` : obj) + ')';\n\n  throw Error(`${message} ${typeInfo}`);\n}\n\nexport let warning = NOOP;\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = (template, ...args) => {\n    if (typeof console !== 'undefined') {\n      let argsWithFormat = args.map(item => '' + item);\n      argsWithFormat.unshift('Warning: ' + template);\n      // Don't use spread (or .apply) directly because it breaks IE9\n      Function.prototype.apply.call(console.error, console, argsWithFormat);\n    }\n\n    // For works in DevTools when enable `Pause on caught exceptions`\n    // that can find the component where caused this warning\n    try {\n      let argIndex = 0;\n      const message = 'Warning: ' + template.replace(/%s/g, () => args[argIndex++]);\n      throw new Error(message);\n    } catch (e) {}\n  };\n}\n\n","import Host from './vdom/host';\nimport { warning } from './error';\nimport { isArray } from './types';\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nconst ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  let info = '';\n\n  const ownerComponent = Host.owner;\n  if (ownerComponent) {\n    const name = ownerComponent.__getName();\n    if (name) {\n      info = ` Check the render method of <${name}>.`;\n    }\n  }\n\n  if (!info) {\n    const parentName =\n      typeof parentType === 'string'\n        ? parentType\n        : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = ` Check the top-level render call using <${parentName}>.`;\n    }\n  }\n  return info;\n}\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.type && !!object.props;\n}\n\nfunction validateExplicitKey(element, parentType) {\n  if (element.__validated || element.key != null) {\n    return;\n  }\n\n  element.__validated = true;\n\n  const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  let childOwner = '';\n  if (\n    element &&\n    element._owner &&\n    element._owner !== Host.owner\n  ) {\n    // Give the component that originally created this child.\n    childOwner = ` It was passed a child from <${element._owner.__getName()}>.`;\n  }\n\n  warning(`Each child in a list should have a unique \"key\" prop.${currentComponentErrorInfo}${childOwner}`);\n}\n\nexport default function validateChildKeys(node, parentType) {\n  // Only array or element object is valid child\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (let i = 0; i < node.length; i++) {\n      const child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    node.__validated = true;\n  }\n  // Rax don't support iterator object as element children\n  // TODO: add validate when rax support iterator object as element.\n}\n","import Host from './vdom/host';\nimport Element from './vdom/element';\nimport flattenChildren from './vdom/flattenChildren';\nimport { warning, throwError, throwMinifiedWarn } from './error';\nimport { isString, isArray, NOOP } from './types';\nimport validateChildKeys from './validateChildKeys';\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n};\n\nexport default function createElement(type, config, children) {\n  // Reserved names are extracted\n  let props = {};\n  let propName;\n  let key = null;\n  let ref = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (!RESERVED_PROPS[propName]) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children arguments can be more than one\n  const childrenLength = arguments.length - 2;\n  if (childrenLength > 0) {\n    if (childrenLength === 1 && !isArray(children)) {\n      props.children = children;\n    } else {\n      let childArray = children;\n      if (childrenLength > 1) {\n        childArray = new Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n      }\n      props.children = flattenChildren(childArray);\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    let defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  if (type == null) {\n    if (process.env.NODE_ENV !== 'production') {\n      throwError(`Invalid element type, expected a string or a class/function component but got \"${type}\".`);\n    } else {\n      // A empty component replaced avoid break render in production\n      type = NOOP;\n      throwMinifiedWarn(0);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isString(ref) && !Host.owner) {\n      warning(\n        `Adding a string ref \"${ref}\" that was not created inside render method, or multiple copies of Rax are used.`\n      );\n    }\n\n    for (let i = 2; i < arguments.length; i ++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  return new Element(\n    type,\n    key,\n    ref,\n    props,\n    Host.owner\n  );\n}\n\n","export default function invokeFunctionsWithContext(fns, context, value) {\n  for (let i = 0, l = fns && fns.length; i < l; i++) {\n    fns[i].call(context, value);\n  }\n}\n","import { isNull, isObject, EMPTY_OBJECT } from '../types';\n\nconst hasOwnProperty = EMPTY_OBJECT.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nexport function is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y; // eslint-disable-line no-self-compare\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nexport default function shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (!isObject(objA) || isNull(objA) || !isObject(objB) || isNull(objB)) {\n    return false;\n  }\n\n  let keysA = Object.keys(objA);\n  let keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/* Common constant variables for rax */\n\nexport const INTERNAL = '_internal';\nexport const INSTANCE = '_instance';\nexport const NATIVE_NODE = '_nativeNode';\nexport const RENDERED_COMPONENT = '_renderedComponent';\n","import Host from './vdom/host';\nimport { scheduleEffect, flushEffect } from './vdom/scheduler';\nimport { is } from './vdom/shallowEqual';\nimport { isArray, isFunction, isNull } from './types';\nimport { warning, throwError, throwMinifiedError } from './error';\nimport { INSTANCE } from './constant';\n\nfunction getCurrentInstance() {\n  return Host.owner && Host.owner[INSTANCE];\n}\n\nfunction getCurrentRenderingInstance() {\n  const currentInstance = getCurrentInstance();\n  if (currentInstance) {\n    return currentInstance;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      throwError('Hooks called outside a component, or multiple version of Rax are used.');\n    } else {\n      throwMinifiedError(1);\n    }\n  }\n}\n\nfunction areInputsEqual(inputs, prevInputs) {\n  if (isNull(prevInputs) || inputs.length !== prevInputs.length) {\n    return false;\n  }\n\n  for (let i = 0; i < inputs.length; i++) {\n    if (is(inputs[i], prevInputs[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function useState(initialState) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n\n  if (!hooks[hookID]) {\n    // If the initial state is the result of an expensive computation,\n    // you may provide a function instead for lazy initial state.\n    if (isFunction(initialState)) {\n      initialState = initialState();\n    }\n\n    const setState = newState => {\n      // Flush all effects first before update state\n      if (!Host.__isUpdating) {\n        flushEffect();\n      }\n\n      const hook = hooks[hookID];\n      const eagerState = hook[2];\n      // function updater\n      if (isFunction(newState)) {\n        newState = newState(eagerState);\n      }\n\n      if (!is(newState, eagerState)) {\n        // Current instance is in render update phase.\n        // After this one render finish, will containue run.\n        hook[2] = newState;\n        if (getCurrentInstance() === currentInstance) {\n          // Marked as is scheduled that could finish hooks.\n          currentInstance.__isScheduled = true;\n        } else {\n          currentInstance.__update();\n        }\n      }\n    };\n\n    hooks[hookID] = [\n      initialState,\n      setState,\n      initialState\n    ];\n  }\n\n  const hook = hooks[hookID];\n  if (!is(hook[0], hook[2])) {\n    hook[0] = hook[2];\n    currentInstance.__shouldUpdate = true;\n  }\n\n  return hook;\n}\n\nexport function useContext(context) {\n  const currentInstance = getCurrentRenderingInstance();\n  return currentInstance.useContext(context);\n}\n\nexport function useEffect(effect, inputs) {\n  useEffectImpl(effect, inputs, true);\n}\n\nexport function useLayoutEffect(effect, inputs) {\n  useEffectImpl(effect, inputs);\n}\n\nfunction useEffectImpl(effect, inputs, defered) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n  inputs = inputs === undefined ? null : inputs;\n\n  if (!hooks[hookID]) {\n    const __create = (immediately) => {\n      if (!immediately && defered) return scheduleEffect(() => __create(true));\n      const { current } = __create;\n      if (current) {\n        __destory.current = current();\n        __create.current = null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          const currentDestory = __destory.current;\n          if (currentDestory !== undefined && typeof currentDestory !== 'function') {\n            let msg;\n            if (currentDestory === null) {\n              msg =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof currentDestory.then === 'function') {\n              msg =\n                '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                'useEffect(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                '}, [someId]); // Or [] if effect doesn\\'t need props or state.';\n            } else {\n              msg = ' You returned: ' + currentDestory;\n            }\n\n            warning(\n              'An effect function must not return anything besides a function, ' +\n              'which is used for clean-up.' + msg,\n            );\n          }\n        }\n      }\n    };\n\n    const __destory = (immediately) => {\n      if (!immediately && defered) return scheduleEffect(() => __destory(true));\n      const { current } = __destory;\n      if (current) {\n        current();\n        __destory.current = null;\n      }\n    };\n\n    __create.current = effect;\n\n    hooks[hookID] = {\n      __create,\n      __destory,\n      __prevInputs: inputs,\n      __inputs: inputs\n    };\n\n    currentInstance.didMount.push(__create);\n    currentInstance.willUnmount.push(() => __destory(true));\n    currentInstance.didUpdate.push(() => {\n      const { __prevInputs, __inputs, __create } = hooks[hookID];\n      if (__inputs == null || !areInputsEqual(__inputs, __prevInputs)) {\n        __destory();\n        __create();\n      }\n    });\n  } else {\n    const hook = hooks[hookID];\n    const { __create, __inputs: prevInputs } = hook;\n    hook.__inputs = inputs;\n    hook.__prevInputs = prevInputs;\n    __create.current = effect;\n  }\n}\n\nexport function useImperativeHandle(ref, create, inputs) {\n  const nextInputs = isArray(inputs) ? inputs.concat([ref]) : null;\n\n  useLayoutEffect(() => {\n    if (isFunction(ref)) {\n      ref(create());\n      return () => ref(null);\n    } else if (ref != null) {\n      ref.current = create();\n      return () => {\n        ref.current = null;\n      };\n    }\n  }, nextInputs);\n}\n\nexport function useRef(initialValue) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n\n  if (!hooks[hookID]) {\n    hooks[hookID] = {\n      current: initialValue\n    };\n  }\n\n  return hooks[hookID];\n}\n\nexport function useCallback(callback, inputs) {\n  return useMemo(() => callback, inputs);\n}\n\nexport function useMemo(create, inputs) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n  inputs = inputs === undefined ? null : inputs;\n\n  if (!hooks[hookID]) {\n    hooks[hookID] = [create(), inputs];\n  } else {\n    const prevInputs = hooks[hookID][1];\n    if (isNull(inputs) || !areInputsEqual(inputs, prevInputs)) {\n      hooks[hookID] = [create(), inputs];\n    }\n  }\n\n  return hooks[hookID][0];\n}\n\nexport function useReducer(reducer, initialArg, init) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n  const hook = hooks[hookID];\n\n  if (!hook) {\n    const initialState = isFunction(init) ? init(initialArg) : initialArg;\n\n    const dispatch = action => {\n      // Flush all effects first before update state\n      if (!Host.__isUpdating) {\n        flushEffect();\n      }\n\n      const hook = hooks[hookID];\n      // Reducer will update in the next render, before that we add all\n      // actions to the queue\n      const queue = hook[2];\n\n      if (getCurrentInstance() === currentInstance) {\n        queue.__actions.push(action);\n        currentInstance.__isScheduled = true;\n      } else {\n        const currentState = queue.__eagerState;\n        const eagerReducer = queue.__eagerReducer;\n        const eagerState = eagerReducer(currentState, action);\n        if (is(eagerState, currentState)) {\n          return;\n        }\n        queue.__eagerState = eagerState;\n        queue.__actions.push(action);\n        currentInstance.__update();\n      }\n    };\n\n    return hooks[hookID] = [\n      initialState,\n      dispatch,\n      {\n        __actions: [],\n        __eagerReducer: reducer,\n        __eagerState: initialState\n      }\n    ];\n  }\n\n  const queue = hook[2];\n  let next = hook[0];\n\n  if (currentInstance.__reRenders > 0) {\n    for (let i = 0; i < queue.__actions.length; i++) {\n      next = reducer(next, queue.__actions[i]);\n    }\n  } else {\n    next = queue.__eagerState;\n  }\n\n  if (!is(next, hook[0])) {\n    hook[0] = next;\n    currentInstance.__shouldUpdate = true;\n  }\n\n  queue.__eagerReducer = reducer;\n  queue.__eagerState = next;\n  queue.__actions.length = 0;\n\n  return hooks[hookID];\n}\n","import { isArray } from './types';\n\nexport default function toArray(obj) {\n  return isArray(obj) ? obj : [obj];\n}\n","import { INTERNAL } from '../constant';\n\nexport default function getNearestParent(instance, matcher) {\n  let parent;\n  while (instance && instance[INTERNAL]) {\n    if (matcher(instance)) {\n      parent = instance;\n      break;\n    }\n    instance = instance[INTERNAL].__parentInstance;\n  }\n  return parent;\n}","import invokeFunctionsWithContext from './invokeFunctionsWithContext';\nimport { useState, useLayoutEffect } from './hooks';\nimport { isFunction } from './types';\nimport toArray from './toArray';\nimport getNearestParent from './vdom/getNearestParent';\n\nlet id = 0;\n\nexport default function createContext(defaultValue) {\n  const contextID = '_c' + id++;\n\n  // Provider Component\n  class Provider {\n    constructor() {\n      this.__contextID = contextID;\n      this.__handlers = [];\n    }\n    __on(handler) {\n      this.__handlers.push(handler);\n    }\n    __off(handler) {\n      this.__handlers = this.__handlers.filter(h => h !== handler);\n    }\n    // Like getChildContext but called in SSR\n    _getChildContext() {\n      return {\n        [contextID]: this\n      };\n    }\n    // `getValue()` called in rax-server-renderer\n    getValue() {\n      return this.props.value !== undefined ? this.props.value : defaultValue;\n    }\n    componentDidUpdate(prevProps) {\n      if (this.props.value !== prevProps.value) {\n        invokeFunctionsWithContext(this.__handlers, null, this.getValue());\n      }\n    }\n    render() {\n      return this.props.children;\n    }\n  }\n\n  function getNearestParentProvider(instance) {\n    return getNearestParent(instance, parent => parent.__contextID === contextID);\n  }\n\n  // Consumer Component\n  function Consumer(props, context) {\n    // Current `context[contextID]` only works in SSR\n    const [provider] = useState(() => context[contextID] || getNearestParentProvider(this));\n    let value = provider ? provider.getValue() : defaultValue;\n    const [prevValue, setValue] = useState(value);\n\n    if (value !== prevValue) {\n      setValue(value);\n      return; // Interrupt execution of consumer.\n    }\n\n    useLayoutEffect(() => {\n      if (provider) {\n        provider.__on(setValue);\n        return () => {\n          provider.__off(setValue);\n        };\n      }\n    }, []);\n\n    // Consumer requires a function as a child.\n    // The function receives the current context value.\n    const consumer = toArray(props.children)[0];\n    if (isFunction(consumer)) {\n      return consumer(value);\n    }\n  }\n\n  return {\n    Provider,\n    Consumer,\n    // `_contextID` and `_defaultValue` accessed in rax-server-renderer\n    _contextID: contextID,\n    _defaultValue: defaultValue,\n    __getNearestParentProvider: getNearestParentProvider,\n  };\n}\n","export default function createRef() {\n  return {\n    current: null\n  };\n}","export default function(render) {\n  // _forwardRef is also use in rax server renderer\n  render._forwardRef = true;\n  return render;\n}","import shallowEqual from './vdom/shallowEqual';\n\nexport default function memo(type, compare) {\n  compare = compare || shallowEqual;\n\n  // Memo could composed\n  if (type.__compares) {\n    type.__compares.push(compare);\n  } else {\n    type.__compares = [compare];\n  }\n\n  return type;\n}\n","export default function Fragment(props) {\n  return props.children;\n}","import Host from './host';\nimport { INSTANCE, INTERNAL, NATIVE_NODE } from '../constant';\n\n/**\n * Base Component\n */\nexport default class BaseComponent {\n  constructor(element) {\n    this.__currentElement = element;\n  }\n\n  __initComponent(parent, parentInstance, context) {\n    this._parent = parent;\n    this.__parentInstance = parentInstance;\n    this._context = context;\n    this._mountID = Host.__mountID++;\n  }\n\n  __destoryComponent() {\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.unmountComponent(this);\n    }\n\n    this.__currentElement\n      = this[NATIVE_NODE]\n      = this._parent\n      = this.__parentInstance\n      = this._context\n      = null;\n\n    if (this[INSTANCE]) {\n      this[INSTANCE] = this[INSTANCE][INTERNAL] = null;\n    }\n  }\n\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n    this.__mountNativeNode(nativeNodeMounter);\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.mountComponent(this);\n    }\n\n    const instance = {};\n    instance[INTERNAL] = this;\n\n    return instance;\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    if (this[NATIVE_NODE] && !shouldNotRemoveChild) {\n      Host.driver.removeChild(this[NATIVE_NODE], this._parent);\n    }\n\n    this.__destoryComponent();\n  }\n\n  __getName() {\n    let currentElement = this.__currentElement;\n    let type = currentElement && currentElement.type;\n\n    return (\n      type && type.displayName ||\n      type && type.name ||\n      type || // Native component's name is type\n      currentElement\n    );\n  }\n\n  __mountNativeNode(nativeNodeMounter) {\n    let nativeNode = this.__getNativeNode();\n    let parent = this._parent;\n\n    if (nativeNodeMounter) {\n      nativeNodeMounter(nativeNode, parent);\n    } else {\n      Host.driver.appendChild(nativeNode, parent);\n    }\n  }\n\n  __getNativeNode() {\n    return this[NATIVE_NODE] == null\n      ? this[NATIVE_NODE] = this.__createNativeNode()\n      : this[NATIVE_NODE];\n  }\n\n  __getPublicInstance() {\n    return this.__getNativeNode();\n  }\n}\n","import Host from './host';\nimport BaseComponent from './base';\n\n/**\n * Empty Component\n */\nclass EmptyComponent extends BaseComponent {\n  __createNativeNode() {\n    return Host.driver.createEmpty(this);\n  }\n  __updateComponent() {\n    return;\n  }\n}\n\nexport default EmptyComponent;\n","/*\n * Ref manager\n */\nimport { isFunction, isObject } from '../types';\nimport { INSTANCE } from '../constant';\nimport { warning, throwMinifiedWarn } from '../error';\n\nexport function updateRef(prevElement, nextElement, component) {\n  let prevRef = prevElement ? prevElement.ref : null;\n  let nextRef = nextElement ? nextElement.ref : null;\n\n  // Update refs in owner component\n  if (prevRef !== nextRef) {\n    // Detach prev RenderedElement's ref\n    prevRef && detachRef(prevElement._owner, prevRef, component);\n    // Attach next RenderedElement's ref\n    nextRef && attachRef(nextElement._owner, nextRef, component);\n  }\n}\n\nexport function attachRef(ownerComponent, ref, component) {\n  if (!ownerComponent) {\n    if (process.env.NODE_ENV !== 'production') {\n      warning('Ref can not attach because multiple copies of Rax are used.');\n    } else {\n      throwMinifiedWarn(3);\n    }\n    return;\n  }\n\n  let instance = component.__getPublicInstance();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (instance == null) {\n      warning('Do not attach ref to function component because they don’t have instances.');\n    }\n  }\n\n  if (isFunction(ref)) {\n    ref(instance);\n  } else if (isObject(ref)) {\n    ref.current = instance;\n  } else {\n    ownerComponent[INSTANCE].refs[ref] = instance;\n  }\n}\n\nexport function detachRef(ownerComponent, ref, component) {\n  if (isFunction(ref)) {\n    // When the referenced component is unmounted and whenever the ref changes, the old ref will be called with null as an argument.\n    ref(null);\n  } else {\n    // Must match component and ref could detach the ref on owner when A's before ref is B's current ref\n    let instance = component.__getPublicInstance();\n\n    if (isObject(ref) && ref.current === instance) {\n      ref.current = null;\n    } else if (ownerComponent[INSTANCE].refs[ref] === instance) {\n      delete ownerComponent[INSTANCE].refs[ref];\n    }\n  }\n}\n","import Host from './host';\nimport {isString, isNumber, isArray, isNull, isPlainObject} from '../types';\nimport { throwMinifiedWarn, throwError } from '../error';\n\nexport default function instantiateComponent(element) {\n  let instance;\n\n  if (isPlainObject(element) && element !== null && element.type) {\n    // Special case string values\n    if (isString(element.type)) {\n      instance = new Host.__Native(element);\n    } else {\n      instance = new Host.__Composite(element);\n    }\n  } else if (isString(element) || isNumber(element)) {\n    instance = new Host.__Text(String(element));\n  } else if (isArray(element)) {\n    instance = new Host.__Fragment(element);\n  } else {\n    if (!(element === undefined || isNull(element) || element === false || element === true)) {\n      if (process.env.NODE_ENV !== 'production') {\n        throwError('Invalid child type, expected types: Element instance, string, boolean, array, null, undefined.', element);\n      } else {\n        throwMinifiedWarn(2, element);\n      }\n    }\n\n    instance = new Host.__Empty(element);\n  }\n\n  return instance;\n}\n","import {isArray, isString, isNumber, isObject, isNull} from '../types';\n\nfunction shouldUpdateComponent(prevElement, nextElement) {\n  let prevEmpty = isNull(prevElement);\n  let nextEmpty = isNull(nextElement);\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  if (isArray(prevElement) && isArray(nextElement)) {\n    return true;\n  }\n\n  const isPrevStringOrNumber = isString(prevElement) || isNumber(prevElement);\n  if (isPrevStringOrNumber) {\n    return isString(nextElement) || isNumber(nextElement);\n  } else {\n    // prevElement and nextElement could be array, typeof [] is \"object\"\n    return (\n      isObject(prevElement) &&\n      isObject(nextElement) &&\n      prevElement.type === nextElement.type &&\n      prevElement.key === nextElement.key\n    );\n  }\n}\n\nexport default shouldUpdateComponent;\n","import { isString } from '../types';\nimport { warning } from '../error';\n\nexport default function getElementKeyName(children, element, index) {\n  const elementKey = element && element.key;\n  const defaultName = '.' + index.toString(36); // Inner child name default format fallback\n\n  // Key should must be string type\n  if (isString(elementKey)) {\n    let keyName = '$' + elementKey;\n    // Child keys must be unique.\n    let keyUnique = children[keyName] === undefined;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!keyUnique) {\n        // Only the first child will be used when encountered two children with the same key\n        warning(`Encountered two children with the same key \"${elementKey}\".`);\n      }\n    }\n\n    return keyUnique ? keyName : defaultName;\n  } else {\n    return defaultName;\n  }\n}\n","import Host from './host';\nimport { isArray } from '../types';\nimport { INTERNAL } from '../constant';\n\n/**\n * This function is usually been used to find the closet previous sibling native node of FragmentComponent.\n * FragmentComponent does not have a native node in the DOM tree, so when it is replaced, the new node has no corresponding location to insert.\n * So we need to look forward from the current mount position of the FragmentComponent to the nearest component which have the native node.\n * @param component\n * @return nativeNode\n */\nexport default function getPrevSiblingNativeNode(component) {\n  let parent = component;\n  while (parent = component.__parentInstance &&\n    component.__parentInstance[INTERNAL]) {\n    if (parent instanceof Host.__Composite) {\n      component = parent;\n      continue;\n    }\n\n    const keys = Object.keys(parent.__renderedChildren);\n    // Find previous sibling native node from current mount index\n    for (let i = component.__mountIndex - 1; i >= 0; i--) {\n      const nativeNode = parent.__renderedChildren[keys[i]].__getNativeNode();\n      // Fragment component always return array\n      if (isArray(nativeNode)) {\n        if (nativeNode.length > 0) {\n          // Get the last one\n          return nativeNode[nativeNode.length - 1];\n        }\n      } else {\n        // Others maybe native node or empty node\n        return nativeNode;\n      }\n    }\n\n    // Find parent over parent\n    if (parent instanceof Host.__Fragment) {\n      component = parent;\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * Base component class.\n */\nexport default class Component {\n  constructor(props, context) {\n    this.props = props;\n    this.context = context;\n    this.refs = {};\n  }\n\n  setState(partialState, callback) {\n    // The updater property is injected when composite component mounting\n    this.updater.setState(this, partialState, callback);\n  }\n\n  forceUpdate(callback) {\n    this.updater.forceUpdate(this, callback);\n  }\n}\n\n/**\n * Pure component.\n */\nexport class PureComponent extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__isPureComponent = true;\n  }\n}\n","import Component from './component';\nimport {INTERNAL, RENDERED_COMPONENT} from '../constant';\n\nlet rootID = 1;\n\nclass Root extends Component {\n  constructor() {\n    super();\n    // Using fragment instead of null for avoid create a comment node when init mount\n    this.__element = [];\n    this.__rootID = rootID++;\n  }\n\n  __getPublicInstance() {\n    return this.__getRenderedComponent().__getPublicInstance();\n  }\n\n  __getRenderedComponent() {\n    return this[INTERNAL][RENDERED_COMPONENT];\n  }\n\n  __update(element) {\n    this.__element = element;\n    this.forceUpdate();\n  }\n\n  render() {\n    return this.__element;\n  }\n}\n\nexport default Root;\n","import Host from './host';\nimport createElement from '../createElement';\nimport instantiateComponent from './instantiateComponent';\nimport Root from './root';\nimport {INTERNAL, RENDERED_COMPONENT} from '../constant';\n\n/**\n * Instance manager\n * @NOTE Key should not be compressed, for that will be added to native node and cause DOM Exception.\n */\nconst KEY = '_r';\n\nexport default {\n  set(node, instance) {\n    if (!node[KEY]) {\n      node[KEY] = instance;\n      // Record root instance to roots map\n      if (instance.__rootID) {\n        Host.rootInstances[instance.__rootID] = instance;\n        Host.rootComponents[instance.__rootID] = instance[INTERNAL];\n      }\n    }\n  },\n  get(node) {\n    return node[KEY];\n  },\n  remove(node) {\n    let instance = this.get(node);\n    if (instance) {\n      node[KEY] = null;\n      if (instance.__rootID) {\n        delete Host.rootComponents[instance.__rootID];\n        delete Host.rootInstances[instance.__rootID];\n      }\n    }\n  },\n  mount(element, container, { parent, hydrate }) {\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.beforeRender();\n    }\n\n    const driver = Host.driver;\n\n    // Real native root node is body\n    if (container == null) {\n      container = driver.createBody();\n    }\n\n    const renderOptions = {\n      element,\n      container,\n      hydrate\n    };\n\n    // Before render callback\n    driver.beforeRender && driver.beforeRender(renderOptions);\n\n    // Get the context from the conceptual parent component.\n    let parentContext;\n    if (parent) {\n      let parentInternal = parent[INTERNAL];\n      parentContext = parentInternal.__processChildContext(parentInternal._context);\n    }\n\n    // Update root component\n    let prevRootInstance = this.get(container);\n    if (prevRootInstance && prevRootInstance.__rootID) {\n      if (parentContext) {\n        // Using __penddingContext to pass new context\n        prevRootInstance[INTERNAL].__penddingContext = parentContext;\n      }\n      prevRootInstance.__update(element);\n\n      // After render callback\n      driver.afterRender && driver.afterRender(renderOptions);\n\n      return prevRootInstance;\n    }\n\n    // Init root component with empty children\n    let renderedComponent = instantiateComponent(createElement(Root));\n    let defaultContext = parentContext || {};\n    let rootInstance = renderedComponent.__mountComponent(container, parent, defaultContext);\n    this.set(container, rootInstance);\n\n    // Mount new element through update queue avoid when there is in rendering phase\n    rootInstance.__update(element);\n\n    // After render callback\n    driver.afterRender && driver.afterRender(renderOptions);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Devtool render new root hook\n      Host.reconciler.renderNewRootComponent(rootInstance[INTERNAL][RENDERED_COMPONENT]);\n      Host.measurer && Host.measurer.afterRender();\n    }\n\n    return rootInstance;\n  }\n};\n","export default Object.assign;\n","import Host from './host';\nimport { detachRef, attachRef, updateRef } from './ref';\nimport instantiateComponent from './instantiateComponent';\nimport shouldUpdateComponent from './shouldUpdateComponent';\nimport getElementKeyName from './getElementKeyName';\nimport getPrevSiblingNativeNode from './getPrevSiblingNativeNode';\nimport Instance from './instance';\nimport BaseComponent from './base';\nimport toArray from '../toArray';\nimport { isFunction, isArray, isNull } from '../types';\nimport assign from '../assign';\nimport { INSTANCE, INTERNAL, NATIVE_NODE } from '../constant';\n\nconst STYLE = 'style';\nconst CHILDREN = 'children';\nconst TREE = 'tree';\nconst EVENT_PREFIX_REGEXP = /^on[A-Z]/;\n\n/**\n * Native Component\n */\nexport default class NativeComponent extends BaseComponent {\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n\n    const currentElement = this.__currentElement;\n    const props = currentElement.props;\n    const type = currentElement.type;\n    const children = props[CHILDREN];\n    const appendType = props.append || TREE; // Default is tree\n\n    // Clone a copy for style diff\n    this.__prevStyleCopy = assign({}, props[STYLE]);\n\n    let instance = {\n      type,\n      props,\n    };\n    instance[INTERNAL] = this;\n\n    this[INSTANCE] = instance;\n\n    if (appendType === TREE) {\n      // Should after process children when mount by tree mode\n      this.__mountChildren(children, context);\n      this.__mountNativeNode(nativeNodeMounter);\n    } else {\n      // Should before process children when mount by node mode\n      this.__mountNativeNode(nativeNodeMounter);\n      this.__mountChildren(children, context);\n    }\n\n    // Ref acttach\n    if (currentElement && currentElement.ref) {\n      attachRef(currentElement._owner, currentElement.ref, this);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.mountComponent(this);\n    }\n\n    return instance;\n  }\n\n  __mountChildren(children, context) {\n    if (children == null) return children;\n\n    const nativeNode = this.__getNativeNode();\n    return this.__mountChildrenImpl(nativeNode, toArray(children), context);\n  }\n\n  __mountChildrenImpl(parent, children, context, nativeNodeMounter) {\n    let renderedChildren = this.__renderedChildren = {};\n\n    const renderedChildrenImage = [];\n    for (let i = 0, l = children.length; i < l; i++) {\n      const element = children[i];\n      const renderedChild = instantiateComponent(element);\n      const name = getElementKeyName(renderedChildren, element, i);\n      renderedChildren[name] = renderedChild;\n      renderedChild.__mountIndex = i;\n      // Mount children\n      const mountImage = renderedChild.__mountComponent(\n        parent,\n        this[INSTANCE],\n        context,\n        nativeNodeMounter\n      );\n      renderedChildrenImage.push(mountImage);\n    }\n\n    return renderedChildrenImage;\n  }\n\n  __unmountChildren(shouldNotRemoveChild) {\n    let renderedChildren = this.__renderedChildren;\n\n    if (renderedChildren) {\n      for (let name in renderedChildren) {\n        let renderedChild = renderedChildren[name];\n        renderedChild.unmountComponent(shouldNotRemoveChild);\n      }\n      this.__renderedChildren = null;\n    }\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    if (this[NATIVE_NODE]) {\n      let ref = this.__currentElement.ref;\n      if (ref) {\n        detachRef(this.__currentElement._owner, ref, this);\n      }\n\n      Instance.remove(this[NATIVE_NODE]);\n\n      if (!shouldNotRemoveChild) {\n        Host.driver.removeChild(this[NATIVE_NODE], this._parent);\n      }\n    }\n\n    this.__unmountChildren(true);\n\n    this.__prevStyleCopy = null;\n    this.__destoryComponent();\n  }\n\n  __updateComponent(prevElement, nextElement, prevContext, nextContext) {\n    // Replace current element\n    this.__currentElement = nextElement;\n\n    updateRef(prevElement, nextElement, this);\n\n    let prevProps = prevElement.props;\n    let nextProps = nextElement.props;\n\n    this.__updateProperties(prevProps, nextProps);\n\n    // If the prevElement has no child, mount children directly\n    if (prevProps[CHILDREN] == null ||\n      isArray(prevProps[CHILDREN]) && prevProps[CHILDREN].length === 0) {\n      this.__mountChildren(nextProps[CHILDREN], nextContext);\n    } else {\n      this.__updateChildren(nextProps[CHILDREN], nextContext);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.receiveComponent(this);\n    }\n  }\n\n  __updateProperties(prevProps, nextProps) {\n    let propKey;\n    let styleName;\n    let styleUpdates;\n    const driver = Host.driver;\n    const nativeNode = this.__getNativeNode();\n\n    for (propKey in prevProps) {\n      // Continue children and null value prop or nextProps has some propKey that do noting\n      if (\n        propKey === CHILDREN ||\n        prevProps[propKey] == null ||\n        // Use hasOwnProperty here for avoid propKey name is some with method name in object proptotype\n        nextProps.hasOwnProperty(propKey)\n      ) {\n        continue;\n      }\n\n      if (propKey === STYLE) {\n        // Remove all style\n        let lastStyle = this.__prevStyleCopy;\n        for (styleName in lastStyle) {\n          styleUpdates = styleUpdates || {};\n          styleUpdates[styleName] = '';\n        }\n        this.__prevStyleCopy = null;\n      } else if (EVENT_PREFIX_REGEXP.test(propKey)) {\n        // Remove event\n        const eventListener = prevProps[propKey];\n\n        if (isFunction(eventListener)) {\n          driver.removeEventListener(\n            nativeNode,\n            propKey.slice(2).toLowerCase(),\n            eventListener\n          );\n        }\n      } else {\n        // Remove attribute\n        driver.removeAttribute(\n          nativeNode,\n          propKey,\n          prevProps[propKey]\n        );\n      }\n    }\n\n    for (propKey in nextProps) {\n      let nextProp = nextProps[propKey];\n      let prevProp = propKey === STYLE ? this.__prevStyleCopy :\n        prevProps != null ? prevProps[propKey] : undefined;\n\n      // Continue children or prevProp equal nextProp\n      if (\n        propKey === CHILDREN ||\n        prevProp === nextProp ||\n        nextProp == null && prevProp == null\n      ) {\n        continue;\n      }\n\n      // Update style\n      if (propKey === STYLE) {\n        if (nextProp) {\n          // Clone property\n          nextProp = this.__prevStyleCopy = assign({}, nextProp);\n        } else {\n          this.__prevStyleCopy = null;\n        }\n\n        if (prevProp != null) {\n          // Unset styles on `prevProp` but not on `nextProp`.\n          for (styleName in prevProp) {\n            if (!nextProp || !nextProp[styleName] && nextProp[styleName] !== 0) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `prevProp`.\n          for (styleName in nextProp) {\n            if (prevProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Assign next prop when prev style is null\n          styleUpdates = nextProp;\n        }\n      } else if (EVENT_PREFIX_REGEXP.test(propKey)) {\n        // Update event binding\n        let eventName = propKey.slice(2).toLowerCase();\n\n        if (isFunction(prevProp)) {\n          driver.removeEventListener(nativeNode, eventName, prevProp, nextProps);\n        }\n\n        if (isFunction(nextProp)) {\n          driver.addEventListener(nativeNode, eventName, nextProp, nextProps);\n        }\n      } else {\n        // Update other property\n        if (nextProp != null) {\n          driver.setAttribute(\n            nativeNode,\n            propKey,\n            nextProp\n          );\n        } else {\n          driver.removeAttribute(\n            nativeNode,\n            propKey,\n            prevProps[propKey]\n          );\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          Host.measurer && Host.measurer.recordOperation({\n            instanceID: this._mountID,\n            type: 'update attribute',\n            payload: {\n              [propKey]: nextProp\n            }\n          });\n        }\n      }\n    }\n\n    if (styleUpdates) {\n      if (process.env.NODE_ENV !== 'production') {\n        Host.measurer && Host.measurer.recordOperation({\n          instanceID: this._mountID,\n          type: 'update style',\n          payload: styleUpdates\n        });\n      }\n\n      driver.setStyle(nativeNode, styleUpdates);\n    }\n  }\n\n  __updateChildren(nextChildrenElements, context) {\n    // prev rendered children\n    let prevChildren = this.__renderedChildren;\n    let driver = Host.driver;\n\n    if (nextChildrenElements == null && prevChildren == null) {\n      return;\n    }\n\n    let nextChildren = {};\n\n    if (nextChildrenElements != null) {\n      nextChildrenElements = toArray(nextChildrenElements);\n\n      // Update next children elements\n      for (let index = 0, length = nextChildrenElements.length; index < length; index++) {\n        let nextElement = nextChildrenElements[index];\n        let name = getElementKeyName(nextChildren, nextElement, index);\n        let prevChild = prevChildren && prevChildren[name];\n        let prevElement = prevChild && prevChild.__currentElement;\n        let prevContext = prevChild && prevChild._context;\n\n        // Try to update between the two of some name that has some element type,\n        // and move child in next children loop if need\n        if (prevChild != null && shouldUpdateComponent(prevElement, nextElement)) {\n          if (prevElement !== nextElement || prevContext !== context) {\n            // Pass the same context when updating children\n            prevChild.__updateComponent(prevElement, nextElement, context,\n              context);\n          }\n\n          nextChildren[name] = prevChild;\n        } else {\n          // Unmount the prevChild when some name with nextChild but different element type,\n          // and move child node in next children loop\n          if (prevChild) {\n            prevChild.__unmount = true;\n          }\n          // The child must be instantiated before it's mounted.\n          nextChildren[name] = instantiateComponent(nextElement);\n        }\n      }\n    }\n\n    let parent = this.__getNativeNode();\n    let isFragmentParent = isArray(parent);\n    let prevFirstChild = null;\n    let prevFirstNativeNode = null;\n    let isPrevFirstEmptyFragment = false;\n    let shouldUnmountPrevFirstChild = false;\n    let lastPlacedNode = null;\n\n    // Directly remove all children from component, if nextChildren is empty (null, [], '').\n    // `driver.removeChildren` is optional driver protocol.\n    let shouldRemoveAllChildren = Boolean(\n      driver.removeChildren\n      // nextChildElements == null or nextChildElements is empty\n      && (isNull(nextChildrenElements) || nextChildrenElements && !nextChildrenElements.length)\n      // Fragment parent can not remove parentNode's all child nodes directly.\n      && !isFragmentParent\n    );\n\n    // Unmount children that are no longer present.\n    if (prevChildren != null) {\n      for (let name in prevChildren) {\n        let prevChild = prevChildren[name];\n        let shouldUnmount = prevChild.__unmount || !nextChildren[name];\n\n        // Store old first child ref for append node ahead and maybe delay remove it\n        if (!prevFirstChild) {\n          shouldUnmountPrevFirstChild = shouldUnmount;\n          prevFirstChild = prevChild;\n          prevFirstNativeNode = prevFirstChild.__getNativeNode();\n\n          if (isArray(prevFirstNativeNode)) {\n            isPrevFirstEmptyFragment = prevFirstNativeNode.length === 0;\n            prevFirstNativeNode = prevFirstNativeNode[0];\n          }\n        } else if (shouldUnmount) {\n          prevChild.unmountComponent(shouldRemoveAllChildren);\n        }\n      }\n\n      // 1. When fragment embed fragment updated but prev fragment is empty\n      // that need to get the prev sibling native node.\n      // like: [ [] ] -> [ [1, 2] ]\n      // 2. When prev fragment is empty and update to other type\n      // like: [ [], 1 ] -> [ 1, 2 ]\n      if (isFragmentParent && parent.length === 0 || isPrevFirstEmptyFragment) {\n        lastPlacedNode = getPrevSiblingNativeNode(this);\n      }\n    }\n\n\n    if (nextChildren != null) {\n      // `nextIndex` will increment for each child in `nextChildren`\n      let nextIndex = 0;\n\n      function insertNodes(nativeNodes, parentNode) {\n        // The nativeNodes maybe fragment, so convert to array type\n        nativeNodes = toArray(nativeNodes);\n\n        for (let i = 0, l = nativeNodes.length; i < l; i++) {\n          if (lastPlacedNode) {\n            // Should reverse order when insert new child after lastPlacedNode:\n            // [lastPlacedNode, *newChild1, *newChild2],\n            // And if prev is empty fragment, lastPlacedNode is the prevSiblingNativeNode found.\n            driver.insertAfter(nativeNodes[l - 1 - i], lastPlacedNode);\n          } else if (prevFirstNativeNode) {\n            // [*newChild1, *newChild2, prevFirstNativeNode]\n            driver.insertBefore(nativeNodes[i], prevFirstNativeNode);\n          } else if (parentNode) {\n            // [*newChild1, *newChild2]\n            driver.appendChild(nativeNodes[i], parentNode);\n          }\n        }\n      }\n\n      for (let name in nextChildren) {\n        let nextChild = nextChildren[name];\n        let prevChild = prevChildren && prevChildren[name];\n\n        // Try to move the some key prevChild but current not at the some position\n        if (prevChild === nextChild) {\n          let prevChildNativeNode = prevChild.__getNativeNode();\n\n          if (prevChild.__mountIndex !== nextIndex) {\n            insertNodes(prevChildNativeNode);\n          }\n        } else {\n          // Mount nextChild that in prevChildren there has no some name\n\n          // Fragment extended native component, so if parent is fragment should get this._parent\n          if (isFragmentParent) {\n            parent = this._parent;\n          }\n\n          nextChild.__mountComponent(\n            parent,\n            this[INSTANCE],\n            context,\n            insertNodes // Insert nodes mounter\n          );\n        }\n\n        // Update to the latest mount order\n        nextChild.__mountIndex = nextIndex++;\n\n        // Get the last child\n        lastPlacedNode = nextChild.__getNativeNode();\n\n        if (isArray(lastPlacedNode)) {\n          lastPlacedNode = lastPlacedNode[lastPlacedNode.length - 1];\n        }\n      }\n    }\n\n    if (shouldUnmountPrevFirstChild) {\n      prevFirstChild.unmountComponent(shouldRemoveAllChildren);\n    }\n\n    if (shouldRemoveAllChildren) {\n      driver.removeChildren(this[NATIVE_NODE]);\n    }\n\n    this.__renderedChildren = nextChildren;\n  }\n\n  __createNativeNode() {\n    const instance = this[INSTANCE];\n    const nativeNode = Host.driver.createElement(instance.type, instance.props, this);\n    Instance.set(nativeNode, instance);\n    return nativeNode;\n  }\n}\n","import Host from './host';\nimport BaseComponent from './base';\n\n/**\n * Text Component\n */\nclass TextComponent extends BaseComponent {\n  __updateComponent(prevElement, nextElement, context) {\n    nextElement = '' + nextElement;\n    // If text is some value that do not update even there number 1 and string \"1\"\n    if (prevElement !== nextElement) {\n      // Replace current element\n      this.__currentElement = nextElement;\n      Host.driver.updateText(this.__getNativeNode(), nextElement);\n\n      if (process.env.NODE_ENV !== 'production') {\n        this._stringText = this.__currentElement;\n        Host.reconciler.receiveComponent(this);\n      }\n    }\n  }\n\n  __createNativeNode() {\n    if (process.env.NODE_ENV !== 'production') {\n      this._stringText = this.__currentElement;\n    }\n    return Host.driver.createText(this.__currentElement, this);\n  }\n}\n\nexport default TextComponent;\n","import Host from './host';\nimport Component from './component';\nimport invokeFunctionsWithContext from '../invokeFunctionsWithContext';\nimport { throwMinifiedError } from '../error';\nimport { INTERNAL } from '../constant';\nimport { EMPTY_OBJECT } from '../types';\n\nconst RE_RENDER_LIMIT = 24;\n/**\n * Functional Reactive Component Class Wrapper\n */\nexport default class ReactiveComponent extends Component {\n  constructor(pureRender, ref) {\n    super();\n    // Marked ReactiveComponent.\n    this.__isReactiveComponent = true;\n    // A pure function\n    this.__render = pureRender;\n    this.__hookID = 0;\n    // Number of rerenders\n    this.__reRenders = 0;\n    this.__hooks = {};\n    // Is render scheduled\n    this.__isScheduled = false;\n    this.__shouldUpdate = false;\n    this.__children = null;\n    this.__contexts = {};\n    // Handles store\n    this.didMount = [];\n    this.didUpdate = [];\n    this.willUnmount = [];\n\n    this.state = EMPTY_OBJECT;\n\n    if (pureRender._forwardRef) {\n      this.__prevForwardRef = this._forwardRef = ref;\n    }\n\n    const compares = pureRender.__compares;\n    if (compares) {\n      this.shouldComponentUpdate = (nextProps) => {\n        // Process composed compare\n        let arePropsEqual = true;\n\n        // Compare push in and pop out\n        for (let i = compares.length - 1; i > -1; i--) {\n          if (arePropsEqual = compares[i](this.props, nextProps)) {\n            break;\n          }\n        }\n\n        return !arePropsEqual || this.__prevForwardRef !== this._forwardRef;\n      };\n    }\n  }\n\n  getHooks() {\n    return this.__hooks;\n  }\n\n  getHookID() {\n    return ++this.__hookID;\n  }\n\n  useContext(context) {\n    const contextID = context._contextID;\n    let contextItem = this.__contexts[contextID];\n    if (!contextItem) {\n      const provider = context.__getNearestParentProvider(this);\n      contextItem = this.__contexts[contextID] = {\n        __provider: provider\n      };\n\n      if (provider) {\n        const handleContextChange = (value) => {\n          // Check the last value that maybe alread rerender\n          // avoid rerender twice when provider value changed\n          if (contextItem.__lastValue !== value) {\n            this.__shouldUpdate = true;\n            this.__update();\n          }\n        };\n        provider.__on(handleContextChange);\n        this.willUnmount.push(() => provider.__off(handleContextChange));\n      }\n    }\n\n    return contextItem.__lastValue = contextItem.__provider ?\n      contextItem.__provider.getValue() : context._defaultValue;\n  }\n\n  componentWillMount() {\n    this.__shouldUpdate = true;\n  }\n\n  componentDidMount() {\n    invokeFunctionsWithContext(this.didMount);\n  }\n\n  componentWillReceiveProps() {\n    this.__shouldUpdate = true;\n  }\n\n  componentDidUpdate() {\n    invokeFunctionsWithContext(this.didUpdate);\n  }\n\n  componentWillUnmount() {\n    invokeFunctionsWithContext(this.willUnmount);\n  }\n\n  __update() {\n    this[INTERNAL].__isPendingForceUpdate = true;\n    this.setState(EMPTY_OBJECT);\n  }\n\n  render() {\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.beforeRender();\n    }\n\n    this.__hookID = 0;\n    this.__reRenders = 0;\n    this.__isScheduled = false;\n    let children = this.__render(this.props, this._forwardRef ? this._forwardRef : this.context);\n\n    while (this.__isScheduled) {\n      this.__reRenders++;\n      if (this.__reRenders > RE_RENDER_LIMIT) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('Too many re-renders, the number of renders is limited to prevent an infinite loop.');\n        } else {\n          throwMinifiedError(4);\n        }\n      }\n\n      this.__hookID = 0;\n      this.__isScheduled = false;\n      children = this.__render(this.props, this._forwardRef ? this._forwardRef : this.context);\n    }\n\n    if (this.__shouldUpdate) {\n      this.__children = children;\n      this.__shouldUpdate = false;\n    }\n\n    return this.__children;\n  }\n}\n","import Host from './host';\nimport { flushEffect, schedule, flushLayout } from './scheduler';\nimport { INTERNAL, RENDERED_COMPONENT } from '../constant';\n\n// Dirty components store\nlet dirtyComponents = [];\n\nfunction getPendingCallbacks(internal) {\n  return internal.__pendingCallbacks;\n}\n\nfunction setPendingCallbacks(internal, callbacks) {\n  return internal.__pendingCallbacks = callbacks;\n}\n\nfunction getPendingStateQueue(internal) {\n  return internal.__pendingStateQueue;\n}\n\nfunction setPendingStateQueue(internal, partialState) {\n  return internal.__pendingStateQueue = partialState;\n}\n\nfunction enqueueCallback(internal, callback) {\n  let callbackQueue = getPendingCallbacks(internal) || setPendingCallbacks(internal, []);\n  callbackQueue.push(callback);\n}\n\nfunction enqueueState(internal, partialState) {\n  let stateQueue = getPendingStateQueue(internal) || setPendingStateQueue(internal, []);\n  stateQueue.push(partialState);\n}\n\nfunction runUpdate(component) {\n  let internal = component[INTERNAL];\n  if (!internal) {\n    return;\n  }\n\n  Host.__isUpdating = true;\n\n  let prevElement = internal.__currentElement;\n  let prevUnmaskedContext = internal._context;\n  let nextUnmaskedContext = internal.__penddingContext || prevUnmaskedContext;\n  internal.__penddingContext = undefined;\n\n  if (getPendingStateQueue(internal) || internal.__isPendingForceUpdate) {\n    internal.__updateComponent(\n      prevElement,\n      prevElement,\n      prevUnmaskedContext,\n      nextUnmaskedContext\n    );\n\n    flushLayout();\n  }\n\n  Host.__isUpdating = false;\n}\n\nfunction mountOrderComparator(c1, c2) {\n  return c2[INTERNAL]._mountID - c1[INTERNAL]._mountID;\n}\n\nfunction performUpdate() {\n  if (Host.__isUpdating) {\n    return schedule(performUpdate);\n  }\n\n  let component;\n  let dirties = dirtyComponents;\n  if (dirties.length > 0) {\n    // Before next render, we will flush all the effects\n    flushEffect();\n    dirtyComponents = [];\n    // Since reconciling a component higher in the owner hierarchy usually (not\n    // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n    // them before their children by sorting the array.\n    if (dirties.length > 1) {\n      dirties = dirties.filter(c => !!c[INTERNAL]).sort(mountOrderComparator);\n    }\n\n    while (component = dirties.pop()) {\n      runUpdate(component);\n    }\n  }\n}\n\nfunction scheduleUpdate(component, shouldAsyncUpdate) {\n  if (dirtyComponents.indexOf(component) < 0) {\n    dirtyComponents.push(component);\n  }\n\n  if (shouldAsyncUpdate) {\n    // If have been scheduled before, don't not need schedule again\n    if (dirtyComponents.length > 1) {\n      return;\n    }\n    schedule(performUpdate);\n  } else {\n    performUpdate();\n  }\n}\n\nfunction requestUpdate(component, partialState, callback) {\n  let internal = component[INTERNAL];\n\n  if (!internal) {\n    return;\n  }\n\n  if (callback) {\n    enqueueCallback(internal, callback);\n  }\n\n  const hasComponentRendered = internal[RENDERED_COMPONENT];\n\n  // setState\n  if (partialState) {\n    enqueueState(internal, partialState);\n    // State pending when request update in componentWillMount and componentWillReceiveProps,\n    // isPendingState default is false value (false or null) and set to true after componentWillReceiveProps,\n    // _renderedComponent is null when componentWillMount exec.\n    if (!internal.__isPendingState && hasComponentRendered) {\n      scheduleUpdate(component, true);\n    }\n  } else {\n    // forceUpdate\n    internal.__isPendingForceUpdate = true;\n\n    if (hasComponentRendered) {\n      scheduleUpdate(component);\n    }\n  }\n}\n\nconst Updater = {\n  setState(component, partialState, callback) {\n    // Flush all effects first before update state\n    if (!Host.__isUpdating) {\n      flushEffect();\n    }\n    requestUpdate(component, partialState, callback);\n  },\n  forceUpdate(component, callback) {\n    requestUpdate(component, null, callback);\n  }\n};\n\nexport default Updater;\n","import getNearestParent from './getNearestParent';\nimport { scheduler, scheduleLayout } from './scheduler';\nimport { INTERNAL } from '../constant';\n\nexport default function performInSandbox(fn, instance, callback) {\n  try {\n    return fn();\n  } catch (e) {\n    if (callback) {\n      callback(e);\n    } else {\n      handleError(instance, e);\n    }\n  }\n}\n\n/**\n * A class component becomes an error boundary if \n * it defines either (or both) of the lifecycle methods static getDerivedStateFromError() or componentDidCatch().\n * Use static getDerivedStateFromError() to render a fallback UI after an error has been thrown.\n * Use componentDidCatch() to log error information.\n * @param {*} instance \n * @param {*} error \n */\nexport function handleError(instance, error) {\n  let boundary = getNearestParent(instance, parent => {\n    return parent.componentDidCatch || (parent.constructor && parent.constructor.getDerivedStateFromError);\n  });\n\n  if (boundary) {\n    scheduleLayout(() => {\n      const boundaryInternal = boundary[INTERNAL];\n      // Should not attempt to recover an unmounting error boundary\n      if (boundaryInternal) {\n        performInSandbox(() => {\n          if (boundary.componentDidCatch) {\n            boundary.componentDidCatch(error);\n          }\n          \n          // Update state to the next render to show the fallback UI.\n          if (boundary.constructor && boundary.constructor.getDerivedStateFromError) {\n            const state = boundary.constructor.getDerivedStateFromError();\n            boundary.setState(state);\n          }\n        }, boundaryInternal.__parentInstance);\n      }\n    });\n  } else {\n    // Do not break when error happens\n    scheduler(() => {\n      throw error;\n    }, 0);\n  }\n}\n","import ReactiveComponent from './reactive';\nimport updater from './updater';\nimport Host from './host';\nimport { attachRef, updateRef, detachRef } from './ref';\nimport instantiateComponent from './instantiateComponent';\nimport shouldUpdateComponent from './shouldUpdateComponent';\nimport shallowEqual from './shallowEqual';\nimport BaseComponent from './base';\nimport getPrevSiblingNativeNode from './getPrevSiblingNativeNode';\nimport performInSandbox from './performInSandbox';\nimport toArray from '../toArray';\nimport { scheduleLayout } from './scheduler';\nimport { isFunction, isArray } from '../types';\nimport assign from '../assign';\nimport { INSTANCE, INTERNAL, RENDERED_COMPONENT } from '../constant';\nimport invokeFunctionsWithContext from '../invokeFunctionsWithContext';\nimport validateChildKeys from '../validateChildKeys';\nimport { throwError, throwMinifiedError } from '../error';\n\nlet measureLifeCycle;\nif (process.env.NODE_ENV !== 'production') {\n  measureLifeCycle = function(callback, instanceID, type) {\n    Host.measurer && Host.measurer.beforeLifeCycle(instanceID, type);\n    callback();\n    Host.measurer && Host.measurer.afterLifeCycle(instanceID, type);\n  };\n}\n\nfunction scheduleLayoutInSandbox(fn, instance) {\n  scheduleLayout(() => {\n    performInSandbox(fn, instance);\n  });\n}\n\nfunction scheduleLayoutCallbacksInSandbox(callbacks, instance) {\n  if (callbacks) {\n    scheduleLayoutInSandbox(() => {\n      invokeFunctionsWithContext(callbacks, instance);\n    }, instance);\n  }\n}\n\n/**\n * Composite Component\n */\nclass CompositeComponent extends BaseComponent {\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._updateCount = 0;\n      Host.measurer && Host.measurer.beforeMountComponent(this._mountID, this);\n    }\n\n    let currentElement = this.__currentElement;\n    let Component = currentElement.type;\n    let ref = currentElement.ref;\n    let publicProps = currentElement.props;\n    let componentPrototype = Component.prototype;\n\n    // Context process\n    let publicContext = this.__processContext(context);\n\n    // Initialize the public class\n    let instance;\n    let renderedElement;\n\n    performInSandbox(() => {\n      if (componentPrototype && componentPrototype.render) {\n        // Class Component instance\n        instance = new Component(publicProps, publicContext);\n      } else if (isFunction(Component)) {\n        // Functional reactive component with hooks\n        instance = new ReactiveComponent(Component, ref);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          throwError('Invalid component type, expected a class or function component.', Component);\n        } else {\n          throwMinifiedError(6, Component);\n        }\n      }\n    }, parentInstance);\n\n    if (!instance) {\n      return;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    instance.props = publicProps;\n    instance.context = publicContext;\n    instance.refs = {};\n\n    // Inject the updater into instance\n    instance.updater = updater;\n    instance[INTERNAL] = this;\n    this[INSTANCE] = instance;\n\n    // Init state, must be set to an object or null\n    let initialState = instance.state;\n    if (initialState === undefined) {\n      // TODO clone the state?\n      instance.state = initialState = null;\n    }\n\n    if (instance.componentWillMount) {\n      performInSandbox(() => {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCycle(() => {\n            instance.componentWillMount();\n          }, this._mountID, 'componentWillMount');\n        } else {\n          instance.componentWillMount();\n        }\n      }, instance);\n    }\n\n    Host.owner = this;\n    // Process pending state when call setState in componentWillMount\n    instance.state = this.__processPendingState(publicProps, publicContext);\n    const callbacks = this.__pendingCallbacks;\n    this.__pendingCallbacks = null;\n\n    performInSandbox(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCycle(() => {\n          renderedElement = instance.render();\n        }, this._mountID, 'render');\n      } else {\n        renderedElement = instance.render();\n      }\n    }, instance);\n\n    if (process.env.NODE_ENV !== 'production') {\n      validateChildKeys(renderedElement, this.__currentElement.type);\n    }\n\n    Host.owner = null;\n\n    this[RENDERED_COMPONENT] = instantiateComponent(renderedElement);\n    this[RENDERED_COMPONENT].__mountComponent(\n      this._parent,\n      instance,\n      this.__processChildContext(context),\n      nativeNodeMounter\n    );\n\n    if (!currentElement.type._forwardRef && ref) {\n      attachRef(currentElement._owner, ref, this);\n    }\n\n    if (instance.componentDidMount) {\n      scheduleLayoutInSandbox(() => {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCycle(() => {\n            instance.componentDidMount();\n          }, this._mountID, 'componentDidMount');\n        } else {\n          instance.componentDidMount();\n        }\n      }, instance);\n    }\n\n    // Trigger setState callback\n    scheduleLayoutCallbacksInSandbox(callbacks, instance);\n\n    if (process.env.NODE_ENV !== 'production') {\n      scheduleLayout(() => {\n        Host.reconciler.mountComponent(this);\n        Host.measurer && Host.measurer.afterMountComponent(this._mountID);\n      });\n    }\n\n    return instance;\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    let instance = this[INSTANCE];\n\n    // Unmounting a composite component maybe not complete mounted\n    // when throw error in component constructor stage\n    if (instance && instance.componentWillUnmount) {\n      performInSandbox(() => {\n        instance.componentWillUnmount();\n      }, instance);\n    }\n\n    if (this[RENDERED_COMPONENT] != null) {\n      let currentElement = this.__currentElement;\n      let ref = currentElement.ref;\n\n      if (!currentElement.type._forwardRef && ref) {\n        detachRef(currentElement._owner, ref, this);\n      }\n\n      this[RENDERED_COMPONENT].unmountComponent(shouldNotRemoveChild);\n      this[RENDERED_COMPONENT] = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another async update,\n    // it would still be ignored because these fields are reset.\n    this.__pendingStateQueue = null;\n    this.__isPendingForceUpdate = false;\n\n    this.__destoryComponent();\n  }\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   */\n  __processContext(context) {\n    let maskedContext = {};\n    let Component = this.__currentElement.type;\n    let contextTypes = Component.contextTypes;\n\n    if (contextTypes) {\n      for (let contextName in contextTypes) {\n        maskedContext[contextName] = context[contextName];\n      }\n    }\n\n    return maskedContext;\n  }\n\n  __processChildContext(currentContext) {\n    let instance = this[INSTANCE];\n    // The getChildContext method context should be current instance\n    let childContext = instance.getChildContext && instance.getChildContext();\n    if (childContext) {\n      return assign({}, currentContext, childContext);\n    }\n\n    return currentContext;\n  }\n\n  __processPendingState(props, context) {\n    let instance = this[INSTANCE];\n    let queue = this.__pendingStateQueue;\n    if (!queue) {\n      return instance.state;\n    }\n    // Reset pending queue\n    this.__pendingStateQueue = null;\n    let nextState = assign({}, instance.state);\n    for (let i = 0; i < queue.length; i++) {\n      let partial = queue[i];\n      assign(\n        nextState,\n        isFunction(partial) ?\n          partial.call(instance, nextState, props, context) :\n          partial\n      );\n    }\n\n    return nextState;\n  }\n\n  __updateComponent(\n    prevElement,\n    nextElement,\n    prevUnmaskedContext,\n    nextUnmaskedContext\n  ) {\n    let instance = this[INSTANCE];\n\n    // Maybe update component that has already been unmounted or failed mount.\n    if (!instance) {\n      return;\n    }\n\n    performInSandbox(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        Host.measurer && Host.measurer.beforeUpdateComponent(this._mountID, this);\n      }\n\n      let willReceive;\n      let nextContext;\n      let nextProps;\n\n      // Determine if the context has changed or not\n      if (this._context === nextUnmaskedContext) {\n        nextContext = instance.context;\n      } else {\n        nextContext = this.__processContext(nextUnmaskedContext);\n        willReceive = true;\n      }\n\n      // Distinguish between a props update versus a simple state update\n      // Skip checking prop types again -- we don't read component.props to avoid\n      // warning for DOM component props in this upgrade\n      nextProps = nextElement.props;\n\n      if (prevElement !== nextElement) {\n        willReceive = true;\n      }\n\n      if (willReceive && instance.componentWillReceiveProps) {\n        // Calling this.setState() within componentWillReceiveProps will not trigger an additional render.\n        this.__isPendingState = true;\n        instance.componentWillReceiveProps(nextProps, nextContext);\n        this.__isPendingState = false;\n      }\n\n      // Update refs\n      if (this.__currentElement.type._forwardRef) {\n        instance.__prevForwardRef = prevElement.ref;\n        instance._forwardRef = nextElement.ref;\n      } else {\n        updateRef(prevElement, nextElement, this);\n      }\n\n      // Shoud update default\n      let shouldUpdate = true;\n      let prevProps = instance.props;\n      let prevState = instance.state;\n      // TODO: could delay execution processPendingState\n      let nextState = this.__processPendingState(nextProps, nextContext);\n      const callbacks = this.__pendingCallbacks;\n      this.__pendingCallbacks = null;\n\n      // ShouldComponentUpdate is not called when forceUpdate is used\n      if (!this.__isPendingForceUpdate) {\n        if (instance.shouldComponentUpdate) {\n          shouldUpdate = instance.shouldComponentUpdate(nextProps, nextState, nextContext);\n        } else if (instance.__isPureComponent) {\n          // Pure Component\n          shouldUpdate = !shallowEqual(prevProps, nextProps) ||\n            !shallowEqual(prevState, nextState);\n        }\n      }\n\n      if (shouldUpdate) {\n        this.__isPendingForceUpdate = false;\n        // Will set `this.props`, `this.state` and `this.context`.\n        let prevContext = instance.context;\n\n        // Cannot use this.setState() in componentWillUpdate.\n        // If need to update state in response to a prop change, use componentWillReceiveProps instead.\n        if (instance.componentWillUpdate) {\n          instance.componentWillUpdate(nextProps, nextState, nextContext);\n        }\n\n        // Replace with next\n        this.__currentElement = nextElement;\n        this._context = nextUnmaskedContext;\n        instance.props = nextProps;\n        instance.state = nextState;\n        instance.context = nextContext;\n\n        this.__updateRenderedComponent(nextUnmaskedContext);\n\n        if (instance.componentDidUpdate) {\n          scheduleLayoutInSandbox(() => {\n            instance.componentDidUpdate(prevProps, prevState, prevContext);\n          }, instance);\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          // Calc update count.\n          this._updateCount++;\n        }\n      } else {\n        // If it's determined that a component should not update, we still want\n        // to set props and state but we shortcut the rest of the update.\n        this.__currentElement = nextElement;\n        this._context = nextUnmaskedContext;\n        instance.props = nextProps;\n        instance.state = nextState;\n        instance.context = nextContext;\n      }\n\n      scheduleLayoutCallbacksInSandbox(callbacks, instance);\n\n      if (process.env.NODE_ENV !== 'production') {\n        scheduleLayout(() => {\n          Host.measurer && Host.measurer.afterUpdateComponent(this._mountID);\n          Host.reconciler.receiveComponent(this);\n        });\n      }\n    }, instance);\n  }\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   */\n  __updateRenderedComponent(context) {\n    let prevRenderedComponent = this[RENDERED_COMPONENT];\n    let prevRenderedElement = prevRenderedComponent.__currentElement;\n\n    let instance = this[INSTANCE];\n    let nextRenderedElement;\n\n    Host.owner = this;\n\n    if (process.env.NODE_ENV !== 'production') {\n      measureLifeCycle(() => {\n        nextRenderedElement = instance.render();\n      }, this._mountID, 'render');\n    } else {\n      nextRenderedElement = instance.render();\n    }\n\n    Host.owner = null;\n\n    if (shouldUpdateComponent(prevRenderedElement, nextRenderedElement)) {\n      const prevRenderedUnmaskedContext = prevRenderedComponent._context;\n      const nextRenderedUnmaskedContext = this.__processChildContext(context);\n      // If getChildContext existed and invoked when component updated that will make\n      // prevRenderedUnmaskedContext not equal nextRenderedUnmaskedContext under the tree\n      if (prevRenderedElement !== nextRenderedElement || prevRenderedUnmaskedContext !== nextRenderedUnmaskedContext) {\n        // If element type is illegal catch the error\n        prevRenderedComponent.__updateComponent(\n          prevRenderedElement,\n          nextRenderedElement,\n          prevRenderedUnmaskedContext,\n          nextRenderedUnmaskedContext\n        );\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        Host.measurer && Host.measurer.recordOperation({\n          instanceID: this._mountID,\n          type: 'update component',\n          payload: {}\n        });\n      }\n    } else {\n      let lastNativeNode = null;\n      let prevNativeNode = prevRenderedComponent.__getNativeNode();\n      // Only prevNativeNode is empty fragment should find the prevSlibingNativeNode\n      // And current root component is fragment, but not need find the prevSlibingNativeNode when init mounting\n      if (isArray(prevNativeNode) && prevNativeNode.length === 0 && instance.__rootID == null) {\n        lastNativeNode = getPrevSiblingNativeNode(prevRenderedComponent);\n      }\n\n      prevRenderedComponent.unmountComponent(true);\n\n      this[RENDERED_COMPONENT] = instantiateComponent(nextRenderedElement);\n      this[RENDERED_COMPONENT].__mountComponent(\n        this._parent,\n        instance,\n        this.__processChildContext(context),\n        (newNativeNode, parent) => {\n          const driver = Host.driver;\n\n          prevNativeNode = toArray(prevNativeNode);\n          newNativeNode = toArray(newNativeNode);\n\n          // If the new length large then prev\n          for (let i = 0; i < newNativeNode.length; i++) {\n            let nativeNode = newNativeNode[i];\n            if (prevNativeNode[i]) {\n              driver.replaceChild(nativeNode, prevNativeNode[i]);\n            } else if (lastNativeNode) {\n              driver.insertAfter(nativeNode, lastNativeNode);\n            } else {\n              driver.appendChild(nativeNode, parent);\n            }\n            lastNativeNode = nativeNode;\n          }\n\n          // If the new length less then prev\n          for (let i = newNativeNode.length; i < prevNativeNode.length; i++) {\n            driver.removeChild(prevNativeNode[i]);\n          }\n        }\n      );\n    }\n  }\n\n  __getNativeNode() {\n    let renderedComponent = this[RENDERED_COMPONENT];\n    if (renderedComponent) {\n      return renderedComponent.__getNativeNode();\n    }\n  }\n\n  __getPublicInstance() {\n    let instance = this[INSTANCE];\n\n    // The functional components cannot be given refs\n    if (instance.__isReactiveComponent) return null;\n\n    return instance;\n  }\n}\n\nexport default CompositeComponent;\n","import Host from './host';\nimport NativeComponent from './native';\nimport toArray from '../toArray';\nimport { INSTANCE, INTERNAL, NATIVE_NODE } from '../constant';\n\n/**\n * Fragment Component\n */\nclass FragmentComponent extends NativeComponent {\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n\n    let instance = this[INSTANCE] = {};\n    instance[INTERNAL] = this;\n\n    const fragment = [];\n    this.__mountChildrenImpl(this._parent, this.__currentElement, context, (nativeNode) => {\n      nativeNode = toArray(nativeNode);\n      for (let i = 0; i < nativeNode.length; i++) {\n        fragment.push(nativeNode[i]);\n      }\n    });\n    if (nativeNodeMounter) {\n      nativeNodeMounter(fragment, parent);\n    } else {\n      for (let i = 0; i < fragment.length; i++) {\n        Host.driver.appendChild(fragment[i], parent);\n      }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      this.__currentElement.type = FragmentComponent;\n      Host.reconciler.mountComponent(this);\n    }\n\n    return instance;\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    if (!shouldNotRemoveChild) {\n      const nativeNode = this.__getNativeNode();\n      for (let i = 0, l = nativeNode.length; i < l; i++) {\n        Host.driver.removeChild(nativeNode[i]);\n      }\n    }\n\n    // Do not need remove child when their parent is removed\n    this.__unmountChildren(true);\n    this.__destoryComponent();\n  }\n\n  __updateComponent(prevElement, nextElement, prevContext, nextContext) {\n    // Replace current element\n    this.__currentElement = nextElement;\n    this.__updateChildren(this.__currentElement, nextContext);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this.__currentElement.type = FragmentComponent;\n      Host.reconciler.receiveComponent(this);\n    }\n  }\n\n  __getNativeNode() {\n    const renderedChildren = this.__renderedChildren || {};\n    return [].concat.apply([], Object.keys(renderedChildren).map(key => renderedChildren[key].__getNativeNode()));\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  FragmentComponent.displayName = 'Fragment';\n}\n\nexport default FragmentComponent;\n","export default {\n  // Stubs - DevTools expects to find these methods and replace them\n  // with wrappers in order to observe components being mounted, updated and\n  // unmounted\n  mountComponent() {},\n  receiveComponent() {},\n  unmountComponent() {},\n  // Stub - DevTools expects to find this method and replace it\n  // with a wrapper in order to observe new root components being added\n  renderNewRootComponent() {},\n};\n","import Host from './host';\nimport EmptyComponent from './empty';\nimport NativeComponent from './native';\nimport TextComponent from './text';\nimport CompositeComponent from './composite';\nimport FragmentComponent from './fragment';\nimport reconciler from '../devtools/reconciler';\nimport { throwError, throwMinifiedError } from '../error';\n\nexport default function inject({ driver, measurer }) {\n  // Inject component class\n  Host.__Empty = EmptyComponent;\n  Host.__Native = NativeComponent;\n  Host.__Text = TextComponent;\n  Host.__Fragment = FragmentComponent;\n  Host.__Composite = CompositeComponent;\n\n  // Inject render driver\n  if (!(Host.driver = driver || Host.driver)) {\n    if (process.env.NODE_ENV !== 'production') {\n      throwError('Rax driver not found.');\n    } else {\n      throwMinifiedError(5);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Inject devtool renderer hook\n    Host.reconciler = reconciler;\n\n    // Inject performance measurer\n    Host.measurer = measurer;\n  }\n}\n","import inject from './vdom/inject';\nimport Instance from './vdom/instance';\nimport { isFunction, EMPTY_OBJECT } from './types';\n\nfunction render(element, container, options, callback) {\n  // Compatible with `render(element, container, callback)`\n  if (isFunction(options)) {\n    callback = options;\n    options = null;\n  }\n\n  options = options || EMPTY_OBJECT;\n  // Init inject\n  inject(options);\n\n  let rootComponent = Instance.mount(element, container, options);\n  let componentInstance = rootComponent.__getPublicInstance();\n\n  if (callback) {\n    callback.call(componentInstance);\n  }\n\n  return componentInstance;\n}\n\nexport default render;\n","export default '1.1.0';\n","import Instance from '../vdom/instance';\nimport Host from '../vdom/host';\nimport Reconciler from './reconciler';\nimport { RENDERED_COMPONENT } from '../constant';\n\nconst DevtoolsHook = {\n  ComponentTree: {\n    getClosestInstanceFromNode(node) {\n      return Instance.get(node);\n    },\n    getNodeFromInstance(inst) {\n      // inst is an internal instance (but could be a composite)\n      while (inst[RENDERED_COMPONENT]) {\n        inst = inst[RENDERED_COMPONENT];\n      }\n\n      if (inst) {\n        return inst._nativeNode;\n      } else {\n        return null;\n      }\n    }\n  },\n  Mount: {\n    get _instancesByReactRootID() {\n      const rootComponents = {};\n\n      // Ignore display top-level root component\n      for (let rootID in Host.rootComponents) {\n        rootComponents[rootID] = Host.rootComponents[rootID][RENDERED_COMPONENT];\n      }\n\n      return rootComponents;\n    },\n\n    _renderNewRootComponent: Reconciler.renderNewRootComponent\n  },\n  Reconciler,\n  // monitor the info of all components\n  monitor: null\n};\n\nexport default DevtoolsHook;\n","export createElement from './createElement';\nexport createContext from './createContext';\nexport createRef from './createRef';\nexport forwardRef from './forwardRef';\nexport { useState, useContext, useEffect, useLayoutEffect, useRef, useCallback, useMemo, useReducer, useImperativeHandle } from './hooks';\nexport memo from './memo';\nexport Fragment from './fragment';\nexport render from './render';\nexport Component, { PureComponent } from './vdom/component';\nexport version from './version';\n\nimport Host from './vdom/host';\nimport Instance from './vdom/instance';\nimport Element from './vdom/element';\nimport flattenChildren from './vdom/flattenChildren';\nimport DevtoolsHook from './devtools/index';\n\nexport const shared = {\n  Host,\n  Instance,\n  Element,\n  flattenChildren\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  /* global __RAX_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __RAX_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n    typeof __RAX_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n    __RAX_DEVTOOLS_GLOBAL_HOOK__.inject(DevtoolsHook);\n  }\n\n  if (typeof window !== 'undefined') {\n    if (window.__RAX_INITIALISED__) {\n      console.error('Warning: more than one instance of Rax has been initialised, this could lead to unexpected behaviour.');\n    }\n    window.__RAX_INITIALISED__ = true;\n  }\n}\n"],"names":["__mountID","__isUpdating","driver","rootComponents","rootInstances","owner","ReactPropTypesSecret","printWarning","require$$0","loggedTypeFailures","has","Function","call","bind","Object","prototype","hasOwnProperty","text","message","console","error","Error","x","checkPropTypes","typeSpecs","values","location","componentName","getStack","typeSpecName","err","name","ex","stack","resetWarningCache","Element","type","key","ref","props","element","_owner","propTypes","displayName","defineProperty","configurable","enumerable","writable","value","freeze","isNull","obj","isFunction","isObject","isPlainObject","EMPTY_OBJECT","toString","isArray","array","Array","isString","string","isNumber","NOOP","traverseChildren","children","result","i","l","length","push","flattenChildren","updateCallbacks","effectCallbacks","layoutCallbacks","scheduler","setTimeout","callback","invokeFunctionsWithClear","callbacks","shift","schedule","flush","scheduleEffect","flushEffect","scheduleLayout","flushLayout","createMinifiedError","code","typeInfo","undefined","getTypeInfo","getRenderErrorInfo","keys","ownerComponent","Host","__getName","throwMinifiedError","throwError","warning","template","args","argsWithFormat","map","item","unshift","apply","argIndex","replace","e","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","info","parentName","isValidElement","object","validateExplicitKey","__validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","child","RESERVED_PROPS","createElement","config","propName","childrenLength","arguments","childArray","defaultProps","invokeFunctionsWithContext","fns","context","is","y","shallowEqual","objA","objB","keysA","keysB","INTERNAL","INSTANCE","NATIVE_NODE","RENDERED_COMPONENT","getCurrentInstance","getCurrentRenderingInstance","currentInstance","areInputsEqual","inputs","prevInputs","useState","initialState","hookID","getHookID","hooks","getHooks","setState","newState","hook","eagerState","__isScheduled","__update","__shouldUpdate","useContext","useEffect","effect","useEffectImpl","useLayoutEffect","defered","__create","immediately","current","__destory","currentDestory","msg","then","__prevInputs","__inputs","didMount","willUnmount","didUpdate","useImperativeHandle","create","nextInputs","concat","useRef","initialValue","useCallback","useMemo","useReducer","reducer","initialArg","init","dispatch","action","queue","__actions","currentState","__eagerState","eagerReducer","__eagerReducer","next","__reRenders","toArray","getNearestParent","instance","matcher","parent","__parentInstance","id","createContext","defaultValue","contextID","Provider","__contextID","__handlers","__on","handler","__off","filter","h","_getChildContext","getValue","componentDidUpdate","prevProps","render","getNearestParentProvider","Consumer","provider","prevValue","setValue","consumer","_contextID","_defaultValue","__getNearestParentProvider","createRef","_forwardRef","memo","compare","__compares","Fragment","BaseComponent","__currentElement","__initComponent","parentInstance","_parent","_context","_mountID","__destoryComponent","reconciler","unmountComponent","__mountComponent","nativeNodeMounter","__mountNativeNode","mountComponent","shouldNotRemoveChild","removeChild","currentElement","nativeNode","__getNativeNode","appendChild","__createNativeNode","__getPublicInstance","EmptyComponent","createEmpty","__updateComponent","updateRef","prevElement","nextElement","component","prevRef","nextRef","detachRef","attachRef","refs","instantiateComponent","__Native","__Composite","__Text","String","__Fragment","__Empty","shouldUpdateComponent","prevEmpty","nextEmpty","isPrevStringOrNumber","getElementKeyName","index","elementKey","defaultName","keyName","keyUnique","getPrevSiblingNativeNode","__renderedChildren","__mountIndex","Component","partialState","updater","forceUpdate","PureComponent","__isPureComponent","rootID","Root","__element","__rootID","__getRenderedComponent","KEY","set","get","remove","mount","container","hydrate","measurer","beforeRender","createBody","renderOptions","parentContext","parentInternal","__processChildContext","prevRootInstance","__penddingContext","afterRender","renderedComponent","defaultContext","rootInstance","renderNewRootComponent","assign","STYLE","CHILDREN","TREE","EVENT_PREFIX_REGEXP","NativeComponent","appendType","append","__prevStyleCopy","__mountChildren","__mountChildrenImpl","renderedChildren","renderedChildrenImage","renderedChild","mountImage","__unmountChildren","Instance","prevContext","nextContext","nextProps","__updateProperties","__updateChildren","receiveComponent","propKey","styleName","styleUpdates","lastStyle","test","eventListener","removeEventListener","slice","toLowerCase","removeAttribute","nextProp","prevProp","eventName","addEventListener","setAttribute","recordOperation","instanceID","payload","setStyle","nextChildrenElements","prevChildren","nextChildren","prevChild","__unmount","isFragmentParent","prevFirstChild","prevFirstNativeNode","isPrevFirstEmptyFragment","shouldUnmountPrevFirstChild","lastPlacedNode","shouldRemoveAllChildren","Boolean","removeChildren","shouldUnmount","insertNodes","nativeNodes","parentNode","insertAfter","insertBefore","nextIndex","nextChild","prevChildNativeNode","TextComponent","updateText","_stringText","createText","RE_RENDER_LIMIT","ReactiveComponent","pureRender","__isReactiveComponent","__render","__hookID","__hooks","__children","__contexts","state","__prevForwardRef","compares","shouldComponentUpdate","arePropsEqual","contextItem","__provider","handleContextChange","__lastValue","componentWillMount","componentDidMount","componentWillReceiveProps","componentWillUnmount","__isPendingForceUpdate","dirtyComponents","getPendingCallbacks","internal","__pendingCallbacks","setPendingCallbacks","getPendingStateQueue","__pendingStateQueue","setPendingStateQueue","enqueueCallback","callbackQueue","enqueueState","stateQueue","runUpdate","prevUnmaskedContext","nextUnmaskedContext","mountOrderComparator","c1","c2","performUpdate","dirties","c","sort","pop","scheduleUpdate","shouldAsyncUpdate","indexOf","requestUpdate","hasComponentRendered","__isPendingState","Updater","performInSandbox","fn","handleError","boundary","componentDidCatch","constructor","getDerivedStateFromError","boundaryInternal","measureLifeCycle","beforeLifeCycle","afterLifeCycle","scheduleLayoutInSandbox","scheduleLayoutCallbacksInSandbox","CompositeComponent","_updateCount","beforeMountComponent","publicProps","componentPrototype","publicContext","__processContext","renderedElement","process","__processPendingState","afterMountComponent","maskedContext","contextTypes","contextName","currentContext","childContext","getChildContext","nextState","partial","beforeUpdateComponent","willReceive","shouldUpdate","prevState","componentWillUpdate","__updateRenderedComponent","afterUpdateComponent","prevRenderedComponent","prevRenderedElement","nextRenderedElement","prevRenderedUnmaskedContext","nextRenderedUnmaskedContext","lastNativeNode","prevNativeNode","newNativeNode","replaceChild","FragmentComponent","fragment","inject","options","rootComponent","componentInstance","DevtoolsHook","ComponentTree","getClosestInstanceFromNode","getNodeFromInstance","inst","_nativeNode","Mount","_instancesByReactRootID","_renderNewRootComponent","Reconciler","monitor","shared","__RAX_DEVTOOLS_GLOBAL_HOOK__","window","__RAX_INITIALISED__"],"mappings":"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"}