"use strict";

exports.__esModule = true;
exports.formatSystemInfoAsync = exports.formatSystemInfo = exports.formatResult = void 0;
var _promisify = require("./_utils/promisify");
var _styleOptions = require("./_utils/styleOptions");
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var formatLanguage = function formatLanguage(language) {
  var fl = 'en';
  switch (language.toLowerCase()) {
    case 'zh_cn':
    case 'zh-hans':
    case 'zh-cn':
    case 'chinese':
      fl = 'zh_CN';
      break;
    case 'zh_tw':
    case 'zh-hant':
    case 'zh-hk':
      fl = 'zh_TW';
      break;
    case 'en':
    case 'english':
    case 'en-us':
      fl = 'en';
      break;
    default:
      fl = 'en';
  }
  return fl;
};
var formatSystemInfo = function formatSystemInfo(api) {
  return function () {
    var res = api();
    return formatResult(res);
  };
};
exports.formatSystemInfo = formatSystemInfo;
var formatResult = function formatResult(data) {
  var defaultData = {
    pixelRatio: 1,
    screenWidth: 0,
    screenHeight: 0,
    windowWidth: 0,
    windowHeight: 0,
    language: '',
    version: '',
    platform: ''
  };
  return _extends({}, defaultData, data, {
    language: data.language ? formatLanguage(data.language) : ''
  });
};
exports.formatResult = formatResult;
var formatSystemInfoAsync = function formatSystemInfoAsync(api, containerName) {
  return function (options) {
    var _options = (0, _styleOptions.styleIn)(options, containerName);
    var afterOptions = _extends({}, _options, {
      success: function success(res) {
        _options.success && _options.success(formatResult(res));
      },
      complete: function complete(res) {
        _options.complete && _options.complete(res.pixelRatio ? formatResult(res) : res);
      }
    });
    return (0, _promisify.promisify)(api)(afterOptions).then(formatResult);
  };
};
exports.formatSystemInfoAsync = formatSystemInfoAsync;