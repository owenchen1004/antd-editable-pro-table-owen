"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.IContext = exports.useLang = exports.useTheme = exports.BaseContext = exports.Provider = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _next = require("@alifd/next");

var _enUs = _interopRequireDefault(require("@alifd/next/lib/locale/en-us"));

var _zhCn = _interopRequireDefault(require("@alifd/next/lib/locale/zh-cn"));

var _BaseContext = _interopRequireWildcard(require("./BaseContext"));

exports.BaseContext = _BaseContext["default"];
exports.IContext = _BaseContext.IContext;

var _useTheme = _interopRequireDefault(require("./useTheme"));

exports.useTheme = _useTheme["default"];

var _useLang = _interopRequireDefault(require("./useLang"));

exports.useLang = _useLang["default"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Provider = function Provider(_ref) {
  var userTheme = _ref.theme,
      userLang = _ref.lang,
      children = _ref.children;

  var _useState = (0, _react.useState)(userTheme),
      theme = _useState[0],
      setTheme = _useState[1];

  var _useState2 = (0, _react.useState)(userLang),
      lang = _useState2[0],
      setLang = _useState2[1]; // 主题切换


  (0, _react.useEffect)(function () {
    if (theme === 'dark') {
      document.body.classList.add('dark'); // `to-string-loader` `@alifd/theme-1` 这两个插件要安装
      // @ts-ignore

      Promise.resolve().then(function () {
        return _interopRequireWildcard(require('!!to-string-loader!css-loader!@alifd/theme-1/variables.css'));
      }).then(function (cssString) {
        var tokenVariables = cssString["default"];
        var oStyle = document.createElement('style');
        oStyle.innerHTML = tokenVariables;
        oStyle.id = 'theme-style';
        document.head.appendChild(oStyle);
      });
    } else {
      document.body.classList.remove('dark');
      var oDarkStyle = document.getElementById('theme-style');
      oDarkStyle && oDarkStyle.remove();
    }
  }, [theme]);
  return /*#__PURE__*/_react["default"].createElement(_BaseContext["default"].Provider, {
    value: {
      theme: theme,
      lang: lang,
      setTheme: setTheme,
      setLang: setLang
    }
  }, /*#__PURE__*/_react["default"].createElement(_next.ConfigProvider, {
    locale: lang === 'en' ? _enUs["default"] : _zhCn["default"]
  }, children));
};

exports.Provider = Provider;
Provider.defaultProps = {
  theme: 'light',
  lang: 'zh-CN'
};
Provider.propTypes = {
  theme: _propTypes["default"].oneOf(['dark', 'light']),
  lang: _propTypes["default"].oneOf(['zh-CN', 'en'])
};