const Compilation = require('webpack/lib/Compilation');
const { ConcatSource, RawSource } = require('webpack-sources');
const pluginName = 'Story Code Plugin';

const { multipleProps } = require('./getMultiProps');
const fs = require('fs-extra');
const path = require('path');
const cwd = process.cwd();
const pkgJSONPath = path.resolve(cwd, 'package.json');
const pkgJSON = fs.readJSONSync(pkgJSONPath);

const pkgInfo = {
  name: pkgJSON.name,
  version: pkgJSON.version,
  dependencies: multipleProps.dependencies
};

class StoryCodeBundlePlugin {
  apply(compiler) {
    compiler.hooks.compilation.tap(
      pluginName,
      (
        compilation /* stats is passed as an argument when done hook is tapped.  */
      ) => {
        compilation.hooks.optimizeChunkAssets.tapAsync(
          { name: pluginName, stage: Compilation.PROCESS_ASSETS_STAGE_ADDITIONAL},
          (chunks, done) => {
            chunks.forEach((chunk) => {
              chunk.files.forEach((fileName) => {
                if (/^main\..+\.bundle\.js/.test(fileName)) {
                  compilation.assets[fileName] = new ConcatSource(
                    new RawSource(`(function storyCodeAddon(){window.pkgInfo = ${JSON.stringify(pkgInfo)};window.storyCodes = ${JSON.stringify(global.stories)};})();`),
                    compilation.assets[fileName],
                  );
                }
              });
            });
            done();
          },
       )

      }
    );
  }
}

module.exports = StoryCodeBundlePlugin;
