const path = require('path');
const chalk = require('chalk');
const { handleWebpackErr } = require('rax-compile-config');
const { platformMap } = require('miniapp-builder-shared');
const consoleClear = require('console-clear');
const getDirs = require('./getDirs');

function raxBuildCompileLog({ err, stats }, targets, rootDir, options) {
  consoleClear(true);
  const { ES_DIR, BUILD_DIR, LIB_DIR, DIST_DIR, MINIAPP_DIR } = getDirs(rootDir);

  if (!handleWebpackErr(err, stats)) {
    return;
  }

  console.log();
  console.log();
  console.log(chalk.yellowBright('==== 🎉 构建完成 ===================================='));
  console.log();

  console.log(chalk.green('文档地址:'));
  console.log('  ', chalk.underline.white(BUILD_DIR));
  console.log();

  console.log(chalk.green('es 目录:'));
  console.log('  ', chalk.underline.white(ES_DIR));
  console.log();

  console.log(chalk.green('lib 目录:'));
  console.log('  ', chalk.underline.white(LIB_DIR));
  console.log();

  console.log(chalk.green('dist 目录:'));
  console.log('  ', chalk.underline.white(DIST_DIR));
  console.log();

  Object.entries(platformMap).forEach(([platform, config]) => {
    if (targets.includes(platform)) {
      console.log(chalk.green(`[${config.name}] 小程序预览项目地址:`));
      console.log('  ', chalk.underline.white(path.resolve(MINIAPP_DIR, platform)));
      console.log();
    }
  });
}

module.exports = raxBuildCompileLog;
