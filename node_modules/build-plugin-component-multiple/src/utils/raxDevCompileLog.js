const path = require('path');
const chalk = require('chalk');
const consoleClear = require('console-clear');
const { handleWebpackErr } = require('rax-compile-config');
const { platformMap } = require('miniapp-builder-shared');
const { WEB } = require('../constants');
const getDirs = require('./getDirs');

function devCompileLog(devCompleted, devUrl, targets, entries, rootDir, options) {
  consoleClear(true);
  const { err, stats } = devCompleted;
  const { MINIAPP_DIR } = getDirs(rootDir);

  if (!handleWebpackErr(err, stats)) {
    return;
  }

  console.log();
  console.log();
  console.log(chalk.yellowBright('==== 🎉 启动完成 ===================================='));
  console.log();
  console.log();

  if (targets.includes(WEB)) {
    console.log(chalk.green('[Web] 页面地址:'));
    Object.keys(entries).forEach((entry) => {
      const [componentName, demoName] = entry.split('$$');
      let url = devUrl + componentName + '/' + demoName;
      if (!componentName) {
        url = devUrl + demoName;
      }
      console.log('  ', chalk.underline.white(url));
    });
    console.log();
    console.log();
  }

  Object.entries(platformMap).forEach(([platform, config]) => {
    if (targets.includes(platform)) {
      console.log(chalk.green(`[${config.name}] 预览项目构建完成, 请使用对应 IDE 打开:`));
      console.log('  ', chalk.underline.white(path.resolve(MINIAPP_DIR, platform)));
      console.log();
      console.log();
    }
  });
}

module.exports = devCompileLog;
