const path = require('path');
const fse = require('fs-extra');
const { merge } = require('webpack-merge');

module.exports = function (config, pkgName, rootDir) {
  const componentsDir = path.resolve(rootDir, 'src/components');
  const realComponentDir = fse.existsSync(componentsDir) ? componentsDir : path.resolve(rootDir, 'src');
  // 优化处理，构建 demo 时，直接使用 components 下面的内容，不加
  const importConfigs = [
    [
      require.resolve('babel-plugin-import'),
      {
        libraryName: pkgName,
        customName: (name) => {
          if (name) {
            return path.join(realComponentDir, name);
          }
          return pkgName;
        },
      },
      'inner-module-import',
    ],
  ];

  ['tsx', 'jsx'].forEach((rule) => {
    config.module
      .rule(rule)
      .use('babel-loader')
      .tap((opts) => {
        return merge(opts, {
          plugins: [...importConfigs],
        });
      });
  });

  return config;
};
