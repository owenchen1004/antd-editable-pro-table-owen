/**
 * 根据组件信息，抽取分组维度的数据
 */

const camelCase = require('camelcase');

// 默认分类
const CAT_LIST = [
  {
    key: 'General',
    title: '通用',
  },
  {
    key: 'Navigation',
    title: '导航',
  },
  {
    key: 'DataEntry',
    title: '数据录入',
  },
  {
    key: 'DataDisplay',
    title: '数据展示',
  },
  {
    key: 'Feedback',
    title: '反馈',
  },
  {
    key: 'Utils',
    title: '工具',
  },
  {
    key: 'Others',
    title: '其他',
  },
];

module.exports = function (components = []) {
  const json = {};

  components.forEach((item) => {
    const { componentName, componentPascalName, title, meta, demos } = item;
    let category;

    if (!meta.category) {
      category = CAT_LIST[0].title;
    } else {
      category = camelCase(meta.category, { pascalCase: true });
    }

    const componentDemos = demos.map((demo) => {
      const { demoName, order, demoPascalName, href, filepath, title } = demo;

      return {
        href,
        title,
        demoName,
        demoPascalName,
        filepath,
        order,
        miniappPageHref: `/pages/${componentPascalName}${demoPascalName}/index`,
      };
    });

    const component = {
      componentName,
      componentPascalName,
      category,
      title,
      icon: meta.icon,
      demos: componentDemos,
    };

    if (json[category]) {
      json[category].push(component);
    } else {
      json[category] = [component];
    }
  });

  return Object.keys(json)
    .map((key) => {
      const index = CAT_LIST.findIndex((c) => c.key === key);
      const title = index > -1 ? CAT_LIST[index].title : key;

      return {
        name: key,
        title,
        order: index > -1 ? index : 9,
        components: json[key].sort((a, b) => {
          return a.componentName - b.componentName;
        }),
      };
    })
    .sort((a, b) => {
      return a.order - b.order;
    });
};
