function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsx createElement */
import { createElement } from 'rax';
import classNames from 'classnames';
import View from './view';
export default (function (props) {
  var className = props.className,
      _props$direction = props.direction,
      direction = _props$direction === void 0 ? 'hoz' : _props$direction,
      _props$size = props.size,
      size = _props$size === void 0 ? 'medium' : _props$size,
      others = _objectWithoutPropertiesLoose(props, ["className", "direction", "size"]);

  return createElement(View, _extends({
    className: classNames('mt-demo-space', "mt-demo-space--" + direction, "mt-demo-space--" + direction + "-" + size, className)
  }, others));
});