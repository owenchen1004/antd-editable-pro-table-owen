function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* @jsx createElement */
import { createElement } from 'rax';
import classNames from 'classnames';
import Typography from './typography';
export default (function (props) {
  var children = props.children,
      className = props.className,
      indented = props.indented,
      others = _objectWithoutPropertiesLoose(props, ["children", "className", "indented"]);

  return createElement(Typography, _extends({}, others, {
    type: "subtitle",
    className: classNames('mt-demo-caption', className, {
      'mt-demo-caption--indented': indented
    })
  }), children);
});