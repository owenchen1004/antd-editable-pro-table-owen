export const filterTransferValue = (dataSource, defaultValue) => {
    const leftList = [];
    const rightList = [];
    dataSource.map((item) => {
        if (defaultValue.indexOf(item.value) === -1) {
            leftList.push(item);
        }
        else {
            rightList.push(item);
        }
    });
    return {
        leftList,
        rightList,
    };
};
export const getDataStatus = (dataSource) => {
    const listDataSize = dataSource.length;
    let checkedSize = 0;
    let disabledSize = 0;
    let isCheckAll = false;
    dataSource.map((item) => {
        if (item.isChecked) {
            checkedSize = checkedSize + 1;
        }
        if (item.disabled) {
            disabledSize = disabledSize + 1;
        }
    });
    isCheckAll = listDataSize - disabledSize === checkedSize && checkedSize > 0 ? true : false;
    return {
        listDataSize,
        checkedSize,
        disabledSize,
        isCheckAll,
    };
};
export const checkAllData = (dataSource, status) => {
    dataSource.map((item) => {
        if (!item.disabled) {
            item.isChecked = status;
        }
    });
    return dataSource;
};
export const setListDisabled = (dataSource) => {
    dataSource.map((item) => {
        item.disabled = true;
    });
    return dataSource;
};
export const changeCheckedItem = (initList, goalList) => {
    const initValue = [];
    const changeListValue = [];
    const changeList = [];
    initList = initList.filter((item) => {
        const { isChecked, disabled, value } = item;
        if (isChecked && !disabled) {
            item.isChecked = false;
            changeList.push(item);
            changeListValue.push(value);
        }
        else {
            initValue.push(value);
            return item;
        }
    });
    goalList = [...changeList, ...goalList];
    const goalValue = goalList.map((item) => item.value);
    return {
        initList,
        initValue,
        goalList,
        goalValue,
        changeList,
        changeListValue,
    };
};
export const setCheckedItem = (dataSource, checkedList) => {
    dataSource.map((item) => {
        if (checkedList.indexOf(item.value) !== -1) {
            item.isChecked = true;
        }
    });
    return dataSource;
};
