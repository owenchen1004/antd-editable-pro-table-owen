import { __rest } from "tslib";
import classNames from 'classnames';
import { createElement } from 'rax';
import Text from 'rax-text';
import View from '../view';
import { isString } from '../utils';
const Divider = (props) => {
    const { prefix = 'mt-', orientation, dashed = false, direction = 'hoz', children, className } = props, others = __rest(props, ["prefix", "orientation", "dashed", "direction", "children", "className"]);
    const clsPrefix = `${prefix}divider`;
    const clses = {
        divider: classNames(className, clsPrefix, `${clsPrefix}--${direction}`, {
            [`${clsPrefix}--dashed`]: dashed,
            [`${clsPrefix}--${orientation}`]: orientation,
        }),
        text: classNames(`${clsPrefix}-text`, `${clsPrefix}-text--${direction}`, `${clsPrefix}-text--${orientation}`),
    };
    const renderChildren = () => {
        if (direction === 'hoz' && children) {
            if (isString(children)) {
                return createElement(Text, { className: clses.text }, children);
            }
            else {
                return createElement(View, { className: clses.text }, children);
            }
        }
        return null;
    };
    return (createElement(View, Object.assign({}, others, { className: clses.divider }), renderChildren()));
};
Divider.displayName = 'Divider';
export default Divider;
