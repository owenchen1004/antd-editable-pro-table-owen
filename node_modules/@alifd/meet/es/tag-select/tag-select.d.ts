/// <reference types="rax" />
import { BaseComponentAttributes, BasicSizeType } from '../utils/types';
declare type T = number | string;
interface TagItem {
    label: string;
    value: T;
    disabled?: boolean;
}
export interface TagSelectProps extends BaseComponentAttributes {
    size?: BasicSizeType;
    value?: T | T[];
    defaultValue?: T | T[];
    dataSource: Array<TagItem | T>;
    disabled?: boolean;
    readOnly?: boolean;
    mode?: 'single' | 'multiple';
    onChange?: (value?: T | T[]) => void;
    inlineMode?: boolean;
    isPreview?: boolean;
}
declare const _default: import("rax").ForwardRefExoticComponent<TagSelectProps & import("rax").RefAttributes<any>>;
export default _default;
