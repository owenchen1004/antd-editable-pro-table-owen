import { __rest } from "tslib";
import { createElement } from 'rax';
import classNames from 'classnames';
import View from '../view';
import Modal from '../modal';
import Icon from '../icon';
import { isFunction } from '../utils';
const Popup = (props) => {
    const { prefix = 'mt-', closeIconType = 'error', bgColor = 'transparent', visible, children, closeMode = ['mask', 'close'], className, style, onClose } = props, others = __rest(props, ["prefix", "closeIconType", "bgColor", "visible", "children", "closeMode", "className", "style", "onClose"]);
    const clsPrefix = `${prefix}dialog-popup`;
    const containerStyle = style || {};
    if (bgColor) {
        containerStyle.backgroundColor = bgColor;
    }
    const handleClose = (reason) => {
        if (isFunction(onClose) && Array.isArray(closeMode) && closeMode.indexOf(reason) > -1) {
            onClose(reason);
        }
    };
    return (createElement(Modal, Object.assign({}, others, { visible: visible, containerClassName: clsPrefix, onClose: handleClose }),
        createElement(View, { className: classNames(className, `${clsPrefix}-container`), style: containerStyle }, children),
        createElement(Icon, { className: `${clsPrefix}-close`, type: closeIconType, size: "l", onClick: () => handleClose('close') })));
};
export default Popup;
