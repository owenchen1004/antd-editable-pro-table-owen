import { __rest } from "tslib";
import { createElement } from 'rax';
import navigate from '@uni/navigate';
import { setClipboard } from '@uni/clipboard';
import Message from '../message';
import { isStrictByteDanceMicroApp, isStrictMiniApp, scrollToId, isFunction, isUndef } from '../utils';
const MINIAPP_PAGE_REG = /^\/[a-zA-z0-9]/;
const SIMPLE_URL_REG = /[a-zA-z]+:\/\/[^\s]*/;
const RichTextLink = (props) => {
    const { style, href, className, children, onLinkClick } = props, otherProps = __rest(props, ["style", "href", "className", "children", "onLinkClick"]);
    const handleClick = () => {
        if (href[0] === '#') {
            const id = href.substring(1);
            scrollToId(id);
        }
        else if (SIMPLE_URL_REG.test(href)) {
            if ((isFunction(onLinkClick) && onLinkClick(href) !== false) || isUndef(onLinkClick)) {
                setClipboard({
                    text: href,
                }).then(() => {
                    if (isStrictMiniApp || isStrictByteDanceMicroApp) {
                        Message.show({
                            content: '链接已复制到粘贴板',
                        });
                    }
                });
            }
        }
        else if (MINIAPP_PAGE_REG.test(href)) {
            navigate.push({ url: href }).then((res) => { });
        }
    };
    return (createElement("view", Object.assign({}, otherProps, { className: className, onClick: handleClick, style: style }), children));
};
export default RichTextLink;
