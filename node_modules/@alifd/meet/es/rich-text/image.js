import { __rest } from "tslib";
import { createElement, useState } from 'rax';
import Image from 'rax-image';
import classNames from 'classnames';
import { isFunction } from '../utils';
const RichTextImage = (props) => {
    const { item, onClick, className, lazyLoad, errorImage, imgIndex, src, onError, style } = props, otherProps = __rest(props, ["item", "onClick", "className", "lazyLoad", "errorImage", "imgIndex", "src", "onError", "style"]);
    const [imgSrc, setImgSrc] = useState(src);
    const handleImageErorr = () => {
        setImgSrc(errorImage);
        if (isFunction(onError)) {
            onError(src, imgIndex);
        }
    };
    const handleClick = (...args) => {
        if (!imgSrc.includes('data:')) {
            onClick(...args);
        }
    };
    return (createElement(Image, Object.assign({}, otherProps, { className: classNames(className, {
            '_img-error': imgSrc === errorImage,
        }), source: {
            uri: imgSrc,
        }, mode: "widthFix", placeholder: 'https://gw.alicdn.com/imgextra/i4/O1CN01iIbyHS1dSDboBiORe_!!6000000003734-2-tps-200-200.png', loading: lazyLoad ? 'lazy' : 'eager', style: style, onClick: handleClick, onError: handleImageErorr })));
};
export default RichTextImage;
