import { __rest } from "tslib";
import { createElement } from 'rax';
import classNames from 'classnames';
import View from '../view';
import Button from '../button';
import { isValidArray } from '../utils';
const BottomButton = (props) => {
    const { prefix = 'mt-', actions = ['cancel', 'ok'], size = 'large', okText, cancelText, className, okProps, cancelProps, enableSafeArea = false, showDividingLine = true, children, onOk, onCancel } = props, others = __rest(props, ["prefix", "actions", "size", "okText", "cancelText", "className", "okProps", "cancelProps", "enableSafeArea", "showDividingLine", "children", "onOk", "onCancel"]);
    const clsPrefix = `${prefix}bottom-btn`;
    const clses = {
        bottomBtn: classNames(clsPrefix, className, {
            [`${clsPrefix}--dividing`]: showDividingLine,
            [`${clsPrefix}--safe`]: enableSafeArea,
        }),
        extra: `${clsPrefix}-extra`,
        container: classNames(`${clsPrefix}-container`, {
            [`${clsPrefix}-container--col-2`]: isValidArray(actions) && actions.length === 2,
        }),
    };
    const _a = okProps || {}, { text: okBtnText } = _a, otherOkBtnProps = __rest(_a, ["text"]);
    const _b = cancelProps || {}, { text: cancelBtnText } = _b, otherCancelBtnProps = __rest(_b, ["text"]);
    const newOkBtnText = okText || okBtnText || '确定';
    const newCancelBtnText = cancelText || cancelBtnText || '取消';
    return (createElement(View, Object.assign({}, others, { className: clses.bottomBtn }),
        children ? createElement(View, { className: clses.extra }, children) : null,
        createElement(View, { className: clses.container }, actions.map((act) => {
            const isCancel = act === 'cancel';
            const text = isCancel ? newCancelBtnText : newOkBtnText;
            const btnProps = Object.assign({ onClick: isCancel ? onCancel : onOk, size }, (isCancel ? otherCancelBtnProps : otherOkBtnProps));
            return (createElement(Button, Object.assign({ key: `bottom-btn-${act}`, type: isCancel ? 'normal' : 'primary', model: isCancel ? 'outline' : 'solid' }, btnProps), text));
        }))));
};
BottomButton.displayName = 'BottomButton';
export default BottomButton;
