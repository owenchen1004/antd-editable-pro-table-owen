import { __rest } from "tslib";
import classNames from 'classnames';
import { createElement, forwardRef } from 'rax';
import RaxSlider from 'rax-slider';
import Children from 'rax-children';
const DIRECTION_MAP = {
    ver: 'vertical',
    hoz: 'horizontal',
};
const Slider = (props, ref) => {
    const { prefix = 'mt-', activeIndex = 0, showDots = true, autoplay = false, autoplaySpeed = 3000, dotStyle = {}, onChange = () => { }, infinite = true, width = 750, height = 100, slideDirection = 'hoz', className, children } = props, others = __rest(props, ["prefix", "activeIndex", "showDots", "autoplay", "autoplaySpeed", "dotStyle", "onChange", "infinite", "width", "height", "slideDirection", "className", "children"]);
    const handleChange = (e) => {
        if (onChange) {
            onChange(e.index || 0);
        }
    };
    return (createElement(RaxSlider, Object.assign({}, others, { className: classNames(className, `${prefix}slider`), ref: ref, width: `${width}`, height: `${height}`, autoPlay: autoplay, showsPagination: showDots, index: activeIndex, paginationStyle: Object.assign({ itemColor: 'rgba(245,245,245,0.5)', itemSelectedColor: '#666', itemSize: 16, width: '100%', bottom: 16 }, dotStyle), autoplay: autoplay, direction: DIRECTION_MAP[slideDirection] || 'horizontal', loop: infinite, autoPlayInterval: autoplaySpeed, onChange: handleChange }), Children.toArray(children).filter((child) => {
        if (!child) {
            return null;
        }
        return child;
    })));
};
Slider.displayName = 'Slider';
export default forwardRef(Slider);
