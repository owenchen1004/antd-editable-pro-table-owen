import { __rest } from "tslib";
import classNames from 'classnames';
import { createElement, forwardRef, useContext } from 'rax';
import Checkbox from '../checkbox';
import List from '../list';
import SelectContext from './context';
const Option = (props, ref) => {
    const { disabled = false, children, className, value, isNew = false, onClick = () => { }, selected = false, title } = props, others = __rest(props, ["disabled", "children", "className", "value", "isNew", "onClick", "selected", "title"]);
    const { prefix } = useContext(SelectContext);
    const clsPrefix = `${prefix}select-option`;
    return (createElement(List.Item, Object.assign({}, others, { className: classNames(clsPrefix, className, {
            [`${clsPrefix}--disabled`]: disabled,
        }), title: children || title, media: createElement(List.ItemMedia, null,
            createElement(Checkbox, { checked: selected, disabled: disabled || isNew, className: `${clsPrefix}-checkbox` })), onClick: () => {
            if (!disabled) {
                onClick(value);
            }
        } })));
};
Option.displayName = 'SelectOption';
export default forwardRef(Option);
