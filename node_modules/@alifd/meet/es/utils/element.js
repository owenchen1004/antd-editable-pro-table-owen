import { __awaiter } from "tslib";
import { getScrollOffset, getBoundingClientRect } from 'universal-element';
import pageScrollTo from '@uni/page-scroll-to';
import { noop, isStrictWechatMiniProgram } from '../utils';
export function getElementScrollOffset(id) {
    return __awaiter(this, void 0, void 0, function* () {
        return getScrollOffset(`#${id}`).then((ret) => {
            const offset = {
                scrollLeft: 0,
                scrollTop: 0,
            };
            if (ret && ret[0]) {
                const { scrollLeft, scrollTop } = ret[0];
                return Object.assign(Object.assign({}, offset), { scrollLeft,
                    scrollTop });
            }
            return offset;
        });
    });
}
export function getScrollLeft(id) {
    return __awaiter(this, void 0, void 0, function* () {
        return (yield getElementScrollOffset(id)).scrollLeft;
    });
}
export function getScrollTop(id) {
    return __awaiter(this, void 0, void 0, function* () {
        return (yield getElementScrollOffset(id)).scrollTop;
    });
}
export function getElementBoundingClientRect(id) {
    return __awaiter(this, void 0, void 0, function* () {
        let getRect = getBoundingClientRect;
        if (isStrictWechatMiniProgram) {
            getRect = (selector) => {
                return new Promise((resolve) => {
                    const ele = document.querySelector(selector);
                    if (!ele || !ele._internal) {
                        if (process.env.NODE_ENV === 'development') {
                            console.warn('element not found', selector);
                        }
                        resolve([]);
                    }
                    ele._internal
                        .createSelectorQuery()
                        .select(selector)
                        .boundingClientRect()
                        .exec((res) => {
                        resolve(res);
                    });
                });
            };
        }
        const rs = yield getRect(`#${id}`).then((ret) => {
            const rect = {
                left: 0,
                bottom: 0,
                top: 0,
                right: 0,
                width: 0,
                height: 0,
                x: 0,
                y: 0,
            };
            if (ret && ret[0]) {
                const { left, bottom, top, right, width, height, x, y } = ret[0];
                return Object.assign(Object.assign({}, rect), { left,
                    bottom,
                    top,
                    right,
                    width,
                    height,
                    x,
                    y });
            }
            return rect;
        });
        return rs;
    });
}
export function getWidth(id) {
    return __awaiter(this, void 0, void 0, function* () {
        return (yield getElementBoundingClientRect(id)).width;
    });
}
export function getHeight(id) {
    return __awaiter(this, void 0, void 0, function* () {
        return (yield getElementBoundingClientRect(id)).height;
    });
}
export function getLeft(id) {
    return __awaiter(this, void 0, void 0, function* () {
        return (yield getElementBoundingClientRect(id)).left;
    });
}
export function getTop(id) {
    return __awaiter(this, void 0, void 0, function* () {
        return (yield getElementBoundingClientRect(id)).top;
    });
}
export function getBottom(id) {
    return __awaiter(this, void 0, void 0, function* () {
        return (yield getElementBoundingClientRect(id)).bottom;
    });
}
export function getRight(id) {
    return __awaiter(this, void 0, void 0, function* () {
        return (yield getElementBoundingClientRect(id)).right;
    });
}
export function scrollToId(id) {
    pageScrollTo({ selector: `#${id}` }).then(noop);
}
