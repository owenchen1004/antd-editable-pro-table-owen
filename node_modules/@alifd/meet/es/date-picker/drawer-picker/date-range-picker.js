import { createElement } from 'rax';
import EmbedDatePicker from '../embed-picker/date-picker';
import EmbedMinutePicker from '../embed-picker/minute-picker';
import BaseRangePicker from './base-range-picker';
import { withLocale } from '../../locale';
import { withTime } from '../embed-picker/utils';
class DateRangePicker extends BaseRangePicker {
    get rangeType() {
        return 'date';
    }
    get timeFormat() {
        const { showTime } = this.props;
        return typeof showTime === 'object' && showTime.format ? showTime.format : 'HH:mm';
    }
    get format() {
        const { showTime } = this.props;
        const format = this.props.format || 'YYYY-MM-DD';
        return showTime && !withTime(format) ? `${format} ${this.timeFormat}` : format;
    }
    renderFirstChild(value, validRange, onChange) {
        return this.renderBase(value, validRange, onChange);
    }
    renderSecondChild(value, validRange, onChange) {
        return this.renderBase(value, validRange, onChange);
    }
    renderBase(value, validRange, onChange) {
        const { showTime } = this.props;
        return showTime ? (createElement(EmbedMinutePicker, { value: value, validRange: validRange, onChange: onChange })) : (createElement(EmbedDatePicker, { value: value, validRange: validRange, onChange: onChange }));
    }
}
export default withLocale(DateRangePicker, {
    name: 'DateRangePicker',
    defaultLocale: {
        ok: '',
        cancel: '',
        prev: '上一步',
        next: '下一步',
        selectStartTime: '选择开始日期',
        selectEndTime: '选择结束日期',
    },
});
