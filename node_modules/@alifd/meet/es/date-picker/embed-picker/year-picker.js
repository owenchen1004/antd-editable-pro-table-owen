import BasePicker from './base-picker';
import { rangeOptions, resetMonth, resetTime } from './utils';
import { get } from '../../utils';
export default class YearPicker extends BasePicker {
    getStep() {
        return 'year';
    }
    getDisableType() {
        return 'year';
    }
    getRangeCheck() {
        return {
            date: {
                hasYear: true,
                hasMonth: false,
                hasDay: false,
            },
        };
    }
    getDataSource(locale) {
        const { validRange } = this.props;
        let start = 1970;
        let end = 1970 + 300;
        const yearLocale = get(locale, 'locale.DatePicker.year', 'å¹´');
        if (validRange) {
            start = validRange[0].getFullYear();
            end = validRange[1].getFullYear();
        }
        return [
            this.filterDataSource(rangeOptions(start, end, yearLocale), (d, it) => {
                resetMonth(d);
                resetTime(d);
                d.setFullYear(it.value);
            }, 'year'),
        ];
    }
    toDate(values) {
        const d = new Date();
        d.setFullYear(values[0]);
        resetMonth(d);
        resetTime(d);
        return d;
    }
    toValues(d) {
        return [d.getFullYear()];
    }
}
