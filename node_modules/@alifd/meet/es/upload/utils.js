import { isMiniappPlatform, isStrictMiniApp } from '../utils';
export const UPLOAD_THROTTLE = 800;
export function createFileItem(url, file) {
    const id = Math.ceil(Math.random() * 1e7);
    const isImage = isMiniappPlatform || url.startsWith('data:image/');
    return {
        uid: `file_${id}`,
        name: 'file',
        state: 'selected',
        response: {},
        url: '',
        percent: 0,
        isImage,
        file: isStrictMiniApp ? url : file || url,
        dataURL: url,
    };
}
export function chooseImageForWechat(options) {
    return new Promise((resolve, reject) => {
        const { count = 1, mediaType = ['video', 'image'], sourceType = ['camera', 'album'], maxDuration = 30, sizeType, } = options;
        wx.chooseMedia({
            sourceType,
            count,
            maxDuration,
            mediaType,
            sizeType,
            success: (res) => {
                let data = [];
                let previewImgs = [];
                if (res.tempFilePaths) {
                    data = res.dataPaths;
                }
                else if (Array.isArray(res.tempFiles)) {
                    data = res.tempFiles.map((item) => {
                        return item.tempFilePath || '';
                    });
                    previewImgs = res.tempFiles.map((item) => {
                        return item.thumbTempFilePath || '';
                    });
                }
                resolve(Object.assign({}, {
                    data,
                    previewImgs,
                    tempFilePaths: data,
                }, res));
            },
            fail: (e) => {
                reject(e);
            },
        });
    });
}
