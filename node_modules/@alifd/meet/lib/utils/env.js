"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isProduction = exports.screenPixelRatio = exports.screenRate = exports.isAndroid = exports.isIOS = exports.osVersion = exports.osName = exports.dpr = exports.windowHeight = exports.windowWidth = exports.screenHeight = exports.screenWidth = exports.systemInfo = exports.isMiniappPlatform = exports.isStrictByteDanceMicroApp = exports.isStrictWechatMiniProgram = exports.isStrictMiniApp = void 0;

var env_1 = require("@uni/env");

var fp_1 = require("./fp");

function formatVersion(v) {
  return String(v).replace(/_/g, '.');
}

function getOSInfo(ua) {
  var OSList = {
    ios: /(like Mac OS X)/i,
    android: /Android/i,
    wp: /Windows Phone/i,
    bb: /(BlackBerry)|(RIM)/i,
    win: /(Windows 95)|(Win95)|(Windows_95)|(Windows ME)|(Windows 98)|(Win98)|(Windows NT 5.0)|(Windows 2000)|(Windows NT)|(WinNT)|(Windows XP)/i,
    linux: /(Linux)|(X11)/i,
    macos: /(Mac_PowerPC)|(Macintosh)/i,
    robot: /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(ia_archiver)/i
  };
  var os = {
    name: 'unknown',
    version: '0.0.0'
  };

  if (/Windows\sPhone\s(?:OS\s)?([\d.]+)/.test(ua)) {
    os.version = RegExp.$1;
  } else if (/Safari/.test(ua) && /Android[\s/]([\d.]+)/.test(ua)) {
    os.version = RegExp.$1;
  } else if (/(iPhone|iPad|iPod)/.test(ua) && /OS ([\d_.]+) like Mac OS X/.test(ua)) {
    os.version = RegExp.$1;
  }

  os.version = formatVersion(os.version);

  for (var _osName in OSList) {
    var Reg = OSList[_osName];

    if (Reg.test(ua)) {
      os.name = _osName;
      break;
    }
  }

  return os;
}

exports.isStrictMiniApp = env_1.isMiniApp && !env_1.isWeb;
exports.isStrictWechatMiniProgram = env_1.isWeChatMiniProgram && !env_1.isWeb;
exports.isStrictByteDanceMicroApp = env_1.isByteDanceMicroApp && !env_1.isWeb;
exports.isMiniappPlatform = !env_1.isWeb && (env_1.isMiniApp || env_1.isWeChatMiniProgram || env_1.isByteDanceMicroApp);
var systemInfo;
exports.systemInfo = systemInfo;

if (exports.isStrictMiniApp) {
  exports.systemInfo = systemInfo = my.getSystemInfoSync();
} else if (exports.isStrictWechatMiniProgram) {
  exports.systemInfo = systemInfo = wx.getSystemInfoSync();
} else if (exports.isStrictByteDanceMicroApp) {
  exports.systemInfo = systemInfo = tt.getSystemInfoSync();
}

var name = 'unknown';
var version = '0.0.0';

if (exports.isStrictWechatMiniProgram) {
  var system = systemInfo.system;
  name = system.split(' ')[0].toLowerCase();
  version = system.split(' ')[1];
} else if (exports.isStrictMiniApp) {
  var system = systemInfo.system,
      platform = systemInfo.platform;
  name = platform.toLowerCase();
  version = system;
} else if (exports.isStrictByteDanceMicroApp) {
  var system = systemInfo.system,
      platform = systemInfo.platform;
  name = platform.toLowerCase();
  version = system;
} else {
  var UA = fp_1.isUndef(navigator) ? '' : navigator.userAgent;
  var info = getOSInfo(UA);
  name = info.name;
  version = info.version;
}

exports.screenWidth = systemInfo && !fp_1.isUndef(systemInfo.screenWidth) ? systemInfo.screenWidth : window.screen.width;
exports.screenHeight = systemInfo && !fp_1.isUndef(systemInfo.screenHeight) ? systemInfo.screenHeight : window.screen.height;
exports.windowWidth = systemInfo && !fp_1.isUndef(systemInfo.windowWidth) ? systemInfo.windowWidth : document.documentElement.clientWidth;
exports.windowHeight = systemInfo && !fp_1.isUndef(systemInfo.windowHeight) ? systemInfo.windowHeight : document.documentElement.clientHeight;
exports.dpr = systemInfo && (systemInfo.devicePixelRatio || systemInfo.pixelRatio) ? systemInfo.devicePixelRatio || systemInfo.pixelRatio : window.devicePixelRatio;
exports.osName = name;
exports.osVersion = version;
exports.isIOS = name === 'ios';
exports.isAndroid = name === 'android';
exports.screenRate = exports.screenWidth / 750;
exports.screenPixelRatio = exports.isMiniappPlatform ? 1 : exports.windowWidth / 750;

exports.isProduction = function () {
  var result = false;

  try {
    if (process.env.NODE_ENV === 'production') {
      result = true;
    }
  } catch (err) {}

  return result;
};