import { FunctionComponent, RaxNode } from 'rax';
import { LocaledComponentProps } from '../locale';
import { BaseComponentAttributes } from '../utils/types';
import { ContentType, DateCellClassType, DateCellContext, LocaleType, ModeType } from './types';
export interface CalendarContentProps extends BaseComponentAttributes, LocaledComponentProps<LocaleType> {
    selectedDate: Date | Date[];
    visibleDate: Date;
    maxDate?: Date;
    minDate?: Date;
    type?: ContentType;
    mode?: ModeType;
    locale?: LocaleType;
    firstDay?: number;
    enableTimePicker?: boolean;
    onDateChange: (value: Date | Date[], clickedItem: Date) => void;
    disabledDate?: (date: Date, view: string) => boolean;
    renderCellBottom?: (value: object) => RaxNode;
    renderCellRight?: (value: object) => RaxNode;
    dateCellRender?: (value: object, props: {
        dateCellClassName: DateCellClassType;
        onClick: () => void;
        defaultDateCell: RaxNode;
        context: DateCellContext;
    }) => RaxNode;
    monthCellRender?: (value: object) => RaxNode;
}
declare const CalendarContent: FunctionComponent<CalendarContentProps>;
export default CalendarContent;
