"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var dayjs_1 = tslib_1.__importDefault(require("dayjs"));

var rax_text_1 = tslib_1.__importDefault(require("rax-text"));

var view_1 = tslib_1.__importDefault(require("../view"));

var icon_1 = tslib_1.__importDefault(require("../icon"));

var time_picker_1 = require("../time-picker");

var utils_1 = require("../utils");

var date_1 = require("../utils/date");

function CalendarTimePicker(props) {
  var _a, _b;

  var _c = props.prefix,
      prefix = _c === void 0 ? 'mt-' : _c,
      value = props.value,
      _d = props.format,
      format = _d === void 0 ? 'HH:mm:ss' : _d,
      label = props.label,
      onPickerToggle = props.onPickerToggle,
      onChange = props.onChange;

  var _e = rax_1.useState(false),
      showPicker = _e[0],
      setShowPicker = _e[1];

  var _f = rax_1.useState(date_1.isValidDate(value) ? value : new Date()),
      curTime = _f[0],
      setTime = _f[1];

  var clsPrefix = prefix + "calendar-tp";
  rax_1.useEffect(function () {
    if (date_1.isValidDate(value)) {
      setTime(value);
    }
  }, [value]);
  return rax_1.createElement(rax_1.Fragment, null, showPicker ? rax_1.createElement(time_picker_1.EmbedPicker, {
    className: clsPrefix + "-picker",
    format: format,
    value: curTime,
    onChange: function handlePickerChange(date) {
      var d = dayjs_1.default(date);
      var h = d.hour();
      var m = d.minute();
      var s = d.second();
      var newDate = dayjs_1.default(curTime).hour(h).minute(m).second(s);

      if (utils_1.isFunction(onChange)) {
        onChange(newDate.toDate());
      }
    }
  }) : null, rax_1.createElement(view_1.default, {
    className: "" + clsPrefix
  }, rax_1.createElement(view_1.default, {
    className: clsPrefix + "-row"
  }, rax_1.createElement(rax_text_1.default, {
    className: clsPrefix + "-label"
  }, label), rax_1.createElement(view_1.default, {
    className: classnames_1.default(clsPrefix + "-wrapper", (_a = {}, _a[clsPrefix + "-wrapper--active"] = showPicker, _a)),
    onClick: function handleTimeClick() {
      var nextState = !showPicker;

      if (utils_1.isFunction(onPickerToggle)) {
        onPickerToggle(nextState);
      }

      setShowPicker(nextState);
    }
  }, rax_1.createElement(rax_text_1.default, {
    className: clsPrefix + "-time"
  }, dayjs_1.default(curTime).format(format)), rax_1.createElement(icon_1.default, {
    className: classnames_1.default(clsPrefix + "-arrow", (_b = {}, _b[clsPrefix + "-arrow--active"] = showPicker, _b)),
    name: "arrow-down"
  })))));
}

exports.default = CalendarTimePicker;