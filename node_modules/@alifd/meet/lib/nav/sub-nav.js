"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_children_1 = tslib_1.__importDefault(require("rax-children"));

var rax_clone_element_1 = tslib_1.__importDefault(require("rax-clone-element"));

var rax_is_valid_element_1 = tslib_1.__importDefault(require("rax-is-valid-element"));

var view_1 = tslib_1.__importDefault(require("../view"));

var icon_1 = tslib_1.__importDefault(require("../icon"));

var item_1 = tslib_1.__importDefault(require("./item"));

var context_1 = tslib_1.__importDefault(require("./context"));

var utils_1 = require("../utils");

var SubNav = function (props, ref) {
  var _a;

  var className = props.className,
      icon = props.icon,
      _b = props.label,
      label = _b === void 0 ? '' : _b,
      _c = props.level,
      level = _c === void 0 ? 1 : _c,
      _d = props.expanded,
      expanded = _d === void 0 ? false : _d,
      _e = props.itemKey,
      itemKey = _e === void 0 ? '' : _e,
      dataSource = props.dataSource,
      children = props.children,
      others = tslib_1.__rest(props, ["className", "icon", "label", "level", "expanded", "itemKey", "dataSource", "children"]);

  var ctx = rax_1.useContext(context_1.default);
  var onItemSelect = ctx.onItemSelect,
      clsPrefix = ctx.clsPrefix,
      model = ctx.model,
      type = ctx.type,
      size = ctx.size;

  var _f = rax_1.useState(expanded),
      isExpanded = _f[0],
      setExpanded = _f[1];

  var keyCounter = 0;
  return rax_1.createElement(rax_1.Fragment, null, rax_1.createElement(item_1.default, tslib_1.__assign({
    ref: ref
  }, others, {
    icon: icon,
    label: label,
    level: level,
    onClick: function handleSelect() {
      setExpanded(!isExpanded);
    },
    className: classnames_1.default(className, (_a = {}, _a[clsPrefix + "--" + type + "-" + model + "-active"] = isExpanded, _a)),
    disableSelect: true,
    extra: rax_1.createElement(icon_1.default, {
      name: isExpanded ? 'arrow-up' : 'arrow-down',
      size: "s"
    })
  })), isExpanded ? rax_1.createElement(view_1.default, null, dataSource ? function renderChildrenByData() {
    if (!dataSource) {
      return null;
    }

    return dataSource.map(function (item) {
      var newLevel = level + 1;
      var _itemKey = item.key;
      var _icon = item.icon,
          iconUri = item.iconUri,
          _children = item.children;
      return utils_1.isValidArray(_children) ? rax_1.createElement(SubNav, {
        key: _itemKey,
        itemKey: _itemKey,
        icon: icon,
        iconUri: iconUri,
        label: item.label,
        level: newLevel,
        dataSource: _children
      }) : rax_1.createElement(item_1.default, {
        key: _itemKey,
        itemKey: _itemKey,
        level: newLevel,
        icon: _icon,
        iconUri: iconUri,
        label: item.label
      });
    });
  }() : rax_children_1.default.map(children, function renderChild(child) {
    keyCounter++;

    var _key = child.key || itemKey + "-" + keyCounter;

    if (!rax_is_valid_element_1.default(child)) {
      return null;
    }

    return rax_clone_element_1.default(child, {
      key: _key,
      itemKey: _key,
      size: size,
      level: level + 1,
      onItemSelect: onItemSelect
    });
  })) : null);
};

SubNav.displayName = 'Nav.SubNav';
exports.default = rax_1.forwardRef(SubNav);