"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_1 = require("rax");

var rax_portal_1 = tslib_1.__importDefault(require("rax-portal"));

var view_1 = tslib_1.__importDefault(require("../view"));

var mask_1 = tslib_1.__importDefault(require("./mask"));

var utils_1 = require("../utils");

var Modal = function (props, ref) {
  var _a, _b;

  var _c = props.prefix,
      prefix = _c === void 0 ? 'mt-' : _c,
      _d = props.view,
      view = _d === void 0 ? false : _d,
      _e = props.visible,
      visible = _e === void 0 ? false : _e,
      container = props.container,
      _f = props.disablePortal,
      disablePortal = _f === void 0 ? false : _f,
      _g = props.placement,
      placement = _g === void 0 ? 'center' : _g,
      _h = props.className,
      className = _h === void 0 ? '' : _h,
      _j = props.maskClassName,
      maskClassName = _j === void 0 ? '' : _j,
      _k = props.containerClassName,
      containerClassName = _k === void 0 ? '' : _k,
      _l = props.containerStyle,
      containerStyle = _l === void 0 ? {} : _l,
      _m = props.showMask,
      showMask = _m === void 0 ? true : _m,
      _o = props.maskClosable,
      maskClosable = _o === void 0 ? true : _o,
      _p = props.usePortal,
      usePortal = _p === void 0 ? true : _p,
      _q = props.disableScroll,
      disableScroll = _q === void 0 ? false : _q,
      _r = props.onMaskClick,
      onMaskClick = _r === void 0 ? function () {} : _r,
      _s = props.onClose,
      onClose = _s === void 0 ? function () {} : _s,
      _t = props.onVisibleChange,
      onVisibleChange = _t === void 0 ? function () {} : _t,
      children = props.children,
      zIndex = props.zIndex,
      _u = props.style,
      styleProp = _u === void 0 ? {} : _u,
      others = tslib_1.__rest(props, ["prefix", "view", "visible", "container", "disablePortal", "placement", "className", "maskClassName", "containerClassName", "containerStyle", "showMask", "maskClosable", "usePortal", "disableScroll", "onMaskClick", "onClose", "onVisibleChange", "children", "zIndex", "style"]);

  var _v = rax_1.useState(props.visible),
      show = _v[0],
      setShow = _v[1];

  rax_1.useEffect(function () {
    if (show && !visible) {
      var t1_1 = setTimeout(function () {
        return setShow(false);
      }, 300);
      return function () {
        return clearTimeout(t1_1);
      };
    } else {
      setShow(visible);
      onVisibleChange(visible);
    }
  }, [visible]);
  var clsPrefix = prefix + "modal";
  var modalContainer = rax_1.createElement(view_1.default, tslib_1.__assign({}, others, {
    ref: ref,
    className: classnames_1.default(containerClassName, clsPrefix + "-container", clsPrefix + "-container--" + placement, (_a = {}, _a[clsPrefix + "-container--" + placement + "-active"] = visible, _a[clsPrefix + "-container--" + placement + "-inactive"] = !visible, _a)),
    style: tslib_1.__assign(tslib_1.__assign({}, styleProp), containerStyle)
  }), children);
  var element = show ? rax_1.createElement(view_1.default, {
    "disable-scroll": disableScroll,
    catchTouchMove: disableScroll,
    className: classnames_1.default(className, "" + clsPrefix, clsPrefix + "--" + placement, (_b = {}, _b[clsPrefix + "--no-portal"] = !usePortal, _b)),
    ref: ref,
    style: utils_1.isNumber(zIndex) ? {
      zIndex: zIndex
    } : null
  }, showMask ? rax_1.createElement(mask_1.default, {
    ref: ref,
    className: maskClassName,
    visible: visible,
    onClick: function handleMaskClick(e) {
      if (onMaskClick) {
        onMaskClick(e);
      }

      if (maskClosable && onClose) {
        onClose('mask', e);
        onVisibleChange(false, 'mask');
      }
    }
  }) : null, modalContainer) : null;

  if (disablePortal || view) {
    return element;
  }

  if (!usePortal) {
    return rax_1.createElement(view_1.default, {
      ref: ref,
      className: clsPrefix + "-theme-wrapper"
    }, element);
  }

  return rax_1.createElement(rax_portal_1.default, {
    container: container
  }, element);
};

Modal.displayName = 'Modal';
exports.default = rax_1.forwardRef(Modal);