"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_1 = require("rax");

var env_1 = require("@uni/env");

var view_1 = tslib_1.__importDefault(require("../view"));

var Mask = function (props, ref) {
  var _a;

  var _b = props.prefix,
      prefix = _b === void 0 ? 'mt-' : _b,
      className = props.className,
      visible = props.visible,
      view = props.view,
      others = tslib_1.__rest(props, ["prefix", "className", "visible", "view"]);

  var _c = rax_1.useState(visible),
      show = _c[0],
      setShow = _c[1];

  var clsPrefix = prefix + "modal";
  var clsDisableScroll = clsPrefix + "-mask--disable-scroll";
  rax_1.useEffect(function () {
    if (!visible && show) {
      var t1_1 = setTimeout(function () {
        setShow(false);
      }, 100);
      return function () {
        clearTimeout(t1_1);
      };
    } else {
      setShow(visible);
    }

    var tryRemoveDisableScrollCls = function () {
      var activeMasks = document.getElementsByClassName(clsPrefix + "-mask--active");

      if (activeMasks.length === 0) {
        document.body.classList.remove(clsDisableScroll);
      }
    };

    if (env_1.isWeb) {
      if (visible) {
        document.body.classList.add(clsDisableScroll);
      } else {
        tryRemoveDisableScrollCls();
      }

      return function () {
        tryRemoveDisableScrollCls();
      };
    }
  }, [visible]);

  if (!show) {
    return null;
  }

  return rax_1.createElement(view_1.default, tslib_1.__assign({
    ref: ref
  }, others, {
    "disable-scroll": true,
    catchTouchMove: true,
    className: classnames_1.default(className, clsPrefix + "-mask", (_a = {}, _a[clsPrefix + "-mask--active"] = visible, _a[clsPrefix + "-mask--inactive"] = !visible, _a))
  }));
};

Mask.displayName = 'Modal.Mask';
exports.default = rax_1.forwardRef(Mask);