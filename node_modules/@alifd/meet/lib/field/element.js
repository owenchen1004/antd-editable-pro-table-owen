"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var form_1 = tslib_1.__importStar(require("../form"));

var FieldElement = function (_super) {
  tslib_1.__extends(FieldElement, _super);

  function FieldElement(props) {
    var _this = _super.call(this, props) || this;

    _this.field = undefined;
    _this.renderPreview = _this.renderPreview.bind(_this);
    return _this;
  }

  FieldElement.prototype.getValueName = function () {
    return 'value';
  };

  FieldElement.prototype.getValue = function () {
    var _a;

    var name = this.getValueName();

    if (name in this.props) {
      return this.props[name];
    }

    return (_a = this.field) === null || _a === void 0 ? void 0 : _a.getValue(this.props.name);
  };

  FieldElement.prototype.setValue = function (value) {
    var _a;

    return (_a = this.field) === null || _a === void 0 ? void 0 : _a.setValue(this.props.name, value);
  };

  FieldElement.prototype.renderPreview = function (value) {
    return value;
  };

  FieldElement.prototype.renderControl = function () {
    return '请重载 renderControl';
  };

  FieldElement.prototype.getProps = function () {
    return this.props;
  };

  FieldElement.prototype.componentWillUnmount = function () {
    this.field = undefined;
  };

  FieldElement.prototype.render = function () {
    var _this = this;

    return rax_1.createElement(form_1.Context.Consumer, null, function (ctx) {
      if (ctx.field && _this.field !== ctx.field) {
        _this.field = ctx.field;

        _this.forceUpdate();
      }

      var item = rax_1.createElement(form_1.Item, tslib_1.__assign({
        valuePropName: _this.getValueName(),
        renderPreview: _this.renderPreview
      }, _this.getProps()), _this.renderControl());

      if (ctx.form) {
        return item;
      } else {
        return rax_1.createElement(form_1.default, {
          saveField: function saveField(field) {
            _this.field = field;

            _this.forceUpdate();
          }
        }, item);
      }
    });
  };

  FieldElement.displayName = 'Field';
  return FieldElement;
}(rax_1.Component);

exports.default = FieldElement;