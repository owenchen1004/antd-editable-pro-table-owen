"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_1 = require("rax");

var rax_text_1 = tslib_1.__importDefault(require("rax-text"));

var view_1 = tslib_1.__importDefault(require("../view"));

var utils_1 = require("./utils");

var utils_2 = require("../utils");

var Thumb = function (props, ref) {
  var _a;

  var prefix = props.prefix,
      _b = props.size,
      size = _b === void 0 ? 'medium' : _b,
      _c = props.offset,
      offset = _c === void 0 ? 0 : _c,
      isActive = props.isActive,
      tooltipVisible = props.tooltipVisible,
      _d = props.disabled,
      disabled = _d === void 0 ? false : _d,
      value = props.value,
      id = props.id;
  var display;

  if (!utils_2.isNil(tooltipVisible)) {
    display = tooltipVisible ? 'flex' : 'none';
  } else {
    display = isActive ? 'flex' : 'none';
  }

  var statePrefix = disabled ? '--disabled' : '';
  var thumbCls = classnames_1.default(prefix + "range--thumb", prefix + "range--thumb--" + size, (_a = {}, _a[prefix + "range--thumb--active"] = isActive, _a[prefix + "range" + statePrefix + "--thumb"] = isActive, _a[prefix + "range" + statePrefix + "--thumb"] = !isActive, _a));
  return rax_1.createElement(view_1.default, {
    className: thumbCls,
    style: {
      left: offset + utils_1.unit
    },
    id: id,
    ref: ref
  }, display === 'flex' && rax_1.createElement(rax_1.Fragment, null, rax_1.createElement(view_1.default, {
    className: classnames_1.default([prefix + "range--tooltip", prefix + "range--tooltip-" + size + "-left"])
  }, rax_1.createElement(rax_text_1.default, null, "" + value), rax_1.createElement(view_1.default, {
    className: prefix + "range--tooltip--arrow"
  }))));
};

exports.default = rax_1.forwardRef(Thumb);