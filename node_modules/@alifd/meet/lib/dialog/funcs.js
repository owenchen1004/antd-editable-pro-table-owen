"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.help = exports.warning = exports.notice = exports.error = exports.success = exports.confirm = exports.alert = exports.hide = exports.show = void 0;

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var render_1 = require("../utils/render");

var dialog_1 = tslib_1.__importDefault(require("./dialog"));

var DialogWrapper = function (props) {
  var onClose = props.onClose;

  var _a = rax_1.useState(true),
      visible = _a[0],
      setVisible = _a[1];

  return rax_1.createElement(dialog_1.default, tslib_1.__assign({}, props, {
    onClose: function handleClose(reason, e) {
      setVisible(false);
      setTimeout(function () {
        if (onClose) {
          onClose(reason, e);
        }
      }, 300);
    },
    visible: visible,
    disablePortal: true
  }));
};

var hideStack = [];

var methodFactory = function (type) {
  return function (props) {
    return exports.show(tslib_1.__assign(tslib_1.__assign({}, props), {
      type: type
    }));
  };
};

exports.show = function (props) {
  var emptyFn = function () {};

  var _a = props.onClose,
      _onClose = _a === void 0 ? emptyFn : _a;

  var hideCurrent = render_1.renderToRoot(rax_1.createElement(DialogWrapper, tslib_1.__assign({}, props, {
    onClose: function onClose(reason, e) {
      _onClose(reason, e);

      _onClose = emptyFn;
      hideCurrent();
    }
  })), function () {
    return _onClose('api', null);
  });
  hideStack.push(hideCurrent);
  return {
    hide: hideCurrent
  };
};

exports.hide = function () {
  while (hideStack.length) {
    var h = hideStack.pop();

    if (h) {
      h.call(null);
    }
  }
};

exports.alert = methodFactory('alert');
exports.confirm = methodFactory('confirm');
exports.success = methodFactory('success');
exports.error = methodFactory('error');
exports.notice = methodFactory('notice');
exports.warning = methodFactory('warning');
exports.help = methodFactory('help');