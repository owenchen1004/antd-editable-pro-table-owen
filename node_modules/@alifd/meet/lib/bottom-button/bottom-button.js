"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var view_1 = tslib_1.__importDefault(require("../view"));

var button_1 = tslib_1.__importDefault(require("../button"));

var utils_1 = require("../utils");

var BottomButton = function (props) {
  var _a, _b;

  var _c = props.prefix,
      prefix = _c === void 0 ? 'mt-' : _c,
      _d = props.actions,
      actions = _d === void 0 ? ['cancel', 'ok'] : _d,
      _e = props.size,
      size = _e === void 0 ? 'large' : _e,
      okText = props.okText,
      cancelText = props.cancelText,
      className = props.className,
      okProps = props.okProps,
      cancelProps = props.cancelProps,
      _f = props.enableSafeArea,
      enableSafeArea = _f === void 0 ? false : _f,
      _g = props.showDividingLine,
      showDividingLine = _g === void 0 ? true : _g,
      children = props.children,
      onOk = props.onOk,
      onCancel = props.onCancel,
      others = tslib_1.__rest(props, ["prefix", "actions", "size", "okText", "cancelText", "className", "okProps", "cancelProps", "enableSafeArea", "showDividingLine", "children", "onOk", "onCancel"]);

  var clsPrefix = prefix + "bottom-btn";
  var clses = {
    bottomBtn: classnames_1.default(clsPrefix, className, (_a = {}, _a[clsPrefix + "--dividing"] = showDividingLine, _a[clsPrefix + "--safe"] = enableSafeArea, _a)),
    extra: clsPrefix + "-extra",
    container: classnames_1.default(clsPrefix + "-container", (_b = {}, _b[clsPrefix + "-container--col-2"] = utils_1.isValidArray(actions) && actions.length === 2, _b))
  };

  var _h = okProps || {},
      okBtnText = _h.text,
      otherOkBtnProps = tslib_1.__rest(_h, ["text"]);

  var _j = cancelProps || {},
      cancelBtnText = _j.text,
      otherCancelBtnProps = tslib_1.__rest(_j, ["text"]);

  return rax_1.createElement(view_1.default, tslib_1.__assign({}, others, {
    className: clses.bottomBtn
  }), children ? rax_1.createElement(view_1.default, {
    className: clses.extra
  }, children) : null, rax_1.createElement(view_1.default, {
    className: clses.container
  }, actions.map(function (act) {
    var isCancel = act === 'cancel';
    var text = isCancel ? cancelText || cancelBtnText || '取消' : okText || okBtnText || '确定';

    var btnProps = tslib_1.__assign({
      onClick: isCancel ? onCancel : onOk,
      size: size
    }, isCancel ? otherCancelBtnProps : otherOkBtnProps);

    return rax_1.createElement(button_1.default, tslib_1.__assign({
      key: "bottom-btn-" + act,
      type: isCancel ? 'normal' : 'primary',
      model: isCancel ? 'outline' : 'solid'
    }, btnProps), text);
  })));
};

BottomButton.displayName = 'BottomButton';
exports.default = BottomButton;