"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var rax_portal_1 = tslib_1.__importDefault(require("rax-portal"));

var locale_1 = require("../locale");

var hooks_1 = require("../utils/hooks");

var render_1 = require("../utils/render");

var ConfigProvider = function (_super) {
  tslib_1.__extends(ConfigProvider, _super);

  function ConfigProvider(props) {
    var _this = _super.call(this, props) || this;

    _this.state = {
      portals: []
    };
    return _this;
  }

  ConfigProvider.prototype.componentDidMount = function () {
    if (!this.props.disablePortal) {
      render_1.onProviderMount(this);
    }
  };

  ConfigProvider.prototype.componentDidUpdate = function (prevProps) {
    if (this.props.disablePortal !== prevProps.disablePortal) {
      if (this.props.disablePortal) {
        render_1.onProviderUnMount();
      } else {
        render_1.onProviderMount(this);
      }
    }
  };

  ConfigProvider.prototype.componentWillUnmount = function () {
    render_1.onProviderUnMount();
  };

  ConfigProvider.prototype.addPortal = function (item) {
    var _this = this;

    var id = hooks_1.guid('portal-');

    var arr = tslib_1.__spreadArrays(this.state.portals);

    arr.push(tslib_1.__assign(tslib_1.__assign({}, item), {
      id: id
    }));
    this.setState({
      portals: arr
    });
    return function () {
      var i = _this.state.portals.find(function (it) {
        return it.id === id;
      });

      if (i) {
        var a = tslib_1.__spreadArrays(_this.state.portals);

        a.splice(a.indexOf(i), 1);

        _this.setState({
          portals: a
        });

        if (i.onHide) {
          i.onHide();
        }
      }
    };
  };

  ConfigProvider.prototype.render = function () {
    var portals = this.state.portals;
    var _a = this.props,
        locale = _a.locale,
        children = _a.children;
    return rax_1.createElement(locale_1.LocaleProvider, {
      locale: locale
    }, rax_1.createElement(rax_1.Fragment, null, portals.length > 0 && rax_1.createElement(rax_portal_1.default, null, portals.map(function (it) {
      return rax_1.createElement(rax_1.Fragment, {
        key: it.id
      }, it.element);
    })), children));
  };

  ConfigProvider.Consumer = function (_a) {
    var children = _a.children;
    return rax_1.createElement(locale_1.Context.Consumer, null, function (_a) {
      var locale = _a.locale;
      return children ? children({
        locale: locale
      }) : null;
    });
  };

  return ConfigProvider;
}(rax_1.Component);

exports.default = ConfigProvider;