"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_is_valid_element_1 = tslib_1.__importDefault(require("rax-is-valid-element"));

var rax_text_1 = tslib_1.__importDefault(require("rax-text"));

var view_1 = tslib_1.__importDefault(require("../view"));

var icon_1 = tslib_1.__importDefault(require("../icon"));

var tab_1 = require("./tab");

var hooks_1 = require("../utils/hooks");

var utils_1 = require("../utils");

var TabItem = function (props, ref) {
  var _a, _b, _c, _d;

  var _e = props.prefix,
      prefix = _e === void 0 ? 'mt-' : _e,
      className = props.className,
      size = props.size,
      itemKey = props.itemKey,
      _f = props.title,
      title = _f === void 0 ? '' : _f,
      _g = props.icon,
      icon = _g === void 0 ? '' : _g,
      children = props.children,
      _h = props.onClick,
      onClick = _h === void 0 ? function () {} : _h,
      _j = props.renderContent,
      renderContent = _j === void 0 ? null : _j,
      others = tslib_1.__rest(props, ["prefix", "className", "size", "itemKey", "title", "icon", "children", "onClick", "renderContent"]);

  var _k = rax_1.useContext(tab_1.TabContext),
      activeKey = _k.activeKey,
      change = _k.change,
      fullWidth = _k.fullWidth,
      shape = _k.shape,
      activeLineType = _k.activeLineType;

  var active = "" + activeKey === "" + itemKey;
  var clsPrefix = prefix + "tab-item";
  var curItemId = hooks_1.useGuid('tab-item-');
  var clses = {
    tab: classnames_1.default(clsPrefix, clsPrefix + "--" + size, clsPrefix + "--" + shape, (_a = {}, _a[clsPrefix + "--active"] = active, _a[clsPrefix + "--active-" + shape] = active, _a[clsPrefix + "--fullwidth"] = fullWidth, _a), className),
    activeLine: classnames_1.default(clsPrefix + "-active-line", clsPrefix + "-active-line--" + activeLineType, clsPrefix + "-active-line--" + activeLineType + "-" + size),
    tabIcon: classnames_1.default(clsPrefix + "-icon", clsPrefix + "-icon--" + size, clsPrefix + "-icon--" + shape, (_b = {}, _b[clsPrefix + "-icon--active"] = active, _b[clsPrefix + "-icon--active-" + shape] = active, _b)),
    tabText: classnames_1.default(clsPrefix + "-text", clsPrefix + "-text--" + size, clsPrefix + "-text--" + shape, (_c = {}, _c[clsPrefix + "-text--active"] = active, _c[clsPrefix + "-text--active-" + size] = active && shape !== 'capsule', _c[clsPrefix + "-text--active-" + shape] = active, _c))
  };
  return rax_1.createElement(view_1.default, tslib_1.__assign({}, others, {
    id: curItemId,
    ref: ref,
    className: clses.tab,
    onClick: function handleClick(e) {
      if (onClick) {
        onClick(tslib_1.__assign(tslib_1.__assign({}, e), {
          itemKey: itemKey
        }));
      }

      change(itemKey);
    }
  }), renderContent ? renderContent({
    title: title,
    icon: icon,
    active: active
  }) : rax_1.createElement(rax_1.Fragment, null, icon ? rax_1.createElement(icon_1.default, {
    className: clses.tabIcon,
    name: icon
  }) : null, function renderTitle() {
    if (rax_is_valid_element_1.default(title)) {
      return rax_1.createElement(view_1.default, null, title);
    } else if (utils_1.isString(title)) {
      return rax_1.createElement(rax_text_1.default, {
        numberOfLines: 1,
        className: clses.tabText
      }, title);
    }

    return null;
  }()), shape !== 'capsule' && rax_1.createElement(view_1.default, {
    className: classnames_1.default(clses.activeLine, (_d = {}, _d[clsPrefix + "-active-line--enter"] = active, _d[clsPrefix + "-active-line--exit"] = !active, _d))
  }));
};

TabItem.displayName = 'Tab.Item';
exports.default = rax_1.forwardRef(TabItem);