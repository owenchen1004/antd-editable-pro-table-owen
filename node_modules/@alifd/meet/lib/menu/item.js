"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var icon_1 = tslib_1.__importDefault(require("../icon"));

var list_1 = tslib_1.__importDefault(require("../list"));

var menu_context_1 = tslib_1.__importDefault(require("./menu-context"));

var utils_1 = require("../utils");

var MenuItem = function (props, ref) {
  var _a;

  var context = rax_1.useContext(menu_context_1.default);

  var className = props.className,
      children = props.children,
      disabled = props.disabled,
      itemKey = props.itemKey,
      title = props.title,
      others = tslib_1.__rest(props, ["className", "children", "disabled", "itemKey", "title"]);

  var prefix = context.prefix,
      selectMode = context.selectMode,
      selectedKeys = context.selectedKeys,
      onClickItem = context.onClickItem,
      onSelect = context.onSelect;
  var selected = !utils_1.isInvalidValue(itemKey) && selectedKeys.includes(itemKey);
  return rax_1.createElement(list_1.default.Item, tslib_1.__assign({}, others, {
    ref: ref,
    className: classnames_1.default(prefix + "menu-item", className, (_a = {}, _a[prefix + "menu-item--disabled"] = disabled, _a)),
    title: children || title,
    disabled: disabled,
    extra: selected ? rax_1.createElement(icon_1.default, {
      name: "select"
    }) : null,
    onClick: function handleClick(e) {
      onClickItem(itemKey, props, e);

      if (selectMode) {
        onSelect(!selected, props);
      }
    }
  }));
};

exports.default = rax_1.forwardRef(MenuItem);