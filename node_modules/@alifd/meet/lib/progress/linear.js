"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_1 = require("rax");

var view_1 = tslib_1.__importDefault(require("../view"));

var utils_1 = require("./utils");

var utils_2 = require("../utils");

var LinearProgress = function (props, ref) {
  var _a = props.prefix,
      prefix = _a === void 0 ? 'mt-' : _a,
      _b = props.percent,
      percent = _b === void 0 ? 0 : _b,
      color = props.color,
      _c = props.size,
      size = _c === void 0 ? 'medium' : _c,
      backgroundColor = props.backgroundColor,
      _d = props.progressive,
      progressive = _d === void 0 ? false : _d,
      _e = props.state,
      state = _e === void 0 ? 'normal' : _e,
      className = props.className,
      others = tslib_1.__rest(props, ["prefix", "percent", "color", "size", "backgroundColor", "progressive", "state", "className"]);

  var trackStyle = {
    height: utils_1.progressSize(size),
    backgroundColor: utils_1.progressBackgroundColor(backgroundColor)
  };
  var barStyle = {
    height: utils_1.progressSize(size),
    backgroundColor: function progressiveColorEnabled() {
      if (progressive) {
        return utils_1.progressiveColor(percent);
      } else {
        return color || utils_1.statusColor(state);
      }
    }(),
    width: percent + "%"
  };

  if (utils_2.isNumber(size) && size > 0) {
    var borderRadiusVal = size / 2 + "rpx";
    trackStyle.borderRadius = borderRadiusVal;
    barStyle.borderRadius = borderRadiusVal;
  }

  var clsPrefix = prefix + "progress";
  return rax_1.createElement(view_1.default, tslib_1.__assign({
    ref: ref
  }, others, {
    className: classnames_1.default(clsPrefix, clsPrefix + "-line--" + size, clsPrefix + "-line-" + size + "-corner", className)
  }), rax_1.createElement(view_1.default, {
    className: classnames_1.default(clsPrefix + "-track", clsPrefix + "-line-" + size + "-corner"),
    style: trackStyle
  }, rax_1.createElement(view_1.default, {
    className: classnames_1.default(clsPrefix + "-line-bar", clsPrefix + "-line-" + size + "-corner"),
    style: barStyle
  })));
};

exports.default = rax_1.forwardRef(LinearProgress);