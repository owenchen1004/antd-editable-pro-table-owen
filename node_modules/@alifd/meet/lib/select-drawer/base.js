"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_1 = require("rax");

var button_1 = tslib_1.__importDefault(require("../button"));

var drawer_1 = tslib_1.__importDefault(require("../drawer"));

var view_1 = tslib_1.__importDefault(require("../view"));

var locale_1 = require("../locale");

var zh_cn_1 = tslib_1.__importDefault(require("../locale/lang/zh-cn"));

exports.default = function (props) {
  var _a = props.prefix,
      prefix = _a === void 0 ? 'mt-' : _a,
      _b = props.visible,
      visible = _b === void 0 ? false : _b,
      drawerClassName = props.drawerClassName,
      drawerTitle = props.drawerTitle,
      onCancel = props.onCancel,
      onClose = props.onClose,
      onOk = props.onOk,
      children = props.children,
      others = tslib_1.__rest(props, ["prefix", "visible", "drawerClassName", "drawerTitle", "onCancel", "onClose", "onOk", "children"]);

  var _c = rax_1.useState(false),
      drawerVisible = _c[0],
      setDrawerVisible = _c[1];

  var clsPrefix = prefix + "selectdrawer";
  rax_1.useEffect(function () {
    if (drawerVisible !== visible) {
      setDrawerVisible(visible);
    }
  }, [visible]);
  var locale = locale_1.useLocale('SelectDrawer', others, zh_cn_1.default.SelectDrawer);
  return rax_1.createElement(drawer_1.default, tslib_1.__assign({}, others, {
    visible: drawerVisible,
    placement: "bottom",
    closeMode: ['mask'],
    onClose: onClose,
    className: classnames_1.default(clsPrefix + "-drawer", drawerClassName)
  }), rax_1.createElement(view_1.default, {
    className: clsPrefix + "-toolbar"
  }, rax_1.createElement(button_1.default, {
    model: "text",
    onClick: onCancel
  }, locale.cancel), rax_1.createElement(view_1.default, {
    className: clsPrefix + "-toolbar-title"
  }, drawerTitle), rax_1.createElement(button_1.default, {
    model: "text",
    type: "primary",
    onClick: onOk
  }, locale.ok)), rax_1.createElement(view_1.default, {
    className: clsPrefix + "-drawer-content"
  }, children));
};