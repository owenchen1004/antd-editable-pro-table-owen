"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var minute_picker_1 = tslib_1.__importDefault(require("../embed-picker/minute-picker"));

var base_range_picker_1 = tslib_1.__importDefault(require("./base-range-picker"));

var locale_1 = require("../../locale");

var MinuteRangePicker = function (_super) {
  tslib_1.__extends(MinuteRangePicker, _super);

  function MinuteRangePicker() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(MinuteRangePicker.prototype, "rangeType", {
    get: function get() {
      return 'minute';
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MinuteRangePicker.prototype, "format", {
    get: function get() {
      return this.props.format || 'YYYY-MM-DD HH:mm';
    },
    enumerable: false,
    configurable: true
  });

  MinuteRangePicker.prototype.renderFirstChild = function (value, validRange, onChange) {
    return rax_1.createElement(minute_picker_1.default, {
      value: value,
      validRange: validRange,
      onChange: onChange
    });
  };

  MinuteRangePicker.prototype.renderSecondChild = function (value, validRange, onChange) {
    return rax_1.createElement(minute_picker_1.default, {
      value: value,
      validRange: validRange,
      onChange: onChange
    });
  };

  return MinuteRangePicker;
}(base_range_picker_1.default);

exports.default = locale_1.withLocale(MinuteRangePicker, {
  name: 'MinuteRangePicker',
  defaultLocale: {
    ok: '',
    cancel: '',
    prev: '上一步',
    next: '下一步',
    selectStartTime: '选择开始时间',
    selectEndTime: '选择结束时间'
  }
});