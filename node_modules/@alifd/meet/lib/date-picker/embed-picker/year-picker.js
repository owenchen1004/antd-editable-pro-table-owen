"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var base_picker_1 = tslib_1.__importDefault(require("./base-picker"));

var utils_1 = require("./utils");

var utils_2 = require("../../utils");

var YearPicker = function (_super) {
  tslib_1.__extends(YearPicker, _super);

  function YearPicker() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  YearPicker.prototype.getStep = function () {
    return 'year';
  };

  YearPicker.prototype.getDisableType = function () {
    return 'year';
  };

  YearPicker.prototype.getRangeCheck = function () {
    return {
      date: {
        hasYear: true,
        hasMonth: false,
        hasDay: false
      }
    };
  };

  YearPicker.prototype.getDataSource = function (locale) {
    var validRange = this.props.validRange;
    var start = 1970;
    var end = 1970 + 300;
    var yearLocale = utils_2.get(locale, 'locale.DatePicker.year', 'å¹´');

    if (validRange) {
      start = validRange[0].getFullYear();
      end = validRange[1].getFullYear();
    }

    return [this.filterDataSource(utils_1.rangeOptions(start, end, yearLocale), function (d, it) {
      utils_1.resetMonth(d);
      utils_1.resetTime(d);
      d.setFullYear(it.value);
    }, 'year')];
  };

  YearPicker.prototype.toDate = function (values) {
    var d = new Date();
    d.setFullYear(values[0]);
    utils_1.resetMonth(d);
    utils_1.resetTime(d);
    return d;
  };

  YearPicker.prototype.toValues = function (d) {
    return [d.getFullYear()];
  };

  return YearPicker;
}(base_picker_1.default);

exports.default = YearPicker;