"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var date_picker_1 = tslib_1.__importDefault(require("../embed-picker/date-picker"));

var dayjs_1 = tslib_1.__importDefault(require("dayjs"));

var utils_1 = require("../../utils");

var EmbedMinutePicker = function (_super) {
  tslib_1.__extends(EmbedMinutePicker, _super);

  function EmbedMinutePicker() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  EmbedMinutePicker.prototype.getStep = function () {
    return 'minute';
  };

  EmbedMinutePicker.prototype.getDisableType = function () {
    return 'minute';
  };

  EmbedMinutePicker.prototype.getRangeCheck = function () {
    return {
      date: {
        hasYear: true,
        hasMonth: true,
        hasDay: true
      },
      time: {
        hasHour: true,
        hasMinute: true,
        hasSecond: false
      }
    };
  };

  EmbedMinutePicker.prototype.getDataSource = function (locale) {
    var _this = this;

    var result = _super.prototype.getDataSource.call(this, locale);

    var hourLocale = utils_1.get(locale, 'locale.DatePicker.hour', '时');
    var minuteLocale = utils_1.get(locale, 'locale.DatePicker.minute', '分');
    var year = this.value.getFullYear();
    var month = this.value.getMonth();
    var date = this.value.getDate();
    var hourOpts = utils_1.range(24).map(function (_, index) {
      return {
        label: "" + index + hourLocale,
        value: index
      };
    });
    var minuteOpts = utils_1.range(60).map(function (_, index) {
      return {
        label: "" + index + minuteLocale,
        value: index
      };
    });
    return tslib_1.__spreadArrays(result, [this.filterDataSource(hourOpts, function (d, it) {
      d.setMinutes(0);
      d.setMilliseconds(0);
      d.setFullYear(year);
      d.setMonth(month);
      d.setDate(date);
      d.setHours(it.value);
    }, 'hour'), this.filterDataSource(minuteOpts, function (d, it) {
      d.setMilliseconds(0);
      d.setFullYear(year);
      d.setMonth(month);
      d.setDate(date);
      d.setHours(_this.value.getHours());
      d.setMinutes(it.value);
    }, 'minute')]);
  };

  EmbedMinutePicker.prototype.toDate = function (values) {
    var d = _super.prototype.toDate.call(this, values);

    return dayjs_1.default(d).month(values[1] - 1).date(values[2]).hour(values[3]).minute(values[4]).toDate();
  };

  EmbedMinutePicker.prototype.toValues = function (d) {
    var values = _super.prototype.toValues.call(this, d);

    return tslib_1.__spreadArrays(values, [d.getHours(), d.getMinutes()]);
  };

  return EmbedMinutePicker;
}(date_picker_1.default);

exports.default = EmbedMinutePicker;