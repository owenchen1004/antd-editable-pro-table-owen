"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var utils_1 = require("../utils");

require("./styles/index.css");

var View = rax_1.forwardRef(function (props, ref) {
  var _a;

  var selfRef = rax_1.useRef(null);

  var onFirstAppear = props.onFirstAppear,
      _b = props.prefix,
      prefix = _b === void 0 ? 'mt-' : _b,
      className = props.className,
      hasSafeArea = props.hasSafeArea,
      onAppear = props.onAppear,
      _c = props.withoutTouch,
      withoutTouch = _c === void 0 ? true : _c,
      rest = tslib_1.__rest(props, ["onFirstAppear", "prefix", "className", "hasSafeArea", "onAppear", "withoutTouch"]);

  var newClsName = classnames_1.default(className, (_a = {}, _a[prefix + "view-safe-area"] = hasSafeArea, _a));

  if (utils_1.isStrictMiniApp) {
    return withoutTouch ? rax_1.createElement("view", tslib_1.__assign({}, rest, {
      className: newClsName,
      onAppear: onAppear,
      onDisappear: rest.onDisappear,
      onFirstAppear: onFirstAppear,
      ref: ref
    })) : rax_1.createElement("div", tslib_1.__assign({}, rest, {
      className: newClsName,
      onAppear: onAppear,
      onDisappear: rest.onDisappear,
      onFirstAppear: onFirstAppear,
      ref: ref
    }));
  }

  var handleAppear = onAppear;

  if (onFirstAppear) {
    handleAppear = function (event) {
      if (onAppear) {
        onAppear(event);
      }

      if (!selfRef.triggeredAppear) {
        if (onFirstAppear) {
          onFirstAppear(event);
        }
      } else {
        selfRef.triggeredAppear = true;
      }
    };
  }

  return rax_1.createElement("div", tslib_1.__assign({}, rest, {
    className: newClsName,
    onAppear: handleAppear,
    ref: ref
  }));
});
View.displayName = 'View';
exports.default = View;