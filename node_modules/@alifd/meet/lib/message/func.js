"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loading = exports.help = exports.notice = exports.error = exports.success = exports.show = exports.hide = void 0;

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var render_1 = require("../utils/render");

var message_1 = tslib_1.__importDefault(require("./message"));

var view_1 = tslib_1.__importDefault(require("../view"));

var utils_1 = require("../utils");

var hideCurrent = null;

exports.hide = function () {
  if (hideCurrent) {
    hideCurrent();
  }

  hideCurrent = null;
};

exports.show = function (options) {
  var _a = options.shape,
      shape = _a === void 0 ? 'toast' : _a,
      _b = options.prefix,
      prefix = _b === void 0 ? 'mt-' : _b,
      _c = options.duration,
      duration = _c === void 0 ? 1500 : _c,
      content = options.content,
      type = options.type,
      onClose = options.onClose,
      other = tslib_1.__rest(options, ["shape", "prefix", "duration", "content", "type", "onClose"]);

  exports.hide();
  var hideThis = render_1.renderToRoot(rax_1.createElement(view_1.default, {
    "disable-scroll": true
  }, rax_1.createElement(message_1.default, tslib_1.__assign({
    visible: true,
    shape: shape,
    type: type
  }, other), content), rax_1.createElement(view_1.default, {
    "disable-scroll": true,
    className: prefix + "message" + "-mask"
  })), onClose);
  hideCurrent = hideThis;

  if (duration > 0) {
    if (type === 'loading' && !('duration' in options)) {
      return hideThis;
    }

    setTimeout(function () {
      hideThis();

      if (hideCurrent === hideThis) {
        hideCurrent = null;
      }
    }, duration);
  }

  return hideThis;
};

var handleFastCall = function (type, options) {
  var opts;

  if (utils_1.isString(options)) {
    opts = {
      title: options
    };
  } else {
    opts = options;
  }

  return exports.show(tslib_1.__assign(tslib_1.__assign({}, opts), {
    type: type
  }));
};

exports.success = handleFastCall.bind(null, 'success');
exports.error = handleFastCall.bind(null, 'error');
exports.notice = handleFastCall.bind(null, 'notice');
exports.help = handleFastCall.bind(null, 'help');
exports.loading = handleFastCall.bind(null, 'loading');