"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var view_1 = tslib_1.__importDefault(require("../../view"));

var icon_1 = tslib_1.__importDefault(require("../../icon"));

var progress_1 = tslib_1.__importDefault(require("../../progress"));

var Card = rax_1.memo(function (props) {
  var file = props.file,
      _onClick = props.onClick,
      onReUpload = props.onReUpload,
      onRemove = props.onRemove,
      _a = props.hasRemove,
      hasRemove = _a === void 0 ? true : _a,
      _b = props.progressProps,
      progressProps = _b === void 0 ? {} : _b,
      style = props.style,
      reUpload = props.reUpload;
  var clsPrefix = props.prefix || 'mt-upload';
  return rax_1.createElement(view_1.default, {
    key: file.uid,
    className: classnames_1.default(clsPrefix + "-item", clsPrefix + "-item--card", clsPrefix + "-item--" + file.state),
    style: style
  }, file.state !== 'error' && (file.imgURL ? rax_1.createElement(view_1.default, {
    className: clsPrefix + "-item-preview",
    onClick: function onClick(e) {
      return _onClick && _onClick(file, e);
    },
    style: {
      backgroundImage: "url(" + file.imgURL + ")"
    }
  }) : rax_1.createElement(view_1.default, {
    className: clsPrefix + "-item-waiting"
  }, rax_1.createElement(icon_1.default, {
    className: clsPrefix + "-item-icon",
    name: "picture"
  }))), file.state === 'uploading' && rax_1.createElement(progress_1.default, tslib_1.__assign({
    className: clsPrefix + "-item-progress",
    percent: file.percent || 0
  }, progressProps)), file.state === 'error' && rax_1.createElement(view_1.default, {
    className: clsPrefix + "-item-error",
    onClick: function onClick() {
      return onReUpload && onReUpload(file);
    }
  }, rax_1.createElement(icon_1.default, {
    className: classnames_1.default(clsPrefix + "-item-icon", clsPrefix + "-item-icon--small", clsPrefix + "-item-icon--error"),
    name: "upload"
  }), reUpload), (file.state === 'done' || file.state === 'error') && hasRemove && rax_1.createElement(view_1.default, {
    className: clsPrefix + "-item-remove",
    onClick: function onClick() {
      return onRemove && onRemove(file);
    }
  }, rax_1.createElement(icon_1.default, {
    className: clsPrefix + "-item-remove-icon",
    name: "minus"
  })));
});
exports.default = Card;