"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var rax_text_1 = tslib_1.__importDefault(require("rax-text"));

var button_1 = tslib_1.__importDefault(require("../../button/button"));

var drawer_1 = tslib_1.__importDefault(require("../../drawer/drawer"));

var list_1 = tslib_1.__importDefault(require("../../list"));

var utils_1 = require("../../utils");

var view_1 = tslib_1.__importDefault(require("../../view"));

var option_1 = tslib_1.__importDefault(require("../option"));

var safe_area_1 = tslib_1.__importDefault(require("../../safe-area"));

var util_1 = require("../util");

function SelectedListDrawer(props) {
  var prefix = props.prefix,
      innerValue = props.innerValue,
      locale = props.locale;
  var visible = props.visible,
      onOk = props.onOk,
      onCancel = props.onCancel;
  var clsPrefix = prefix + "select";

  var _a = rax_1.useState([]),
      selectedList = _a[0],
      setSelectedList = _a[1];

  var handleItemClick = function (item) {
    var isSelected = utils_1.findInArray(selectedList, function (it) {
      return it.value === item.value;
    });

    if (isSelected) {
      var arr = util_1.removeItemFromArray(selectedList, item.value);
      setSelectedList(arr);
    } else {
      setSelectedList(tslib_1.__spreadArrays(selectedList, [item]));
    }
  };

  rax_1.useEffect(function () {
    return setSelectedList(innerValue);
  }, [innerValue]);
  return rax_1.createElement(drawer_1.default, {
    visible: visible,
    closeMode: ['mask'],
    className: clsPrefix + "-confirm-drawer",
    containerClassName: clsPrefix + "-confirm-drawer-container",
    onClose: onCancel
  }, rax_1.createElement(view_1.default, {
    className: clsPrefix + "-confirm-drawer-header"
  }, rax_1.createElement(rax_text_1.default, {
    className: clsPrefix + "-confirm-total"
  }, locale.totalPrefixText, " ", selectedList.length, " ", locale.totalSuffixText), rax_1.createElement(button_1.default, {
    type: "primary",
    model: "text",
    onClick: function handleOk() {
      return onOk(selectedList);
    }
  }, locale.secondaryOkText)), rax_1.createElement(view_1.default, {
    className: clsPrefix + "-confirm-drawer-body"
  }, rax_1.createElement(list_1.default, null, innerValue.map(function (item) {
    var selected = utils_1.findInArray(selectedList, function (it) {
      return it.value === item.value;
    });
    return rax_1.createElement(option_1.default, {
      selected: selected,
      key: item.value,
      onClick: function onClick() {
        return handleItemClick(item);
      }
    }, item.label);
  }))), rax_1.createElement(safe_area_1.default, {
    className: clsPrefix + "-safe-area"
  }));
}

exports.default = SelectedListDrawer;
SelectedListDrawer.displayName = 'SelectedListDrawer';