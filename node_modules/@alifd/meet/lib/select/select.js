"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_1 = require("rax");

var rax_text_1 = tslib_1.__importDefault(require("rax-text"));

var utils_1 = require("../utils");

var view_1 = tslib_1.__importDefault(require("../view"));

var base_select_1 = tslib_1.__importDefault(require("./base-select"));

var util_1 = require("./util");

var Select = function (props, ref) {
  var isPreview = props.isPreview,
      previewClassNameProp = props.previewClassName,
      previewStyle = props.previewStyle,
      renderPreview = props.renderPreview,
      _a = props.prefix,
      prefix = _a === void 0 ? 'mt-' : _a,
      _b = props.size,
      size = _b === void 0 ? 'medium' : _b;
  var values = util_1.getPreviewValue(props);
  var previewClassName = classnames_1.default(previewClassNameProp, prefix + "form-item-input--preview-" + size);

  if (isPreview) {
    if (utils_1.isFunction(renderPreview)) {
      return rax_1.createElement(view_1.default, {
        className: previewClassName,
        style: previewStyle
      }, renderPreview(values, props));
    }

    var directRenderVal = '';

    if (Array.isArray(values)) {
      directRenderVal = values.map(function (v) {
        return v.label;
      }).join(',');
    } else if (values && values.label) {
      directRenderVal = values.label;
    }

    return rax_1.createElement(rax_text_1.default, {
      className: previewClassName,
      style: previewStyle
    }, directRenderVal);
  }

  return rax_1.createElement(base_select_1.default, tslib_1.__assign({}, props, {
    ref: ref
  }));
};

Select.displayName = 'Select';
exports.default = rax_1.forwardRef(Select);