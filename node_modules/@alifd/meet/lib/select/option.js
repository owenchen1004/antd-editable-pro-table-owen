"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_1 = require("rax");

var checkbox_1 = tslib_1.__importDefault(require("../checkbox"));

var list_1 = tslib_1.__importDefault(require("../list"));

var context_1 = tslib_1.__importDefault(require("./context"));

var Option = function (props) {
  var _a;

  var _b = props.disabled,
      disabled = _b === void 0 ? false : _b,
      children = props.children,
      className = props.className,
      value = props.value,
      _c = props.isNew,
      isNew = _c === void 0 ? false : _c,
      _d = props.onClick,
      _onClick = _d === void 0 ? function () {} : _d,
      _e = props.selected,
      selected = _e === void 0 ? false : _e,
      title = props.title,
      others = tslib_1.__rest(props, ["disabled", "children", "className", "value", "isNew", "onClick", "selected", "title"]);

  var prefix = rax_1.useContext(context_1.default).prefix;
  var clsPrefix = prefix + "select-option";
  return rax_1.createElement(list_1.default.Item, tslib_1.__assign({}, others, {
    className: classnames_1.default(clsPrefix, className, (_a = {}, _a[clsPrefix + "--disabled"] = disabled, _a)),
    title: children || title,
    media: rax_1.createElement(list_1.default.ItemMedia, null, rax_1.createElement(checkbox_1.default, {
      checked: selected,
      disabled: disabled || isNew,
      className: clsPrefix + "-checkbox"
    })),
    onClick: function onClick() {
      if (!disabled) {
        _onClick(value);
      }
    }
  }));
};

Option.displayName = 'SelectOption';
exports.default = rax_1.forwardRef(Option);