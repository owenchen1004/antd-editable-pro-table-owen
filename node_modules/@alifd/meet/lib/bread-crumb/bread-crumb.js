"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_children_1 = tslib_1.__importDefault(require("rax-children"));

var rax_clone_element_1 = tslib_1.__importDefault(require("rax-clone-element"));

var rax_is_valid_element_1 = tslib_1.__importDefault(require("rax-is-valid-element"));

var rax_scrollview_1 = tslib_1.__importDefault(require("rax-scrollview"));

var view_1 = tslib_1.__importDefault(require("../view"));

var utils_1 = require("../utils");

var BreadCrumb = function (props, ref) {
  var _a, _b;

  var _c = props.className,
      className = _c === void 0 ? '' : _c,
      _d = props.prefix,
      prefix = _d === void 0 ? 'mt-' : _d,
      _e = props.size,
      size = _e === void 0 ? 'medium' : _e,
      _f = props.maxNode,
      maxNode = _f === void 0 ? 100 : _f,
      _g = props.disabled,
      disabled = _g === void 0 ? false : _g,
      _h = props.onClick,
      onClick = _h === void 0 ? function () {} : _h,
      separator = props.separator,
      children = props.children;
  var count = rax_children_1.default.count(children);
  var clsPrefix = prefix + "breadcrumb";
  return rax_1.createElement(rax_scrollview_1.default, {
    ref: ref,
    className: classnames_1.default(className, clsPrefix, (_a = {}, _a[clsPrefix + "--" + size] = utils_1.isStrictWechatMiniProgram, _a)),
    showsHorizontalScrollIndicator: false,
    horizontal: true
  }, rax_1.createElement(view_1.default, {
    className: classnames_1.default(clsPrefix + "-container", (_b = {}, _b[clsPrefix + "-container--" + size] = utils_1.isStrictWechatMiniProgram, _b))
  }, rax_children_1.default.map(children, function (child, index) {
    if (!rax_is_valid_element_1.default(child)) {
      return null;
    }

    return rax_clone_element_1.default(child, {
      key: index,
      index: index,
      size: size,
      last: index === count - 1 && rax_is_valid_element_1.default(child),
      disabledAll: disabled,
      maxNode: maxNode,
      count: count,
      onClick: onClick,
      separator: separator
    });
  })));
};

BreadCrumb.displayName = 'BreadCrumb';
exports.default = rax_1.forwardRef(BreadCrumb);