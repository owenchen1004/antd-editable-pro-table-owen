"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_children_1 = tslib_1.__importDefault(require("rax-children"));

var rax_is_valid_element_1 = tslib_1.__importDefault(require("rax-is-valid-element"));

var rax_clone_element_1 = tslib_1.__importDefault(require("rax-clone-element"));

var rax_text_1 = tslib_1.__importDefault(require("rax-text"));

var icon_1 = tslib_1.__importDefault(require("../icon"));

var utils_1 = require("../utils");

var CreateChildren = function (children, classes, prefix, size) {
  var count = rax_children_1.default.count(children);
  return rax_children_1.default.map(children, function (child, index) {
    var _a;

    if (utils_1.isNil(child) || utils_1.isBoolean(child)) {
      return null;
    }

    var key = child.key || "mt-tag-" + index;

    if (utils_1.isNumber(child) || utils_1.isString(child)) {
      return rax_1.createElement(rax_text_1.default, {
        key: key,
        className: classes.textCls
      }, child);
    }

    if (!rax_is_valid_element_1.default(child)) {
      return child;
    }

    switch (true) {
      case child.type === rax_text_1.default:
        return rax_clone_element_1.default(child, {
          key: key,
          className: classes.textCls,
          style: child.props.style || {}
        });

      case child.type === icon_1.default:
        return rax_clone_element_1.default(child, {
          key: key,
          className: classnames_1.default(classes.iconCls, (_a = {}, _a[prefix + "tag-icon--" + size + "-first"] = index === 0, _a[prefix + "tag-icon--" + size + "-last"] = index === count - 1, _a)),
          style: child.props.style || {}
        });

      default:
        return rax_clone_element_1.default(child, {
          key: key
        });
    }
  });
};

exports.default = CreateChildren;