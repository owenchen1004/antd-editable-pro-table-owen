"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var view_1 = tslib_1.__importDefault(require("../view"));

var icon_1 = tslib_1.__importDefault(require("../icon"));

var utils_1 = require("../utils");

var ARROW_ICON_MAP = {
  right: 'arrow-right',
  up: 'arrow-up',
  down: 'arrow-down',
  loading: 'loading'
};

var Card = function (props) {
  var _a;

  var _b = props.prefix,
      prefix = _b === void 0 ? 'mt-' : _b,
      _c = props.showHeadDivider,
      showHeadDivider = _c === void 0 ? true : _c,
      media = props.media,
      arrow = props.arrow,
      extra = props.extra,
      title = props.title,
      className = props.className,
      headerClassName = props.headerClassName,
      headerStyle = props.headerStyle,
      bodyClassName = props.bodyClassName,
      footerClassName = props.footerClassName,
      contentHeight = props.contentHeight,
      _d = props.bodyStyle,
      bodyStyle = _d === void 0 ? {} : _d,
      _e = props.footerStyle,
      footerStyle = _e === void 0 ? {} : _e,
      actions = props.actions,
      children = props.children,
      _f = props.onHeaderClick,
      onHeaderClick = _f === void 0 ? utils_1.noop : _f,
      _g = props.onBodyClick,
      onBodyClick = _g === void 0 ? utils_1.noop : _g,
      others = tslib_1.__rest(props, ["prefix", "showHeadDivider", "media", "arrow", "extra", "title", "className", "headerClassName", "headerStyle", "bodyClassName", "footerClassName", "contentHeight", "bodyStyle", "footerStyle", "actions", "children", "onHeaderClick", "onBodyClick"]);

  var clsPrefix = prefix + "card";
  var clses = {
    card: classnames_1.default(className, clsPrefix),
    header: classnames_1.default(clsPrefix + "-header", headerClassName, (_a = {}, _a[clsPrefix + "-header--no-divider"] = !showHeadDivider, _a)),
    title: clsPrefix + "-title",
    media: clsPrefix + "-media",
    extra: clsPrefix + "-extra",
    arrow: clsPrefix + "-arrow",
    body: classnames_1.default(clsPrefix + "-body", bodyClassName),
    footer: classnames_1.default(clsPrefix + "-footer", footerClassName)
  };
  var _bodyStyle = bodyStyle;

  if (utils_1.isNumber(contentHeight) && contentHeight >= 0) {
    _bodyStyle.height = contentHeight;
  }

  return rax_1.createElement(view_1.default, tslib_1.__assign({
    className: clses.card
  }, others), !utils_1.isInvalidValue(title) && !!title ? rax_1.createElement(view_1.default, {
    className: clses.header,
    onClick: onHeaderClick,
    style: headerStyle
  }, media ? rax_1.createElement(view_1.default, {
    className: clses.media
  }, media) : null, rax_1.createElement(view_1.default, {
    className: clses.title
  }, title), extra ? rax_1.createElement(view_1.default, {
    className: clses.extra
  }, extra) : null, Object.keys(ARROW_ICON_MAP).indexOf(arrow) > -1 ? rax_1.createElement(icon_1.default, {
    className: clses.arrow,
    type: ARROW_ICON_MAP[arrow],
    size: "s"
  }) : null) : null, children ? rax_1.createElement(view_1.default, {
    className: clses.body,
    style: _bodyStyle,
    onClick: onBodyClick
  }, children) : null, utils_1.isValidArray(actions) ? rax_1.createElement(view_1.default, {
    className: clses.footer,
    style: footerStyle
  }, actions) : null);
};

Card.displayName = 'Card';
exports.default = Card;