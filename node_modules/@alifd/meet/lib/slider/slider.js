"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var rax_1 = require("rax");

var rax_slider_1 = tslib_1.__importDefault(require("rax-slider"));

var rax_children_1 = tslib_1.__importDefault(require("rax-children"));

var DIRECTION_MAP = {
  ver: 'vertical',
  hoz: 'horizontal'
};

var Slider = function (props, ref) {
  var _a = props.prefix,
      prefix = _a === void 0 ? 'mt-' : _a,
      _b = props.activeIndex,
      activeIndex = _b === void 0 ? 0 : _b,
      _c = props.showDots,
      showDots = _c === void 0 ? true : _c,
      _d = props.autoplay,
      autoplay = _d === void 0 ? false : _d,
      _e = props.autoplaySpeed,
      autoplaySpeed = _e === void 0 ? 3000 : _e,
      _f = props.dotStyle,
      dotStyle = _f === void 0 ? {} : _f,
      _g = props.onChange,
      onChange = _g === void 0 ? function () {} : _g,
      _h = props.infinite,
      infinite = _h === void 0 ? true : _h,
      _j = props.width,
      width = _j === void 0 ? 750 : _j,
      _k = props.height,
      height = _k === void 0 ? 100 : _k,
      _l = props.slideDirection,
      slideDirection = _l === void 0 ? 'hoz' : _l,
      className = props.className,
      children = props.children,
      others = tslib_1.__rest(props, ["prefix", "activeIndex", "showDots", "autoplay", "autoplaySpeed", "dotStyle", "onChange", "infinite", "width", "height", "slideDirection", "className", "children"]);

  return rax_1.createElement(rax_slider_1.default, tslib_1.__assign({}, others, {
    className: classnames_1.default(className, prefix + "slider"),
    ref: ref,
    width: "" + width,
    height: "" + height,
    autoPlay: autoplay,
    showsPagination: showDots,
    index: activeIndex,
    paginationStyle: tslib_1.__assign({
      itemColor: 'rgba(245,245,245,0.5)',
      itemSelectedColor: '#666',
      itemSize: 16,
      width: '100%',
      bottom: 16
    }, dotStyle),
    autoplay: autoplay,
    direction: DIRECTION_MAP[slideDirection] || 'horizontal',
    loop: infinite,
    autoPlayInterval: autoplaySpeed,
    onChange: function handleChange(e) {
      if (onChange) {
        onChange(e.index || 0);
      }
    }
  }), rax_children_1.default.toArray(children).filter(function (child) {
    if (!child) {
      return null;
    }

    return child;
  }));
};

Slider.displayName = 'Slider';
exports.default = rax_1.forwardRef(Slider);