import { CSSProperties, RaxNode } from 'rax';
import { ItemSize, LabelAlign, TextAlign } from './context';
import { ValidationProps } from './utils';
import { BaseComponentAttributes } from '../utils/types';
declare type ValidateState = 'normal' | 'success' | 'error';
export interface FormItemContextProps {
    isInsideForm: boolean;
    labelAlign: LabelAlign;
    validateState: ValidateState;
    labelTextAlign: TextAlign;
    contentAlign: TextAlign;
    hasFeedback: boolean;
    size: ItemSize;
}
export declare const FormItemContext: import("rax").Context<FormItemContextProps>;
export interface FormItemProps extends ValidationProps, BaseComponentAttributes {
    label?: string | RaxNode;
    labelWidth?: number | string;
    labelAlign?: LabelAlign;
    labelTextAlign?: TextAlign;
    contentAlign?: TextAlign;
    size?: ItemSize;
    help?: string;
    extra?: string;
    embedded?: boolean;
    validateState?: ValidateState;
    hasFeedback?: boolean;
    isPreview?: boolean;
    previewClassName?: string;
    previewStyle?: CSSProperties;
    renderPreview?: false | ((...values: any) => RaxNode);
    valuePropName?: string;
    children?: any;
}
declare const _default: import("rax").ForwardRefExoticComponent<FormItemProps & import("rax").RefAttributes<any>>;
export default _default;
