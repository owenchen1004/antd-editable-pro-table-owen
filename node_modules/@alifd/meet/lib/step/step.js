"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var rax_1 = require("rax");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var universal_element_1 = require("universal-element");

var rax_children_1 = tslib_1.__importDefault(require("rax-children"));

var rax_is_valid_element_1 = tslib_1.__importDefault(require("rax-is-valid-element"));

var rax_clone_element_1 = tslib_1.__importDefault(require("rax-clone-element"));

var rax_scrollview_1 = tslib_1.__importDefault(require("rax-scrollview"));

var view_1 = tslib_1.__importDefault(require("../view"));

var item_1 = tslib_1.__importDefault(require("./item"));

var utils_1 = require("../utils");

var hooks_1 = require("../utils/hooks");

var getCurrent = function (props) {
  var current = props.current,
      children = props.children;
  var childCount = rax_children_1.default.count(children);
  var newCurrent = current;

  if (isNaN(current) || current < -1) {
    newCurrent = -1;
  } else if (current > childCount) {
    newCurrent = childCount - 1;
  }

  return newCurrent;
};

var Step = function (props, ref) {
  var _a, _b;

  var _c = props.prefix,
      prefix = _c === void 0 ? 'mt-' : _c,
      _d = props.shape,
      shape = _d === void 0 ? 'circle' : _d,
      children = props.children,
      _e = props.disabled,
      disabled = _e === void 0 ? false : _e,
      _f = props.readOnly,
      readOnly = _f === void 0 ? false : _f,
      _g = props.direction,
      directionProp = _g === void 0 ? 'hoz' : _g,
      className = props.className,
      onChange = props.onChange;
  var clsPrefix = prefix + "step";
  var direction = shape === 'arrow' ? 'hoz' : directionProp;

  var _h = rax_1.useState(false),
      isOverflow = _h[0],
      setOverflow = _h[1];

  var clses = {
    step: classnames_1.default(className, "" + clsPrefix, (_a = {}, _a[clsPrefix + "--scroll"] = isOverflow, _a[clsPrefix + "--wechat-" + shape] = utils_1.isStrictWechatMiniProgram && direction === 'hoz', _a)),
    container: classnames_1.default(clsPrefix + "-container", clsPrefix + "-container--" + direction, (_b = {}, _b[clsPrefix + "-container--scroll"] = isOverflow, _b))
  };
  var validChildren = rax_children_1.default.toArray(children).filter(function (child) {
    return rax_is_valid_element_1.default(child) && child.type === item_1.default;
  }) || [];
  var childrenCount = validChildren.length;
  var current = getCurrent(props);
  var disabledIndexes = validChildren.map(function (child, index) {
    return disabled || utils_1.get(child, 'props.disabled') ? index : null;
  }).filter(function (item) {
    return item !== null;
  });
  var stepId = hooks_1.useGuid('step-');
  var stepContainerId = hooks_1.useGuid('step-container-');
  var Parent = direction === 'hoz' ? rax_scrollview_1.default : view_1.default;

  if (shape === 'arrow' && directionProp === 'ver') {
    console.warn('arrow shape support hoz direction only');
  }

  rax_1.useEffect(function () {
    (function () {
      return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var width, containerWidth, ele;
        return tslib_1.__generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              return [4, utils_1.getWidth(stepId)];

            case 1:
              width = _a.sent();
              return [4, utils_1.getWidth(stepContainerId)];

            case 2:
              containerWidth = _a.sent();

              if (utils_1.isStrictWechatMiniProgram) {
                ele = document.getElementById(stepContainerId);

                if (ele && ele._internal) {
                  universal_element_1.getBoundingClientRect("#" + stepId, ele._internal).then(function (res) {
                    if (res && res[0] && res[0].width) {
                      var w = res[0].width;
                      setOverflow(w >= containerWidth);
                    }
                  });
                }
              } else {
                setOverflow(width >= containerWidth);
              }

              return [2];
          }
        });
      });
    })();
  });
  return rax_1.createElement(Parent, {
    id: stepContainerId,
    ref: ref,
    className: clses.step,
    horizontal: true
  }, rax_1.createElement(view_1.default, {
    id: stepId,
    className: clses.container
  }, function renderChildren() {
    return validChildren.map(function (child, index) {
      var childProps = child.props;

      var childDisabled = childProps.disabled,
          childStatusProp = childProps.status,
          childClassName = childProps.className,
          childOnClick = childProps.onClick,
          others = tslib_1.__rest(childProps, ["disabled", "status", "className", "onClick"]);

      var status = childStatusProp;

      if (!childStatusProp) {
        status = 'wait';

        if (index === current) {
          status = 'process';
        } else if (index < current) {
          status = 'finish';
        }
      }

      return rax_clone_element_1.default(child, tslib_1.__assign(tslib_1.__assign({
        key: "mt_step_" + index
      }, others), {
        order: index,
        isFirst: index === 0,
        isLast: index === childrenCount - 1,
        isPreDisabled: disabledIndexes.indexOf(index - 1) > -1,
        shape: shape,
        direction: direction,
        status: status,
        prefix: prefix,
        onClick: function onClick() {
          if (childOnClick) {
            childOnClick(index);
          }

          if (onChange && !readOnly && !disabled && !childDisabled) {
            onChange(index);
          }
        },
        className: classnames_1.default(childClassName, clsPrefix + "-item--" + direction)
      }));
    });
  }()));
};

Step.displayName = 'Step';
exports.default = rax_1.forwardRef(Step);