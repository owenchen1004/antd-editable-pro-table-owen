function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import fmtEvent from './fmtEvent';
var noop = function () {};

/**
 * supportMethods
 *
 * @see https://opendocs.alipay.com/mini/component/video
 */
var supportMethods = ['onPlay', 'onPause', 'onEnded', 'onTimeUpdate', 'onLoading', 'onStop', 'onRenderStart', 'onError', 'onFullScreenChange', 'onClick', 'onUserAction'];
var componentProps = supportMethods.reduce(function (prev, current) {
  prev[current] = noop;
  return prev;
}, {});
var componentMethods = supportMethods.reduce(function (prev, current) {
  prev[current] = function (e) {
    var event = fmtEvent(this.props, e);
    this.props[current](event);
  };
  return prev;
}, {});
console.warn('组件所依赖的 rax-video 版本较旧，请尽快重新构建发布该组件');
Component({
  data: {},
  props: _extends({
    src: '',
    controls: true,
    autoPlay: false,
    loop: false,
    style: '',
    className: '',
    muted: false,
    id: '',
    extraInfo: {},
    mobilenetHintType: 1,
    showMuteBtn: true,
    showPlayBtn: true,
    showFullscreenBtn: true,
    showCenterPlayBtn: true,
    showThinProgressBar: false,
    objectFit: 'contain',
    enableNative: false
  }, componentProps),
  methods: _extends({}, componentMethods)
});