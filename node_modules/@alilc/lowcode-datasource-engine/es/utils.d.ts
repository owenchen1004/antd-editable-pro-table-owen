import { CompositeValue, IDataSourceRuntimeContext, InterpretDataSourceConfig, JSExpression, JSFunction, JSONObject, RuntimeOptionsConfig } from '@alilc/lowcode-types';
export declare const transformExpression: (code: string, context: IDataSourceRuntimeContext) => any;
export declare const transformFunction: (code: string, context: IDataSourceRuntimeContext) => any;
export declare const transformBoolStr: (str: string) => boolean;
export declare const getRuntimeJsValue: (value: JSExpression | JSFunction, context: IDataSourceRuntimeContext) => any;
export declare const getRuntimeBaseValue: (type: string, value: any) => any;
export declare const getRuntimeValueFromConfig: (type: string, value: CompositeValue, context: IDataSourceRuntimeContext) => any;
export declare const buildJsonObj: (params: JSONObject | JSExpression, context: IDataSourceRuntimeContext) => any;
export declare const buildShouldFetch: (ds: InterpretDataSourceConfig, context: IDataSourceRuntimeContext) => any;
export declare const buildOptions: (ds: InterpretDataSourceConfig, context: IDataSourceRuntimeContext) => (() => RuntimeOptionsConfig) | undefined;
