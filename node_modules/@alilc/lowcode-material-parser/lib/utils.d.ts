import { DSLType } from './types';
export declare function isNPMInstalled(args: {
    workDir: string;
    moduleDir: string;
    npmClient?: string;
}): Promise<boolean>;
export declare function isNPMModuleInstalled(args: {
    workDir: string;
    moduleDir: string;
    npmClient?: string;
}, name: string): Promise<boolean>;
export declare function install(args: {
    workDir: string;
    moduleDir: string;
    npmClient?: string;
}): Promise<void>;
export declare function installModule(args: {
    workDir: string;
    moduleDir: string;
    npmClient?: string;
}, name: string): Promise<void>;
export declare function installTypeDTS(args: {
    workDir: string;
    moduleDir: string;
    npmClient?: string;
    dslType?: DSLType;
}): Promise<void>;
export declare function installTypeScript(args: {
    workDir: string;
    moduleDir: string;
    npmClient?: string;
}): Promise<void>;
export declare function installPeerAndDevDeps(args: {
    workDir: string;
    moduleDir: string;
    npmClient?: string;
}): Promise<void>;
export declare function syncTypeModules(args: {
    workDir: string;
    moduleDir: string;
    npmClient?: string;
}): Promise<void>;
export declare function resolvePkgJson(pkgJsonPath: string): Promise<{
    [k: string]: any;
}>;
export declare function loadFile(filePath: string): string;
export declare function isPrimitive(val: any): boolean;
export declare function isEvaluable(value: any): any;
export declare function safeEval(value: any): any;
