"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const ast_types_1 = require("ast-types");
const isReactComponentStaticMember_1 = tslib_1.__importDefault(require("./isReactComponentStaticMember"));
const { match } = require('react-docgen').utils;
const { traverseShallow } = require('react-docgen/dist/utils/traverse');
function findAssignedMethods(scope, idPath) {
    const results = [];
    if (!ast_types_1.namedTypes.Identifier.check(idPath.node)) {
        return results;
    }
    const { name } = idPath.node;
    // const idScope = idPath.scope.lookup(idPath.node.name);
    traverseShallow(scope.path, {
        visitAssignmentExpression(path) {
            const { node } = path;
            if (match(node.left, {
                type: 'MemberExpression',
                object: { type: 'Identifier', name },
            })
            // && path.scope.lookup(name) === idScope
            ) {
                results.push(path);
                return false;
            }
            return this.traverse(path);
        },
    });
    return results.filter((x) => !isReactComponentStaticMember_1.default(x.get('left')));
}
exports.default = findAssignedMethods;
//# sourceMappingURL=findAssignedMethods.js.map